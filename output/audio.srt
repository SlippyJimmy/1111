1
00:00:00,000 --> 00:00:03,000
Hey  guys  this  is  Mitch  with  Fineboy  CGI  and  today  we're  going

2
00:00:03,000 --> 00:00:06,000
to  continue  our  Nakama  tutorial  series

3
00:00:07,000 --> 00:00:11,000
where  I  take  you  from  zero  to  understanding  all  the  fundamentals  of

4
00:00:11,000 --> 00:00:13,000
Nakama  and  in  this  video  we're

5
00:00:13,000 --> 00:00:16,000
going  to  talk  about  how  to  do  groups  so  that's  going  to

6
00:00:16,000 --> 00:00:18,000
allow  you  to  add  users  to  like  a  guild

7
00:00:18,000 --> 00:00:21,000
or  like  a  group  setting  then  we're  going  to  talk  about  doing

8
00:00:21,000 --> 00:00:24,000
chats  and  chatting  between  each  other

9
00:00:24,000 --> 00:00:29,000
so  sending  messages  to  each  other  and  finally  due  to  popular  requests

10
00:00:29,000 --> 00:00:30,000
I'm  going  to  talk  about  how  to

11
00:00:30,000 --> 00:00:34,000
host  your  Nakama  instance  out  on  the  internet  so  that  you  can

12
00:00:34,000 --> 00:00:36,000
play  games  with  your  friends  or  of

13
00:00:36,000 --> 00:00:40,000
course  you  can  release  your  game  out  to  make  it  into  a

14
00:00:40,000 --> 00:00:42,000
multiplayer  game  so  that's  what  I  have  in

15
00:00:42,000 --> 00:00:45,000
store  for  you  guys  today  so  let's  go  ahead  and  get  started

16
00:00:45,000 --> 00:00:50,000
all  right  so  this  tutorial  assumes  that  you

17
00:00:50,000 --> 00:00:54,000
already  completed  the  previous  tutorial  where  we  actually  integrated  Nakama  for  the

18
00:00:54,000 --> 00:00:54,000
most  part

19
00:00:54,000 --> 00:00:58,000
so  this  one's  going  to  be  going  over  more  of  the  features

20
00:00:58,000 --> 00:01:00,000
and  things  like  that  that  are  available

21
00:01:00,000 --> 00:01:03,000
to  you  so  let's  go  ahead  and  get  started  with  that  and

22
00:01:03,000 --> 00:01:05,000
the  first  thing  we're  going  to  talk  about  is

23
00:01:05,000 --> 00:01:12,000
creating  groups  so  groups  are  basically  like  a  guild  or  a  team

24
00:01:12,000 --> 00:01:14,000
of  people  that  want  to  play  with  each

25
00:01:14,000 --> 00:01:18,000
other  multiple  times  not  necessarily  as  a  party  but  as  an  actual

26
00:01:18,000 --> 00:01:19,000
group  so  after  the  game  is

27
00:01:19,000 --> 00:01:23,000
ended  and  everything  is  done  you  still  have  access  to  that  group

28
00:01:23,000 --> 00:01:25,000
of  people  so  the  first  thing  that

29
00:01:25,000 --> 00:01:27,000
I'm  going  to  do  is  I'm  going  to  come  in  here  and

30
00:01:27,000 --> 00:01:29,000
I'm  going  to  hide  our  friends  section  because  we're

31
00:01:29,000 --> 00:01:33,000
actually  running  out  of  space  here  and  I  really  should  name  all

32
00:01:33,000 --> 00:01:34,000
of  these  but  that's  probably  going

33
00:01:34,000 --> 00:01:36,000
to  break  all  of  my  code  so  we'll  go  ahead  and  just

34
00:01:36,000 --> 00:01:39,000
hide  that  panel  go  ahead  and  add  in  a  new  panel

35
00:01:40,000 --> 00:01:44,000
like  so  I'm  going  to  go  over  here  make  it  about  this

36
00:01:44,000 --> 00:01:47,000
big  give  or  take  I'm  going  to  right  click  add

37
00:01:47,000 --> 00:01:52,000
a  child  node  we'll  add  in  a  label  like  that  we're  going

38
00:01:52,000 --> 00:01:56,000
to  make  it  about  this  big  and  we'll  have  a

39
00:01:57,000 --> 00:02:03,000
name  parameter  there  we'll  go  ahead  and  duplicate  it  and  say  description

40
00:02:07,000 --> 00:02:10,000
and  then  we'll  come  in  here  right  click  add  in  a  child

41
00:02:10,000 --> 00:02:13,000
node  and  we'll  add  in  a  line  edit  like  so

42
00:02:13,000 --> 00:02:17,000
and  we'll  make  it  about  this  big  give  or  take  we'll  control

43
00:02:17,000 --> 00:02:19,000
duplicate  that  and  we'll  make  it  about

44
00:02:19,000 --> 00:02:23,000
this  big  I  mean  technically  the  description  should  be  a  little  bit

45
00:02:23,000 --> 00:02:26,000
longer  but  that's  okay  we'll  make

46
00:02:26,000 --> 00:02:29,000
it  work  for  what  we're  going  to  do  so  that's  fine  and

47
00:02:29,000 --> 00:02:32,000
I'll  just  kind  of  organize  this  properly  then

48
00:02:32,000 --> 00:02:34,000
we'll  add  in  a  button  and  this  button  is  going  to  allow

49
00:02:34,000 --> 00:02:37,000
us  to  create  a  group  now  I'm  going  to  need

50
00:02:37,000 --> 00:02:42,000
multiple  buttons  but  for  right  now  we'll  just  do  one  I  think

51
00:02:42,000 --> 00:02:45,000
so  we'll  go  ahead  and  say  create  group

52
00:02:45,000 --> 00:02:49,000
like  so  and  I'll  probably  need  to  make  this  panel  larger  to

53
00:02:49,000 --> 00:02:50,000
be  honest  I'm  running  out  of  space  here

54
00:02:50,000 --> 00:02:53,000
so  we'll  go  ahead  and  just  make  this  a  touch  bit  bigger

55
00:02:53,000 --> 00:02:57,000
like  so  now  when  we  want  to  create  a  group

56
00:02:57,000 --> 00:03:00,000
all  we  have  to  do  is  if  we  grab  this  button  name

57
00:03:00,000 --> 00:03:04,000
it  create  group  like  so  we'll  go  into  our  node  button

58
00:03:04,000 --> 00:03:08,000
down  and  we'll  hook  that  to  our  control  node  just  like  that

59
00:03:08,000 --> 00:03:10,000
now  you'll  see  when  I  hook  it  to  the

60
00:03:10,000 --> 00:03:12,000
control  node  it  should  create

61
00:03:18,000 --> 00:03:22,000
a  create  group  button  down  function  it  looks  like  I  already  did

62
00:03:22,000 --> 00:03:24,000
this  in  a  previous  section  so  I'm  going

63
00:03:24,000 --> 00:03:27,000
to  go  ahead  and  get  rid  of  that  that's  my  fault  that

64
00:03:27,000 --> 00:03:30,000
caught  me  off  guard  real  quick  but  to  create  a

65
00:03:30,000 --> 00:03:36,000
group  all  we  have  to  do  is  say  client  dot  create  group

66
00:03:36,000 --> 00:03:39,000
async  and  then  we  can  pass  in  our  session

67
00:03:39,000 --> 00:03:42,000
like  so  and  then  we  have  to  pass  in  a  name  now

68
00:03:42,000 --> 00:03:44,000
the  name  is  whatever  the  name  is  that  we  put  as  our

69
00:03:44,000 --> 00:03:45,000
line

70
00:03:45,000 --> 00:03:47,000
edit  now  if  we  take  a  look  we  have  our  name  right

71
00:03:47,000 --> 00:03:52,000
here  so  we'll  say  group  name  and  then  group  description

72
00:03:53,000 --> 00:03:56,000
like  so  and  then  we'll  go  back  to  our  script  and  we'll

73
00:03:56,000 --> 00:04:01,000
do  dollar  sign  group  name  comma  or  dot  text

74
00:04:01,000 --> 00:04:09,000
comma  dollar  sign  group  description  dot  text  comma  and  then  you'll  see

75
00:04:09,000 --> 00:04:11,000
that  they  have  the  option  for

76
00:04:11,000 --> 00:04:15,000
an  avatar  url  now  you  don't  have  to  supply  one  but  you

77
00:04:15,000 --> 00:04:19,000
can  and  that's  really  cool  because  it  basically  would

78
00:04:19,000 --> 00:04:22,000
allow  you  to  have  some  kind  of  url  for  an  image  that

79
00:04:22,000 --> 00:04:24,000
you  could  load  for  their  group  so  I'm  going  to  put

80
00:04:24,000 --> 00:04:27,000
that  as  empty  comma  and  then  you'll  see  that  they  have  a

81
00:04:27,000 --> 00:04:30,000
language  so  we'll  say  their  main  language  is

82
00:04:30,000 --> 00:04:35,000
en  it  doesn't  really  matter  necessarily  but  it  is  a  thing  that

83
00:04:35,000 --> 00:04:39,000
exists  and  actually  I  need  to  I'm  messing

84
00:04:39,000 --> 00:04:42,000
up  my  little  things  here  we'll  put  an  empty  url  we'll  put

85
00:04:42,000 --> 00:04:48,000
a  en  for  the  avatar  title  and  then  you

86
00:04:48,000 --> 00:04:51,000
can  choose  whether  or  not  it's  an  open  or  if  it's  not

87
00:04:51,000 --> 00:04:55,000
so  an  open  means  if  it's  a  public  group  so  if

88
00:04:55,000 --> 00:04:59,000
people  can  actually  see  it  and  index  it  for  other  people  so

89
00:04:59,000 --> 00:05:01,000
if  you  say  false  then  it's  a  private  group

90
00:05:01,000 --> 00:05:05,000
so  if  you  don't  want  it  to  be  listable  which  we'll  discuss

91
00:05:05,000 --> 00:05:08,000
listing  in  a  little  bit  but  it  allows  you  to

92
00:05:08,000 --> 00:05:10,000
basically  say  is  this  a  listable  group  so  I'm  going  to  say

93
00:05:10,000 --> 00:05:12,000
true  because  it  makes  sense  to  have  a  listable

94
00:05:12,000 --> 00:05:15,000
group  and  then  you  can  have  a  max  number  of  members  now

95
00:05:15,000 --> 00:05:19,000
once  this  is  set  you  cannot  change  it

96
00:05:19,000 --> 00:05:21,000
so  make  sure  you  set  it  to  a  value  that  you  want

97
00:05:21,000 --> 00:05:25,000
so  if  a  guild  can  only  have  64  members  then  you  set

98
00:05:25,000 --> 00:05:28,000
it  to  64  if  it's  100  members  then  you  can  set  it

99
00:05:28,000 --> 00:05:31,000
to  100  so  in  my  case  I'm  going  to  say  32  just

100
00:05:31,000 --> 00:05:31,000
because

101
00:05:31,000 --> 00:05:35,000
32  is  just  a  good  round  number  now  after  that  there  is

102
00:05:35,000 --> 00:05:37,000
nothing  else  that  we  can  do  so  we'll  go  ahead  and

103
00:05:37,000 --> 00:05:43,000
just  say  32  now  typically  this  also  returns  a  group  api  so

104
00:05:43,000 --> 00:05:45,000
you  could  say  var  group  is  equal  to

105
00:05:45,000 --> 00:05:49,000
await  client  asynchronous  and  then  we  can  just  go  ahead  and  print

106
00:05:49,000 --> 00:05:50,000
out  that  group  now  you  don't  have

107
00:05:50,000 --> 00:05:54,000
to  do  this  but  it  is  a  way  to  get  a  hold

108
00:05:54,000 --> 00:05:57,000
of  that  object  if  that  makes  sense  so  if  you  needed  to

109
00:05:57,000 --> 00:05:57,000
go

110
00:05:57,000 --> 00:06:01,000
ahead  and  make  your  group  you  know  visible  or  not  visible  or

111
00:06:01,000 --> 00:06:03,000
something  like  that  you  could  do  that  right

112
00:06:03,000 --> 00:06:08,000
here  so  now  if  we  go  ahead  and  make  sure  that  our

113
00:06:08,000 --> 00:06:11,000
nakama  instance  is  running  so  if  I  take  a  look  at

114
00:06:11,000 --> 00:06:14,000
my  containers  you  can  see  it  is  actually  running  so  there  we

115
00:06:14,000 --> 00:06:17,000
go  we'll  go  ahead  and  hit  play

116
00:06:18,000 --> 00:06:21,000
and  then  we're  going  to  go  ahead  and  submit  we're  going  to

117
00:06:21,000 --> 00:06:23,000
connect  to  our  game  we're  going  to  call  our

118
00:06:23,000 --> 00:06:30,000
group  test  group  description  this  is  our  test  group  and  we'll  click

119
00:06:30,000 --> 00:06:33,000
create  now  you'll  see  that  we  have

120
00:06:33,000 --> 00:06:37,000
a  error  group  name  must  be  set  so  I  must  have  messed

121
00:06:37,000 --> 00:06:41,000
up  on  my  group  name  so  let's  take  a  look

122
00:06:41,000 --> 00:06:47,000
panel  5  group  name  oh  I  made  a  mistake  because  this  is

123
00:06:47,000 --> 00:06:49,000
the  original  panel  I  did  some  recording  earlier

124
00:06:49,000 --> 00:06:53,000
that  um  I  didn't  keep  it  but  I  never  actually  removed  that

125
00:06:53,000 --> 00:06:55,000
panel  so  we'll  change  this  to  panel

126
00:06:56,000 --> 00:06:59,000
6  and  then  we'll  go  from  there  so  we'll  refresh  this  and

127
00:06:59,000 --> 00:07:02,000
try  this  one  more  time  that's  my  fault  so

128
00:07:02,000 --> 00:07:09,000
we'll  submit  test  group  this  is  a  test  group  create  group  and

129
00:07:09,000 --> 00:07:11,000
you'll  see  that  we  get  a  success

130
00:07:11,000 --> 00:07:16,000
right  there  so  now  I'm  going  to  navigate  to  127  nakama  console

131
00:07:16,000 --> 00:07:18,000
right  here  so  we'll  go  to  our  127

132
00:07:19,000 --> 00:07:23,000
7351  and  then  we  will  connect  into  our  nakama  group  if  we

133
00:07:23,000 --> 00:07:25,000
go  to  groups  you  will  see  there  is  our  test

134
00:07:25,000 --> 00:07:28,000
group  and  you  can  see  this  is  what  we  have  if  we

135
00:07:28,000 --> 00:07:32,000
take  a  look  at  our  members  you  can  see  that  there  is

136
00:07:32,000 --> 00:07:37,000
a  super  admin  so  what  in  the  world  is  a  super  admin

137
00:07:37,000 --> 00:07:41,000
well  a  super  admin  is  a  person  that  has  full  control

138
00:07:41,000 --> 00:07:49,000
over  that  group  so  this  person  jj  rbv  w  e  x  k

139
00:07:49,000 --> 00:07:54,000
i  is  a  super  admin  of  that  group  so  what  that  means

140
00:07:54,000 --> 00:07:58,000
is  that  they  have  the  ability  to  delete  that  group  and  when

141
00:07:58,000 --> 00:08:03,000
you  are  a  super  admin  you  have  full  control  over  that  group

142
00:08:03,000 --> 00:08:08,000
there  are  four  different  membership  states  there's  super  admin  which  means  that

143
00:08:08,000 --> 00:08:11,000
you  are  basically  god  you  can  do  whatever  you  want  to  this

144
00:08:11,000 --> 00:08:11,000
group

145
00:08:11,000 --> 00:08:15,000
you  can  delete  people  you  can  do  whatever  you  want  basically  you

146
00:08:15,000 --> 00:08:20,000
can  delete  the  group  and  that's  a  big  thing  admin  which  allows

147
00:08:20,000 --> 00:08:25,000
you  to  update  your  group  and  allow  you  to  accept  kick  promote

148
00:08:25,000 --> 00:08:29,000
delete  ban  or  promote  members  and  then  they  have  members  which  allows

149
00:08:29,000 --> 00:08:33,000
you  to  actually  have  a  regular  group  member  they  don't  have  the

150
00:08:33,000 --> 00:08:37,000
ability  to  do  anything  they  cannot  accept  join  requests  stuff  like  that

151
00:08:37,000 --> 00:08:41,000
and  then  they  have  the  join  request  mode  which  basically  is  a

152
00:08:41,000 --> 00:08:45,000
when  a  user  wants  to  join  they  need  to  be  accepted  so

153
00:08:45,000 --> 00:08:48,000
you  have  to  say  yes  i  will  accept  you  as  a  part

154
00:08:48,000 --> 00:08:52,000
of  a  group  and  that's  how  you  know  the  different  states  if

155
00:08:52,000 --> 00:08:55,000
that  makes  sense  so  if  we  go  to  our  user  management  we

156
00:08:55,000 --> 00:09:00,000
look  for  the  jjr  person  if  we  go  into  accounts  i  have

157
00:09:00,000 --> 00:09:02,000
a  bunch  of  usernames  here  because  i've  been  doing  a  lot  of

158
00:09:02,000 --> 00:09:09,000
testing  on  my  end  but  if  i  look  for  jj  let  me

159
00:09:09,000 --> 00:09:11,000
see  i  think  it's  jj  let  me  take  a  look

160
00:09:12,000 --> 00:09:20,000
members  name  jj  let  me  see  jj  let  me  see  jj  let

161
00:09:20,000 --> 00:09:22,000
me  see  jj  i  have  71  accounts  so  you  can  see  i

162
00:09:22,000 --> 00:09:23,000
have  a  bunch  of  accounts  because  i've  been  doing  a  lot  of

163
00:09:23,000 --> 00:09:28,000
testing  on  my  end  for  my  own  stuff  and  nakama  is  being

164
00:09:28,000 --> 00:09:30,000
difficult  so  let  me  refresh  jj

165
00:09:30,000 --> 00:09:30,000
jjrb

166
00:09:33,000 --> 00:09:38,000
well  apparently  jj  doesn't  exist  within  my  vast  number  of  people  so

167
00:09:38,000 --> 00:09:41,000
i'm  not  sure  why  it  did  that  but  that's  okay

168
00:09:41,000 --> 00:09:47,000
there's  probably  a  master  account  that  it's  using

169
00:09:50,000 --> 00:09:53,000
actually  it's  right  here  jjrb

170
00:09:53,000 --> 00:09:57,000
right  here  so  i'm  not  sure  why  it  used  this  specific  one

171
00:09:57,000 --> 00:09:59,000
unless  i  logged  in

172
00:10:00,000 --> 00:10:06,000
and  created  it  with  device  authentication  which  is  possible  but  that's  okay

173
00:10:06,000 --> 00:10:07,000
we'll  figure  that  out  in  a

174
00:10:07,000 --> 00:10:12,000
minute  but  that's  basically  how  we  create  a  group  now  you  can

175
00:10:12,000 --> 00:10:14,000
see  we  also  printed  out  a  group  as  well

176
00:10:14,000 --> 00:10:18,000
so  you  can  see  here  we  have  our  creator  id  which  is

177
00:10:18,000 --> 00:10:21,000
right  here  the  creator  id  is  db  so  this  is  the

178
00:10:21,000 --> 00:10:27,000
creator  id  so  our  creator  is  jj  so  we  must  have  logged

179
00:10:27,000 --> 00:10:29,000
in  with  device  authentication  which  means  i

180
00:10:29,000 --> 00:10:35,000
probably  didn't  reset  my  client  authentication  stuff  so  let  me  take  a

181
00:10:35,000 --> 00:10:37,000
look  at  that  real  quick  my  apologies

182
00:10:37,000 --> 00:10:42,000
i  um  may  not  have  reset  some  of  my  code  so  that

183
00:10:42,000 --> 00:10:47,000
it  worked  properly  did  user  authentication  instead  of

184
00:10:47,000 --> 00:10:52,000
our  um  device  authentication  so  my  guess  is  that's  probably  what  it

185
00:10:52,000 --> 00:10:54,000
is  so  if  i  go  to  log  in

186
00:10:54,000 --> 00:10:58,000
yeah  right  here  i'm  doing  a  unique  device  id  right  here  and

187
00:10:58,000 --> 00:11:01,000
i'm  logging  in  with  that  socket  connection

188
00:11:01,000 --> 00:11:04,000
so  that's  what's  going  on  here  so  what  i'm  gonna  do  is

189
00:11:04,000 --> 00:11:06,000
i'm  gonna  control  k  to  comment  that  out  and  i'm

190
00:11:06,000 --> 00:11:11,000
going  to  go  ahead  and  log  in  with  my  username  so  now

191
00:11:11,000 --> 00:11:14,000
i'm  gonna  go  in  here  and  i'll  reset  this  because

192
00:11:14,000 --> 00:11:19,000
it's  going  to  be  kind  of  difficult  to  have  a  group  that

193
00:11:19,000 --> 00:11:23,000
uh  exists  that's  not  tied  to  an  actual  user

194
00:11:23,000 --> 00:11:26,000
so  i'll  go  ahead  and  do  that  i'll  refresh  and  then  we're

195
00:11:26,000 --> 00:11:28,000
going  to  recreate  that  group  just  because  it

196
00:11:28,000 --> 00:11:34,000
makes  more  sense  so  i'll  say  test  group  description  this  is  a

197
00:11:34,000 --> 00:11:36,000
test  group  and  we'll  go  ahead  and

198
00:11:36,000 --> 00:11:39,000
create  that  group  now  if  we  take  a  look  at  our  nakama

199
00:11:39,000 --> 00:11:42,000
console  you  will  see  that  because  this  was

200
00:11:42,000 --> 00:11:47,000
created  by  test  that  person  is  the  super  admin  so  whoever  creates

201
00:11:47,000 --> 00:11:49,000
the  group  gets  super  admin  status

202
00:11:49,000 --> 00:11:53,000
now  in  order  to  add  users  it's  actually  relatively  easy  all  we

203
00:11:53,000 --> 00:11:57,000
need  to  do  is  go  in  to  our  project  here

204
00:11:57,000 --> 00:12:01,000
and  you  can  see  right  here  we  have  the  ability  to  create

205
00:12:01,000 --> 00:12:03,000
a  group  so  we'll  just  go  ahead  and  duplicate

206
00:12:03,000 --> 00:12:08,000
this  and  we  will  come  down  here  and  we'll  right  click  disconnect

207
00:12:08,000 --> 00:12:09,000
we're  going  to  go  in  here  connect

208
00:12:09,000 --> 00:12:20,000
and  say  on  add  user  we'll  say  add  underscore  user  underscore  to

209
00:12:20,000 --> 00:12:23,000
group  like  so  button  down  and  we'll  go

210
00:12:23,000 --> 00:12:26,000
ahead  and  connect  that  and  i'm  going  to  rename  this  to  add

211
00:12:26,000 --> 00:12:31,000
user  to  group  so  with  this  for  us  to  be  able

212
00:12:31,000 --> 00:12:35,000
to  add  users  to  group  it's  actually  really  easy  all  we  need

213
00:12:35,000 --> 00:12:39,000
to  do  is  pass  in  the  group  id  that  we  want

214
00:12:39,000 --> 00:12:47,000
to  add  ourselves  to  so  unfortunately  we  have  to  actually  pull  that

215
00:12:47,000 --> 00:12:49,000
user  identifier  so  if  you  look

216
00:12:49,000 --> 00:12:52,000
at  this  you  can  see  inside  of  our  groups  we  have  a

217
00:12:52,000 --> 00:12:56,000
user  id  right  here  this  is  the  identifier  that  we  need

218
00:12:56,000 --> 00:12:59,000
to  give  them  to  be  able  to  add  ourselves  to  that  group

219
00:12:59,000 --> 00:13:03,000
so  if  we  come  in  here  and  copy  this  we  can

220
00:13:03,000 --> 00:13:07,000
come  down  here  go  back  into  godot  and  then  basically  just  say

221
00:13:07,000 --> 00:13:14,000
await  client  dot  join  group  async  and  then

222
00:13:14,000 --> 00:13:18,000
do  session  comma  and  then  we'll  just  pass  in  that  group  identifier

223
00:13:18,000 --> 00:13:21,000
now  if  we  come  in  here  and  we  hit  play

224
00:13:22,000 --> 00:13:26,000
you'll  see  in  a  second  we'll  go  ahead  and  log  in  as

225
00:13:26,000 --> 00:13:29,000
test  2  we  will  type  test  i  mean  it  doesn't  really

226
00:13:29,000 --> 00:13:32,000
matter  and  you  can  see  the  text  here  is  wrong  but  that's

227
00:13:32,000 --> 00:13:35,000
okay  we'll  click  create  group  which  is

228
00:13:35,000 --> 00:13:39,000
technically  add  group  and  you'll  see  that  we  get  an  authorization  token

229
00:13:39,000 --> 00:13:42,000
right  here  we  got  a  404  group

230
00:13:42,000 --> 00:13:47,000
not  found  so  my  guess  is  that  i  have  the  wrong  identifier

231
00:13:47,000 --> 00:13:51,000
go  to  group  group  id  i  do  so  we'll  go

232
00:13:51,000 --> 00:13:55,000
ahead  and  copy  that  and  we'll  go  back  here  we'll  change  this

233
00:13:55,000 --> 00:14:00,000
guy  like  so  paste  ctrl  s  and  the  nice

234
00:14:00,000 --> 00:14:05,000
thing  about  godot  is  that  if  you  uh  just  change  the  code

235
00:14:05,000 --> 00:14:07,000
in  here  you  can  just  click  that  and  you  can  see

236
00:14:07,000 --> 00:14:11,000
that  it  should  work  and  that's  because  godot  is  a  non -compiled

237
00:14:11,000 --> 00:14:13,000
language  so  you  can  actually  get  away

238
00:14:13,000 --> 00:14:17,000
with  changing  it  and  re -executing  the  code  so  now  if  you

239
00:14:17,000 --> 00:14:19,000
look  at  members  you  can  see  test  2  is  now  a

240
00:14:19,000 --> 00:14:23,000
member  now  you  might  be  wondering  okay  so  anybody  can  join  my

241
00:14:23,000 --> 00:14:27,000
group  yes  anyone  can  join  your  group  as

242
00:14:27,000 --> 00:14:33,000
long  as  it  is  public  if  it's  not  public  then  you  have

243
00:14:33,000 --> 00:14:36,000
to  be  approved  so  that's  where  the  difference

244
00:14:36,000 --> 00:14:40,000
comes  in  so  if  i  come  in  here  i  remove  test  2

245
00:14:40,000 --> 00:14:45,000
i  go  to  details  and  i  change  this  to  not  open  and

246
00:14:45,000 --> 00:14:45,000
i  save  it

247
00:14:46,000 --> 00:14:50,000
now  if  i  go  ahead  and  i  hit  create  group  or  i

248
00:14:50,000 --> 00:14:54,000
guess  connect  to  the  group  you  can  see  that  there  is  a

249
00:14:54,000 --> 00:14:54,000
join

250
00:14:54,000 --> 00:14:59,000
request  and  that  means  that  i  have  to  approve  that  before  they

251
00:14:59,000 --> 00:15:00,000
can  be  a  part  of  the  group

252
00:15:01,000 --> 00:15:05,000
so  the  question  is  how  do  you  actually  accept  that  join  request

253
00:15:05,000 --> 00:15:09,000
well  to  accept  a  join  request  what  you

254
00:15:09,000 --> 00:15:12,000
need  to  do  is  you  need  to  come  in  here  and  actually

255
00:15:12,000 --> 00:15:16,000
code  out  a  small  subroutine  first  thing  first  i'm

256
00:15:16,000 --> 00:15:21,000
going  to  come  in  here  and  change  this  to  add  join  group

257
00:15:21,000 --> 00:15:24,000
like  that  and  then  i'm  going  to  go  ahead  and

258
00:15:24,000 --> 00:15:29,000
duplicate  this  guy  drag  this  guy  down  like  so  and  i'm  going

259
00:15:29,000 --> 00:15:32,000
to  say  add  user

260
00:15:34,000 --> 00:15:39,000
to  group  like  so  and  if  i  just  hit  enter  that  will

261
00:15:39,000 --> 00:15:42,000
help  with  formatting  this  button  a  little  bit  better

262
00:15:42,000 --> 00:15:47,000
now  we'll  pull  this  name  parameter  to  allow  ourselves  to  actually  you

263
00:15:47,000 --> 00:15:50,000
know  go  from  there  and  this  should

264
00:15:50,000 --> 00:15:54,000
probably  be  called  join  group  so  it'll  be  fine  i  guess  for

265
00:15:54,000 --> 00:15:56,000
now  but  it's  just  something  i'm  not  a  huge

266
00:15:56,000 --> 00:16:00,000
fan  of  but  that's  okay  so  we'll  go  ahead  and  click  node

267
00:16:00,000 --> 00:16:04,000
right  click  disconnect  connect  and  then  we'll  go

268
00:16:04,000 --> 00:16:09,000
ahead  and  create  that  little  function  there  now  to  accept  a  join

269
00:16:09,000 --> 00:16:11,000
request  you  need  to  be  able  to  list

270
00:16:11,000 --> 00:16:16,000
your  groups  or  your  users  inside  of  that  group  and  that's  really

271
00:16:16,000 --> 00:16:18,000
easy  to  do  we  can  basically  just  say  var

272
00:16:19,000 --> 00:16:29,000
users  is  equal  to  await  client  dot  list  group  users  async  like

273
00:16:29,000 --> 00:16:31,000
that  we  can  pass  in  our  session  token

274
00:16:31,000 --> 00:16:34,000
and  then  we  can  pass  in  our  group  id  now  our  group

275
00:16:34,000 --> 00:16:37,000
id  is  right  here  so  we'll  go  ahead  and  copy  that  and

276
00:16:37,000 --> 00:16:41,000
paste  it  and  then  we'll  hit  comma  and  then  we  can  actually

277
00:16:41,000 --> 00:16:44,000
have  a  different  state  so  this  is  where  that

278
00:16:44,000 --> 00:16:48,000
one  two  or  i  guess  zero  one  two  and  three  is  useful

279
00:16:48,000 --> 00:16:51,000
if  you  wanted  to  you  could  list  everyone

280
00:16:51,000 --> 00:16:54,000
that  is  a  member  of  the  group  everyone  that's  waiting  to  join

281
00:16:54,000 --> 00:16:56,000
the  group  and  anybody  that's  a

282
00:16:56,000 --> 00:17:01,000
super  user  or  an  admin  just  by  changing  this  from  zero  through

283
00:17:01,000 --> 00:17:03,000
three  in  our  case  we're  going  to  be

284
00:17:03,000 --> 00:17:07,000
grabbing  all  the  people  that  are  awaiting  for  their  joins  you  can

285
00:17:07,000 --> 00:17:09,000
see  the  state  is  three  so  we  will  go

286
00:17:09,000 --> 00:17:13,000
ahead  and  do  that  and  then  all  we  need  to  do  is

287
00:17:13,000 --> 00:17:17,000
come  in  here  and  say  for  user  in

288
00:17:19,000 --> 00:17:23,000
users  dot  group  underscore  users  colon

289
00:17:23,000 --> 00:17:34,000
var  you  is  equal  to  user  dot  user  and  then  await  client

290
00:17:34,000 --> 00:17:38,000
dot  add  group  users  async

291
00:17:38,000 --> 00:17:43,000
async  pass  in  our  session  right  here  comma  what  our  group  id

292
00:17:43,000 --> 00:17:45,000
is  which  in  this  case  is  this  guy  right

293
00:17:45,000 --> 00:17:50,000
here  so  we'll  pass  that  guy  in  comma  and  then  we'll  pass

294
00:17:50,000 --> 00:17:52,000
in  you  and  now  we'll  go  ahead  and  add

295
00:17:52,000 --> 00:17:58,000
that  person  so  now  if  i  refresh  and  i  go  add  user

296
00:17:58,000 --> 00:18:02,000
to  group  so  if  i  submit  i  log  in  as  the  test

297
00:18:02,000 --> 00:18:03,000
user

298
00:18:03,000 --> 00:18:06,000
and  i  click  add  user  to  group  you'll  see  that  we  got

299
00:18:06,000 --> 00:18:11,000
an  error  here  unable  to  convert  uh  argument  three

300
00:18:11,000 --> 00:18:16,000
to  pack  string  array  so  you  is  not  correct  so  let's  take

301
00:18:16,000 --> 00:18:19,000
a  look  at  what  you  is  real  quick  i  don't  think

302
00:18:19,000 --> 00:18:23,000
there's  really  an  easy  way  to  handle  this  without  going  bracket  bracket

303
00:18:23,000 --> 00:18:25,000
and  then  passing  in  dot  id

304
00:18:26,000 --> 00:18:30,000
and  then  just  using  their  id  i  think  that  that  will  work

305
00:18:30,000 --> 00:18:32,000
it's  not  the  most  ideal  way  to  fix  it

306
00:18:33,000 --> 00:18:36,000
but  if  i  log  in  i  hit  add  user  you  should  see

307
00:18:36,000 --> 00:18:40,000
a  nice  request  here  and  then  we'll  go  ahead  and  refresh

308
00:18:40,000 --> 00:18:43,000
this  and  you  can  see  that  they  are  now  a  member  and

309
00:18:43,000 --> 00:18:47,000
that's  because  when  we  built  the  group  we  made  it  a

310
00:18:47,000 --> 00:18:50,000
private  group  now  you  might  be  wondering  is  there  a  way  for

311
00:18:50,000 --> 00:18:54,000
us  to  make  a  group  private  or  public

312
00:18:54,000 --> 00:18:58,000
through  code  right  so  that  way  it  doesn't  have  to  happen  immediately

313
00:18:58,000 --> 00:19:00,000
on  start  and  the  answer  to  your

314
00:19:00,000 --> 00:19:05,000
question  is  yes  you  can  actually  do  that  pretty  easily  all  you

315
00:19:05,000 --> 00:19:08,000
need  to  do  is  come  in  here  go  in  here

316
00:19:09,000 --> 00:19:12,000
let's  grab  this  make  it  slightly  bigger  again  the  group  section  is

317
00:19:12,000 --> 00:19:14,000
going  to  be  very  large  for  this  so

318
00:19:14,000 --> 00:19:19,000
we'll  add  in  a  check  box  here  like  so  and  we'll  call

319
00:19:19,000 --> 00:19:23,000
it  open  like  that  and  then  we're  going  to  add

320
00:19:23,000 --> 00:19:27,000
in  a  toggle  switch  so  i'll  just  put  this  right  here  for

321
00:19:27,000 --> 00:19:30,000
right  now  we'll  call  it  open  that's  fine

322
00:19:30,000 --> 00:19:35,000
and  then  we'll  go  ahead  and  say  on  button  down  or  i

323
00:19:35,000 --> 00:19:39,000
guess  on  toggled  we'll  toggle  this  on  our  control

324
00:19:39,000 --> 00:19:43,000
node  and  basically  when  it  gets  toggled  it'll  show  you  yes  or

325
00:19:43,000 --> 00:19:48,000
no  so  we'll  say  await  client  dot  update

326
00:19:48,000 --> 00:19:56,000
group  asynchronously  we'll  pass  in  our  session  token  comma  our  group  id

327
00:19:56,000 --> 00:19:58,000
which  is  this  guy  right  here

328
00:19:58,000 --> 00:20:01,000
and  we'll  talk  about  how  to  get  that  group  id  uh  through

329
00:20:01,000 --> 00:20:06,000
code  in  a  second  comma  and  then

330
00:20:07,000 --> 00:20:10,000
the  name  of  the  group  which  i'll  pass  in  null  because  i

331
00:20:10,000 --> 00:20:12,000
don't  want  to  change  it  and  then  we'll

332
00:20:12,000 --> 00:20:18,000
pass  in  toggled  underscore  on  like  that  and  you'll  see  that  if

333
00:20:18,000 --> 00:20:21,000
i  come  in  here  and  i  submit  and  then  i

334
00:20:21,000 --> 00:20:27,000
click  open  you'll  see  if  we  refresh  our  nakama  instance  here  so

335
00:20:27,000 --> 00:20:29,000
we'll  refresh  this  page  you'll  see

336
00:20:29,000 --> 00:20:35,000
it's  not  open  if  we  close  it  it  should  hopefully  do  it

337
00:20:35,000 --> 00:20:39,000
real  quick  maybe  not  let's  take  a  look  let's

338
00:20:39,000 --> 00:20:43,000
do  a  break  point  here  i  could  just  be  crazy  so  if

339
00:20:43,000 --> 00:20:47,000
i  come  in  here  toggle  response  code  400  spec  specify  at

340
00:20:47,000 --> 00:20:53,000
least  one  field  to  update  let's  see  if  we  come  in  here

341
00:20:53,000 --> 00:20:57,000
comma  p  name  p  description

342
00:20:59,000 --> 00:21:08,000
variant  null  so  null  comma  description  null  comma  avatar  null  comma  language

343
00:21:08,000 --> 00:21:12,000
tag  en  comma  now  this  is  how  you

344
00:21:12,000 --> 00:21:15,000
update  any  of  your  parameters  by  the  way  so  now  we  have

345
00:21:15,000 --> 00:21:17,000
our  p  open  i  think  that's  why

346
00:21:18,000 --> 00:21:22,000
toggled  on  and  you  can  see  here  we  have  null  null  null

347
00:21:22,000 --> 00:21:27,000
so  this  is  the  username  right  the  name  of  the  group

348
00:21:27,000 --> 00:21:32,000
the  description  of  the  group  and  the  whether  or  not  it's  open

349
00:21:32,000 --> 00:21:34,000
or  not  so  you  can  actually  really  play

350
00:21:34,000 --> 00:21:38,000
around  here  and  update  any  of  these  values  so  now  if  we

351
00:21:38,000 --> 00:21:42,000
hit  play  in  theory  it  should  just  work  so  we'll

352
00:21:42,000 --> 00:21:46,000
come  in  here  submit  we  do  that  and  then  we  take  a

353
00:21:46,000 --> 00:21:49,000
look  at  our  group  here  we  refresh  you'll  see  that

354
00:21:49,000 --> 00:21:54,000
open  is  now  on  if  we  set  it  to  off  and  we

355
00:21:54,000 --> 00:21:57,000
refresh  you'll  see  that  it  is  now  closed  so  that's  how  you

356
00:21:57,000 --> 00:21:57,000
can

357
00:21:57,000 --> 00:22:00,000
open  and  close  and  that's  really  how  you  can  update  any  of

358
00:22:00,000 --> 00:22:03,000
these  values  so  if  i  came  in  here  if  i  come

359
00:22:03,000 --> 00:22:08,000
back  to  godot  here  and  i  grab  my  description  i  believe  that's

360
00:22:08,000 --> 00:22:14,000
name  description  avatar  url  so  if  i  name  this  the

361
00:22:16,000 --> 00:22:21,000
strong  gamers  and  then  i  change  the  description  to  we  are  the

362
00:22:21,000 --> 00:22:25,000
strong  gamers  exclamation  point

363
00:22:26,000 --> 00:22:31,000
if  i  come  in  here  and  i  hit  this  little  toggle  here

364
00:22:33,000 --> 00:22:37,000
well  our  session  got  dc'd  so  let  me  refresh  this  guy  real

365
00:22:37,000 --> 00:22:41,000
quick  let  me  re -log  in  and  then  i'll  change

366
00:22:41,000 --> 00:22:45,000
it  so  now  it's  going  to  be  open  and  the  titles  and

367
00:22:45,000 --> 00:22:47,000
everything  has  been  changed  strong  gamers  we  are  the

368
00:22:47,000 --> 00:22:51,000
strong  gamers  so  that's  how  you  can  update  those  values  now  again

369
00:22:51,000 --> 00:22:54,000
typically  you  wouldn't  use  a  toggle

370
00:22:54,000 --> 00:22:56,000
switch  to  do  this  i'm  just  showing  you  guys  how  to  do

371
00:22:56,000 --> 00:22:58,000
that  so  i  can  show  you  the  open  and  close

372
00:22:58,000 --> 00:23:02,000
really  quickly  you  can  see  now  it's  closed  so  that's  how  you

373
00:23:02,000 --> 00:23:04,000
can  update  that  group  visibility  that's

374
00:23:04,000 --> 00:23:10,000
how  you  can  update  the  group  values  information  values  for  your  group

375
00:23:10,000 --> 00:23:12,000
now  something  else  that's

376
00:23:12,000 --> 00:23:18,000
pretty  big  and  pretty  important  to  know  is  how  to  actually  list

377
00:23:18,000 --> 00:23:23,000
groups  so  nakama  uh  groups  are

378
00:23:23,000 --> 00:23:28,000
a  resource  like  anything  else  right  so  you  can  actually  list  them

379
00:23:28,000 --> 00:23:31,000
and  index  them  and  pull  back  information

380
00:23:32,000 --> 00:23:37,000
using  them  so  what  does  that  mean  well  that  means  that  you

381
00:23:37,000 --> 00:23:39,000
can  use  what's  called  list  groups

382
00:23:39,000 --> 00:23:43,000
asynchronously  to  actually  list  out  your  groups  so  if  i  come  in

383
00:23:43,000 --> 00:23:46,000
here  i  can  show  you  guys  how  that  works

384
00:23:46,000 --> 00:23:51,000
so  i'm  going  to  right  click  add  in  a  panel  like  so

385
00:23:51,000 --> 00:23:55,000
i'll  drag  this  guy  over  here  like  this

386
00:23:56,000 --> 00:24:00,000
and  i  will  make  an  h  box  container  or  i  guess  it'd

387
00:24:00,000 --> 00:24:04,000
be  a  v  box  container  like  so  and  i'll  make  that  full

388
00:24:04,000 --> 00:24:07,000
rect  so  that  way  it  maximizes  the  full  screen  now  granted  that

389
00:24:07,000 --> 00:24:09,000
being  said  we  only  have  one  group  right

390
00:24:09,000 --> 00:24:12,000
now  so  we  kind  of  need  to  make  multiple  groups  for  us

391
00:24:12,000 --> 00:24:15,000
to  be  able  to  see  them  all  but  we  can  at  least

392
00:24:15,000 --> 00:24:19,000
show  how  that  works  so  if  we  come  in  here  i  grab

393
00:24:19,000 --> 00:24:22,000
this  add  user  to  group  button  i  duplicate  it  bring

394
00:24:22,000 --> 00:24:28,000
it  down  here  and  i  type  list  groups  like  so  and  then

395
00:24:28,000 --> 00:24:30,000
i'm  going  to  grab  this  description  duplicate  it

396
00:24:30,000 --> 00:24:38,000
pull  it  down  here  and  this  is  going  to  be  group  query

397
00:24:38,000 --> 00:24:41,000
like  so  i'll  change  this  to  list  groups

398
00:24:43,000 --> 00:24:50,000
and  i'll  change  this  to  group  query  now  what  we  can  do

399
00:24:50,000 --> 00:24:53,000
is  hit  ctrl  s  we  can  go  into  scripting

400
00:24:54,000 --> 00:24:58,000
we  can  grab  our  list  group  go  to  node  right  click  disconnect

401
00:24:58,000 --> 00:25:01,000
right  click  connect  and  connect  it

402
00:25:02,000 --> 00:25:06,000
now  what  we  could  do  when  we  want  to  list  our  groups

403
00:25:06,000 --> 00:25:09,000
is  we  can  set  up  a  limit  so  we  can  say  var

404
00:25:09,000 --> 00:25:13,000
limit  is  equal  to  let's  say  10  now  we  don't  have  10

405
00:25:13,000 --> 00:25:17,000
groups  to  list  but  we'll  use  that  as  a  default

406
00:25:17,000 --> 00:25:25,000
value  then  we'll  say  var  result  is  equal  to  await  client  dot

407
00:25:25,000 --> 00:25:28,000
list  groups  async  now  you'll  need  to

408
00:25:28,000 --> 00:25:31,000
pass  in  your  session  just  like  usual  and  then  you'll  need  to

409
00:25:31,000 --> 00:25:35,000
pass  in  some  kind  of  name  that  you're  trying  to

410
00:25:35,000 --> 00:25:39,000
search  up  now  this  is  a  variant  so  of  course  you  can

411
00:25:39,000 --> 00:25:44,000
you  know  get  back  whatever  you're  looking  for

412
00:25:44,000 --> 00:25:48,000
so  in  my  case  i'm  going  to  hit  dollar  sign  group  query

413
00:25:48,000 --> 00:25:52,000
dot  text  and  that'll  let  me  have  that  limit

414
00:25:52,000 --> 00:25:54,000
and  then  we'll  pass  in  our  limit  which  by  the  way  does

415
00:25:54,000 --> 00:25:58,000
default  to  10  now  they  have  a  cursor  value  and

416
00:25:58,000 --> 00:26:03,000
that  cursor  value  allows  you  to  say  i  want  the  next  10

417
00:26:03,000 --> 00:26:05,000
so  think  of  it  kind  of  like  this  when  you

418
00:26:05,000 --> 00:26:08,000
do  your  query  you're  going  to  pull  back  the  first  10  but

419
00:26:08,000 --> 00:26:10,000
what  happens  if  the  person  doesn't  see  the

420
00:26:10,000 --> 00:26:13,000
group  that  they  want  on  the  first  10  well  that's  where  the

421
00:26:13,000 --> 00:26:15,000
cursor  value  comes  in  so  you  can  hit  zero

422
00:26:15,000 --> 00:26:19,000
make  that  cursor  value  of  zero  language  tag  will  allow  you  to

423
00:26:19,000 --> 00:26:22,000
pick  a  language  in  my  case  i'm  going  to  do  en

424
00:26:22,000 --> 00:26:24,000
and  again  you  don't  have  to  do  that  but  it's  going  to

425
00:26:24,000 --> 00:26:27,000
filter  out  any  groups  that  are  not  english  you  can  see

426
00:26:27,000 --> 00:26:31,000
right  here  language  en  so  that's  going  to  allow  you  to  have

427
00:26:31,000 --> 00:26:33,000
that  limiting  factor  right  because  if  they're

428
00:26:33,000 --> 00:26:36,000
spanish  you  don't  want  to  necessarily  show  them  up  if  they're  looking

429
00:26:36,000 --> 00:26:39,000
for  an  english  group  if  they  speak  english

430
00:26:39,000 --> 00:26:44,000
not  spanish  it's  going  to  be  a  problem  and  then  you  can

431
00:26:44,000 --> 00:26:48,000
look  up  members  which  allows  you  to  pick  members  i'm  going  to

432
00:26:48,000 --> 00:26:50,000
pass  in  null  for  that  and  then  you  could  choose  whether  or

433
00:26:50,000 --> 00:26:53,000
not  it's  an  open  group  or  not  so  a  lot

434
00:26:53,000 --> 00:26:56,000
of  times  when  you're  doing  groups  you  might  want  to  check  to

435
00:26:56,000 --> 00:26:58,000
see  if  it's  a  public  group  not  a  private

436
00:26:58,000 --> 00:27:02,000
group  because  sometimes  if  you  have  a  group  like  a  guild  and

437
00:27:02,000 --> 00:27:04,000
you  don't  want  people  to  see  your  guild

438
00:27:04,000 --> 00:27:10,000
you  probably  should  make  sure  that  that  is  false  or  true  depending

439
00:27:10,000 --> 00:27:13,000
on  your  use  case  so  i'll  make  it  true

440
00:27:13,000 --> 00:27:17,000
and  that's  pretty  much  everything  that  you  need  to  know  here  now

441
00:27:17,000 --> 00:27:20,000
with  this  we  should  be  relatively

442
00:27:20,000 --> 00:27:23,000
good  to  go  so  now  we  basically  will  have  our  results  we

443
00:27:23,000 --> 00:27:29,000
can  say  for  group  in  result  dot  groups

444
00:27:30,000 --> 00:27:35,000
like  that  and  then  we  can  basically  come  in  and  print  out

445
00:27:35,000 --> 00:27:40,000
our  groups  so  you  can  see  that  we  can  go  print

446
00:27:41,000 --> 00:27:48,000
group  dot  name  like  that  and  from  here  we  should  be  relatively

447
00:27:48,000 --> 00:27:51,000
good  to  go  so  now  we  can  hit  play

448
00:27:52,000 --> 00:27:56,000
we  can  log  in  as  test  we  can  come  in  here  and

449
00:27:56,000 --> 00:28:01,000
say  i  believe  our  group  name  is  strong  gamers  so  we  can

450
00:28:01,000 --> 00:28:07,000
say  strong  and  list  groups  and  it  should  come  back  well  it's

451
00:28:07,000 --> 00:28:10,000
not  happy  so  that's  not  a  good  thing

452
00:28:10,000 --> 00:28:17,000
our  p  cursor  query  parameters  strong  that's  fine  nakama  serialize  escape

453
00:28:19,000 --> 00:28:23,000
cannot  convert  argument  one  from  int  to  string

454
00:28:29,000 --> 00:28:36,000
i  wonder  if  it's  mad  because  our  cursor  is  an  int  i

455
00:28:36,000 --> 00:28:39,000
think  there's  an  issue  here  with  how  they  have  their

456
00:28:39,000 --> 00:28:43,000
stuff  set  up  so  what  if  we  come  back  here  and  we

457
00:28:43,000 --> 00:28:46,000
do  null  instead  so  if  we  come  in  here

458
00:28:47,000 --> 00:28:51,000
null  just  to  see  if  that  fixes  the  problem  so  we'll  come

459
00:28:51,000 --> 00:28:52,000
in  here  we'll  type  strong

460
00:28:54,000 --> 00:28:57,000
and  it's  still  mad  oh  that's  because  i  didn't  log  in  so

461
00:28:57,000 --> 00:29:01,000
that's  fair  that's  understandable  so  we'll  log  in  we

462
00:29:01,000 --> 00:29:06,000
we'll  say  strong  list  groups  and  you  can  see  that  we  get

463
00:29:06,000 --> 00:29:09,000
a  400  the  error  name  filter  cannot  be  combined

464
00:29:09,000 --> 00:29:14,000
with  any  other  filter  so  it  looks  like  according  to  nakama's  documentation

465
00:29:14,000 --> 00:29:16,000
you  can  combine  them  but  i

466
00:29:16,000 --> 00:29:21,000
guess  you  can't  inside  of  here  so  let's  try  that  and  see

467
00:29:21,000 --> 00:29:23,000
if  that  fixes  it  because  according  to  our

468
00:29:23,000 --> 00:29:28,000
documentation  you  can  do  this  but  i  guess  we  can't  so  let's

469
00:29:28,000 --> 00:29:29,000
try  that

470
00:29:32,000 --> 00:29:36,000
so  we'll  hit  list  groups  and  you  will  see  that  we  get

471
00:29:36,000 --> 00:29:40,000
an  authorization  bearing  right  here  i  don't  know

472
00:29:40,000 --> 00:29:44,000
if  that  came  back  with  really  anything  so  let  me  see  what

473
00:29:44,000 --> 00:29:46,000
happens  if  i  list  groups  let's  see  what  our

474
00:29:46,000 --> 00:29:50,000
result  comes  back  with  after  i  drop  a  breakpoint  here  and  it

475
00:29:50,000 --> 00:29:53,000
did  it  came  back  with  nothing  so  nakama

476
00:29:53,000 --> 00:29:56,000
is  not  doing  what  i  want  it  to  do  because  of  course

477
00:29:56,000 --> 00:30:00,000
it's  not  welcome  to  programming  let's  see  what  happens

478
00:30:00,000 --> 00:30:02,000
if  i  do  capital  s  it's  probably  capital

479
00:30:07,000 --> 00:30:11,000
case  sensitive  so  we'll  come  in  here  and  we'll  take  a  look

480
00:30:11,000 --> 00:30:15,000
at  our  results  still  got  nothing  back  so

481
00:30:15,000 --> 00:30:21,000
we'll  continue  through  what  happens  if  i  do  a  percent  sign  and

482
00:30:21,000 --> 00:30:23,000
see  if  that  gives  us  something

483
00:30:23,000 --> 00:30:27,000
back  now  because  it  might  be  that  it  needs  to  be  a

484
00:30:27,000 --> 00:30:31,000
query  of  some  description  so  we  can  check  that  out

485
00:30:31,000 --> 00:30:34,000
real  quick  yep  it  needs  to  be  a  query  so  you  can

486
00:30:34,000 --> 00:30:36,000
see  it  pulled  back  the  one  that  we're  looking  for  so

487
00:30:36,000 --> 00:30:40,000
it  pulled  back  our  group  so  when  you  do  a  text  just

488
00:30:40,000 --> 00:30:42,000
be  aware  of  that  you're  going  to  need  to  make  it

489
00:30:42,000 --> 00:30:46,000
into  an  actual  query  instead  so  you  need  to  add  that  percent

490
00:30:46,000 --> 00:30:48,000
sign  at  the  end  so  that's  just  something

491
00:30:48,000 --> 00:30:53,000
to  keep  in  mind  now  you'll  see  when  i  hit  play  it's

492
00:30:53,000 --> 00:30:56,000
going  to  print  out  strong  gamers  right  there

493
00:30:57,000 --> 00:31:02,000
so  that's  basically  how  you  can  list  and  filter  your  groups  so

494
00:31:02,000 --> 00:31:04,000
that  allows  us  to  see  those  groups

495
00:31:06,000 --> 00:31:10,000
and  hunt  down  their  identifier  because  if  you  look  you  can  see

496
00:31:10,000 --> 00:31:13,000
when  i  list  the  groups  you  can  see  when

497
00:31:13,000 --> 00:31:18,000
i  come  in  here  and  i  take  a  look  at  my  results

498
00:31:18,000 --> 00:31:22,000
here  the  group  i  come  back  with  has  their  identifier  right

499
00:31:22,000 --> 00:31:27,000
here  so  if  you  know  where  their  um  if  you  know  their

500
00:31:27,000 --> 00:31:31,000
name  you  can  pull  back  their  id  so  that's  how  we

501
00:31:31,000 --> 00:31:36,000
would  populate  all  these  other  values  right  here  is  by  listing  it

502
00:31:36,000 --> 00:31:38,000
and  then  pulling  back  that  group

503
00:31:38,000 --> 00:31:44,000
information  now  since  we  can  pull  this  information  that  means  that  we

504
00:31:44,000 --> 00:31:46,000
can  actually  come  in  here  and

505
00:31:46,000 --> 00:31:51,000
use  that  info  on  our  panels  and  things  like  that  so  what

506
00:31:51,000 --> 00:31:56,000
we  could  do  is  we  could  come  in  here  and  list  out

507
00:31:56,000 --> 00:32:04,000
and  populate  their  information  and  populate  it  in  a  vbox  container  so

508
00:32:04,000 --> 00:32:06,000
we  could  do  is  we  could

509
00:32:08,000 --> 00:32:16,000
go  var  vbox  is  equal  to  vbox  container  dot  new  like  that

510
00:32:16,000 --> 00:32:19,000
and  then  if  i  need  if  i  do  this  correctly

511
00:32:19,000 --> 00:32:21,000
you  could  do  this  in  a  vbox  container  so  we  could  do

512
00:32:21,000 --> 00:32:24,000
this  in  a  vbox  container  dot  new  and  then  we  could

513
00:32:24,000 --> 00:32:28,000
come  in  here  and  do  the  same  thing  but  for  labels  so

514
00:32:28,000 --> 00:32:34,000
we  can  say  label  so  var  name  label  is  equal  to  a

515
00:32:34,000 --> 00:32:35,000
label

516
00:32:36,000 --> 00:32:42,000
dot  new  like  that  and  then  name  label  dot  text  is  equal

517
00:32:42,000 --> 00:32:46,000
to  if  we  take  a  look  at  this  right  here  we  can

518
00:32:46,000 --> 00:32:46,000
go

519
00:32:47,000 --> 00:32:52,000
name  so  it  would  be  group  dot

520
00:32:54,000 --> 00:32:56,000
let's  take  a  look  at  this

521
00:32:59,000 --> 00:33:03,000
what  is  result  dot  groups  let's  see

522
00:33:04,000 --> 00:33:08,000
result  dot  groups  so  it's  going  to  come  back  with  this  so

523
00:33:08,000 --> 00:33:10,000
then  it  would  be  dot  name  like  that

524
00:33:10,000 --> 00:33:13,000
and  then  we  could  say  vbox

525
00:33:16,000 --> 00:33:21,000
dot  add  child  and  then  we  could  add  our  name  label  as

526
00:33:21,000 --> 00:33:24,000
a  part  of  that  child  and  then  we  can  come  in  here

527
00:33:24,000 --> 00:33:31,000
and  say  dollar  sign  v  box  and  we  can  find  out  which

528
00:33:31,000 --> 00:33:33,000
panel  is  ours  which  arguably  we  should  come  up  with  a

529
00:33:33,000 --> 00:33:39,000
better  naming  convention  here  but  that's  fine  dot  add  child  and  we

530
00:33:39,000 --> 00:33:42,000
could  add  in  our  vbox  right  here

531
00:33:42,000 --> 00:33:47,000
like  that  and  that  would  allow  us  to  effectively  add  it  as

532
00:33:47,000 --> 00:33:50,000
a  child  for  our  project  and  then  if  we

533
00:33:50,000 --> 00:33:53,000
refresh  this  in  theory  providing  that  this  is  going  to  work  and

534
00:33:53,000 --> 00:33:55,000
i  don't  know  if  it's  going  to  work  this

535
00:33:55,000 --> 00:33:57,000
is  kind  of  me  coding  this  a  little  bit  off  the  cuff

536
00:33:57,000 --> 00:33:59,000
we  can  hit  list  groups  and  you  can  see  that  we  now

537
00:33:59,000 --> 00:34:04,000
have  strong  gamers  there  so  that's  something  that  we  can  actually  do

538
00:34:04,000 --> 00:34:06,000
and  pull  back  their  information

539
00:34:06,000 --> 00:34:11,000
so  that  could  be  really  useful  for  us  to  set  up  for

540
00:34:11,000 --> 00:34:14,000
like  a  selection  system  or  something  like  that

541
00:34:14,000 --> 00:34:17,000
and  speaking  of  that  what  we  could  do  is  we  could  come

542
00:34:17,000 --> 00:34:23,000
in  here  and  say  var  hbox  is  equal  to  hbox

543
00:34:23,000 --> 00:34:30,000
container  dot  new  like  so  and  then  we  can  do  hbox  dot

544
00:34:30,000 --> 00:34:33,000
let's  see  if  we  bring  this  down  here  instead  of

545
00:34:33,000 --> 00:34:37,000
doing  vbox  dot  add  we  can  do  hbox  and  then  we  could

546
00:34:37,000 --> 00:34:40,000
add  our  vbox

547
00:34:43,000 --> 00:34:49,000
dot  add  child  hbox  like  so  and  then  what  that  means  is

548
00:34:49,000 --> 00:34:52,000
that  we  could  add  in  a  button  and  i  know  this  is

549
00:34:52,000 --> 00:34:55,000
kind  of  weird  because  i'm  actually  coding  a  component  instead  of  doing

550
00:34:55,000 --> 00:34:56,000
it  the  other  way

551
00:34:56,000 --> 00:34:58,000
but  one  of  the  big  things  that  people  have  asked  me  is

552
00:34:58,000 --> 00:35:00,000
if  you  could  actually  do  it  this  way  and  i

553
00:35:00,000 --> 00:35:03,000
want  to  cover  that  and  show  you  guys  yeah  you  can  actually

554
00:35:03,000 --> 00:35:06,000
build  interface  elements  inside  of  code

555
00:35:06,000 --> 00:35:10,000
and  then  actually  have  it  exist  so  that's  kind  of  what  i'm

556
00:35:10,000 --> 00:35:14,000
showing  here  so  if  we  come  in  here  and  say  h

557
00:35:16,000 --> 00:35:24,000
hbar  button  is  equal  to  button  dot  new  like  so  then  we

558
00:35:24,000 --> 00:35:27,000
can  come  in  here  and  do  button  dot  text

559
00:35:28,000 --> 00:35:34,000
is  equal  to  select  group  like  that  and  then  we  can  come

560
00:35:34,000 --> 00:35:37,000
in  here  and  say  hbox  dot  add  child

561
00:35:39,000 --> 00:35:42,000
button  like  that  and  then  we  can  add  that  hbox  and  that

562
00:35:42,000 --> 00:35:46,000
should  allow  us  to  have  all  of  that  information

563
00:35:46,000 --> 00:35:49,000
that  we  were  looking  for  before  right  here  so  if  we  hit

564
00:35:49,000 --> 00:35:52,000
submit  list  groups  you  can  see  we  have

565
00:35:52,000 --> 00:35:59,000
a  button  right  here  so  now  we  can  basically  connect  its  on

566
00:35:59,000 --> 00:36:03,000
button  click  right  here  so  you  can  say  button  dot

567
00:36:06,000 --> 00:36:13,000
button  down  like  that  dot  dot  connect  and  then  we  could  just

568
00:36:13,000 --> 00:36:16,000
say  and  here  we  could  call  out  a  function

569
00:36:16,000 --> 00:36:22,000
so  if  i  come  in  here  and  say  funk  on  group  select

570
00:36:22,000 --> 00:36:24,000
button  down  and  i  can  pass  in  the  group

571
00:36:24,000 --> 00:36:30,000
like  that  and  i  can  come  in  here  and  do  dot  connect

572
00:36:30,000 --> 00:36:34,000
and  we  could  do  what's  called  binding  and  binding  is

573
00:36:34,000 --> 00:36:39,000
actually  really  cool  so  we  can  say  on  group  select  button  like

574
00:36:39,000 --> 00:36:44,000
that  dot  bind  and  then  i  can  bind  parameters

575
00:36:44,000 --> 00:36:49,000
so  i  can  actually  come  in  here  and  bind  group  and  now

576
00:36:49,000 --> 00:36:52,000
if  we  come  in  here  and  we  print  out  that  group

577
00:36:52,000 --> 00:36:56,000
you'll  see  providing  that  we  did  this  correctly  and  i  know  that

578
00:36:56,000 --> 00:36:58,000
this  is  like  way  beyond  what  the  actual

579
00:36:58,000 --> 00:37:01,000
tutorial  is  but  i  think  that  this  is  pretty  cool  so  i

580
00:37:01,000 --> 00:37:04,000
figured  i  would  show  it  off  if  we  do  this  we  can

581
00:37:04,000 --> 00:37:07,000
come  in  here  and  list  our  groups  and  then  select  a  group

582
00:37:07,000 --> 00:37:11,000
and  you'll  see  that  it  passes  in  that  information

583
00:37:11,000 --> 00:37:15,000
right  there  it  binds  the  parameters  so  you  could  actually  come  in

584
00:37:15,000 --> 00:37:15,000
here

585
00:37:17,000 --> 00:37:23,000
and  set  a  selected  group  parameter  right  here  and  there  you  go

586
00:37:23,000 --> 00:37:25,000
it  would  actually  work  so  what  we

587
00:37:25,000 --> 00:37:28,000
could  do  is  we  could  come  in  here  and  say  all  the

588
00:37:28,000 --> 00:37:30,000
way  up  here  set  our

589
00:37:34,000 --> 00:37:38,000
var  selected  group  and  then  we  could  come  down  here  and  just

590
00:37:38,000 --> 00:37:43,000
say  selected  group  is  equal  to  group  like

591
00:37:43,000 --> 00:37:47,000
that  and  then  we  could  come  in  here  and  do  i  believe

592
00:37:47,000 --> 00:37:54,000
it's  group  dot  id  so  you  could  come  in  here  and  go

593
00:37:56,000 --> 00:38:02,000
selected  group  dot  id  like  that  copy  this  bad  boy  go  like

594
00:38:02,000 --> 00:38:08,000
this  paste  and  paste  and  paste  and  then  you

595
00:38:08,000 --> 00:38:13,000
would  be  able  to  effectively  update  the  values  in  there  without  needing

596
00:38:13,000 --> 00:38:15,000
to  actually  have  that  data

597
00:38:15,000 --> 00:38:17,000
so  if  i  come  in  here  i  list  my  groups  well  first

598
00:38:17,000 --> 00:38:20,000
i  need  to  actually  hook  up  my  session  really  quick

599
00:38:20,000 --> 00:38:25,000
so  if  i  submit  that  there  we  go  i  list  my  groups

600
00:38:25,000 --> 00:38:28,000
i  select  it  now  i  have  that  selected  i  can  come  in

601
00:38:28,000 --> 00:38:28,000
here

602
00:38:28,000 --> 00:38:33,000
and  do  a  open  and  you  will  see  that  if  i  come

603
00:38:33,000 --> 00:38:36,000
in  here  and  i  refresh  this  you'll  see  that  that  worked  and

604
00:38:36,000 --> 00:38:41,000
that's  because  we  bound  that  parameter  right  here  well  if  i  could

605
00:38:41,000 --> 00:38:45,000
find  it  right  here  to  actually  work

606
00:38:45,000 --> 00:38:48,000
so  that's  a  way  that  we  can  go  about  making  a  group

607
00:38:48,000 --> 00:38:52,000
selection  system  relatively  simple  and  that's  how  we

608
00:38:52,000 --> 00:38:55,000
can  actually  list  our  groups  as  well  so  i  know  that  that's

609
00:38:55,000 --> 00:38:59,000
kind  of  a  complicated  way  to  show  it  but  i

610
00:38:59,000 --> 00:39:03,000
figured  that  it  was  an  interesting  way  to  approach  it  and  i

611
00:39:03,000 --> 00:39:04,000
figured  you  guys  would  appreciate  that

612
00:39:05,000 --> 00:39:09,000
so  now  the  question  is  what  if  we  want  to  promote  a

613
00:39:09,000 --> 00:39:12,000
user  or  maybe  demote  a  user  or  kick  or  ban  a  user

614
00:39:12,000 --> 00:39:16,000
from  our  group  well  in  order  to  do  that  first  we  need

615
00:39:16,000 --> 00:39:20,000
to  actually  get  the  user  id  of  that  person  so

616
00:39:20,000 --> 00:39:22,000
you  can  see  here  this  person  is  a  member  and  we  want

617
00:39:22,000 --> 00:39:25,000
to  get  that  user  id  back  so  if  we  come  back  to

618
00:39:25,000 --> 00:39:32,000
godot  here  and  we  go  ahead  and  come  down  here  we  need

619
00:39:32,000 --> 00:39:37,000
to  basically  get  a  username  go  and  fetch  their  id  and  then

620
00:39:38,000 --> 00:39:41,000
basically  promote  or  demote  that  person  so  what  i'm  going  to  do

621
00:39:41,000 --> 00:39:43,000
is  i'm  going  to  right  click  my  panel  i'm

622
00:39:43,000 --> 00:39:46,000
going  to  add  in  a  line  edit  like  so  i'm  going  to

623
00:39:46,000 --> 00:39:49,000
drag  this  guy  down  here  we'll  go  like  this  make  it  about

624
00:39:49,000 --> 00:39:52,000
i  don't  know  about  that  big  we'll  come  in  here  we'll  say

625
00:39:52,000 --> 00:39:55,000
user  user  to

626
00:39:56,000 --> 00:40:01,000
manage  we'll  say  and  then  we'll  come  in  here  and  hopefully  we

627
00:40:01,000 --> 00:40:04,000
won't  run  out  of  space  if  we  do  we'll  figure  something  out

628
00:40:04,000 --> 00:40:04,000
but

629
00:40:04,000 --> 00:40:07,000
let's  right  click  add  in  a  child  node  let's  add  in  a

630
00:40:07,000 --> 00:40:11,000
button  we'll  add  in  a  button  for  promoting  right  here

631
00:40:12,000 --> 00:40:19,000
like  so  and  if  i  think  about  it  for  a  second  with

632
00:40:19,000 --> 00:40:24,000
groups  we  need  to  promote  demote  kick  and  ban  somebody

633
00:40:24,000 --> 00:40:27,000
and  then  also  leave  that  group  so  we'll  need  to  figure  out

634
00:40:27,000 --> 00:40:30,000
a  way  to  give  ourselves  a  little  bit  more  space

635
00:40:30,000 --> 00:40:32,000
here  because  i'm  running  out  so  maybe  i  can  drag  this  guy

636
00:40:32,000 --> 00:40:35,000
up  butt  it  up  a  little  bit  closer  drag  this

637
00:40:35,000 --> 00:40:38,000
guy  down  give  ourselves  a  little  bit  more  space  but  we  can

638
00:40:38,000 --> 00:40:42,000
promote  duplicate  kick

639
00:40:49,000 --> 00:40:50,000
demote

640
00:40:52,000 --> 00:40:55,000
and  then  i  believe  we  would  need  to  ban  somebody

641
00:40:57,000 --> 00:41:01,000
and  then  finally  the  last  interaction  that  we  need  to  do  is

642
00:41:01,000 --> 00:41:04,000
to  actually  come  in  here  and

643
00:41:04,000 --> 00:41:08,000
leave  so  we  could  just  come  over  ah  goodness  we're  running  out

644
00:41:08,000 --> 00:41:09,000
of  space  here  we  have  so  much

645
00:41:09,000 --> 00:41:14,000
functionality  here  it's  actually  hard  to  make  the  space  so  we'll  drag

646
00:41:14,000 --> 00:41:16,000
this  guy  down  a  tiny  bit  maybe

647
00:41:16,000 --> 00:41:20,000
give  ourselves  a  bit  more  space  over  here  drag  this  guy  over

648
00:41:20,000 --> 00:41:26,000
like  so  there  we  go  and  we  can  change  this

649
00:41:26,000 --> 00:41:32,000
one  to  leave  group  like  that  now  when  we  want  to  promote

650
00:41:32,000 --> 00:41:35,000
a  user  let's  change  the  name  of  this  to  promote

651
00:41:35,000 --> 00:41:46,000
user  kick  user  demote  user  and  ban  user  like  that  and  then

652
00:41:46,000 --> 00:41:50,000
leave  free  so  i'm  going  to  go  ahead  and  grab  promote  user

653
00:41:50,000 --> 00:41:52,000
and  i'm  going  to  change  my  line  edit  to  user

654
00:41:52,000 --> 00:41:56,000
to  manage  and  then  i'll  click  on  promote  user  we're  going  to

655
00:41:56,000 --> 00:41:59,000
go  ahead  and  connect  that  to  our  nakama

656
00:41:59,000 --> 00:42:05,000
controller  here  we'll  come  down  here  and  we'll  basically  go  ahead  and

657
00:42:05,000 --> 00:42:06,000
promote  a  user  so  first

658
00:42:06,000 --> 00:42:11,000
things  first  we  need  to  actually  get  our  user  account  now  unfortunately

659
00:42:11,000 --> 00:42:13,000
you  need  to  actually  go  and

660
00:42:13,000 --> 00:42:18,000
fetch  that  user  account  so  first  we'll  say  var  user  is  is

661
00:42:18,000 --> 00:42:23,000
type  nakama  api  dot  api

662
00:42:26,000 --> 00:42:34,000
users  is  equal  to  await  client  dot  get  users  async  and  then

663
00:42:34,000 --> 00:42:37,000
we  can  come  in  here  and  go  session  so  we  could

664
00:42:37,000 --> 00:42:40,000
pass  in  that  session  and  then  we  need  to  pass  in  ids

665
00:42:40,000 --> 00:42:45,000
so  when  you  do  this  you  can  pass  in  ids  or  usernames

666
00:42:45,000 --> 00:42:48,000
in  our  case  we're  going  to  pass  in  a  username  but  you

667
00:42:48,000 --> 00:42:53,000
can  pass  in  their  actual  id  as  well  so  i'm  just

668
00:42:53,000 --> 00:42:56,000
going  to  pass  in  a  blank  and  then  for  the  username  i'll

669
00:42:56,000 --> 00:42:58,000
just  pass  in  a  single  parameter  and  that's  going

670
00:42:58,000 --> 00:43:05,000
to  be  dollar  sign  user  to  manage  dot  text  comma  and  you'll

671
00:43:05,000 --> 00:43:07,000
see  that  they  also  have  a  facebook  id  in

672
00:43:07,000 --> 00:43:10,000
this  case  we'll  pass  in  no  we  don't  really  have  a  facebook

673
00:43:10,000 --> 00:43:14,000
id  to  manage  a  user  but  they  do  separate

674
00:43:14,000 --> 00:43:16,000
that  out  and  i'm  not  really  sure  why  they  do  that  but

675
00:43:16,000 --> 00:43:18,000
that's  a  thing  so  it's  just  something  to  keep  in

676
00:43:18,000 --> 00:43:23,000
mind  now  what  we  can  do  is  say  for  you  in  users

677
00:43:23,000 --> 00:43:29,000
dot  users  and  that's  a  really  bad  way  so  we'll  say

678
00:43:31,000 --> 00:43:34,000
result  and  then  we'll  just  do  result  dot  users  that's  going  to

679
00:43:34,000 --> 00:43:35,000
be  a  little  bit  better  than  what

680
00:43:35,000 --> 00:43:39,000
we're  doing  right  now  now  once  we  do  this  we  have  the

681
00:43:39,000 --> 00:43:42,000
actual  user  information  so  that's  how  you  pull

682
00:43:42,000 --> 00:43:46,000
back  that  user's  information  so  you  can  actually  just  do  you  dot

683
00:43:46,000 --> 00:43:49,000
id  and  that  will  be  their  identification

684
00:43:49,000 --> 00:43:53,000
right  that'll  be  their  actual  information  so  what  we  can  do  is

685
00:43:53,000 --> 00:43:55,000
we  can  come  in  here

686
00:43:56,000 --> 00:43:59,000
and  promote  that  user  so  we'll  come  in  here  and  say  await

687
00:43:59,000 --> 00:44:04,000
client  dot  promote  user  and  group  async

688
00:44:04,000 --> 00:44:08,000
you  can  pass  in  our  session  token  and  then  we  can  pass

689
00:44:08,000 --> 00:44:11,000
in  our  group  id  so  in  our  case  that's  going

690
00:44:11,000 --> 00:44:14,000
to  be  our  selected  group  dot  id  comma  and  i  believe  it's

691
00:44:14,000 --> 00:44:17,000
selected  group  dot  id  let  me  double  check

692
00:44:17,000 --> 00:44:22,000
really  quick  because  sometimes  i  forget  things  it  is  and  then  we

693
00:44:22,000 --> 00:44:24,000
have  to  pass  in  a  user  identifier  so

694
00:44:24,000 --> 00:44:30,000
that's  going  to  be  u  dot  id  like  that  and  now  if

695
00:44:30,000 --> 00:44:33,000
we  go  ahead  and  hit  play  you'll  see  in  a  second  that

696
00:44:33,000 --> 00:44:33,000
if  i

697
00:44:34,000 --> 00:44:38,000
connect  to  this  and  then  i  list  my  groups  i  select  my

698
00:44:38,000 --> 00:44:43,000
group  and  then  i  type  in  test  two  and  i  click

699
00:44:43,000 --> 00:44:49,000
promote  well  we  have  an  error  so  the  error  is  cannot  convert

700
00:44:49,000 --> 00:44:52,000
argument  three  from  string  to  a  packed  array

701
00:44:52,000 --> 00:44:56,000
and  that's  because  this  can  be  a  group  of  users  it's  not

702
00:44:56,000 --> 00:44:59,000
actually  just  one  group  it's  actually  multiple

703
00:44:59,000 --> 00:45:02,000
people  so  we  can  go  ahead  and  do  that  and  then  try

704
00:45:02,000 --> 00:45:04,000
it  again  so  it's  because  we  need  we  can  actually

705
00:45:04,000 --> 00:45:09,000
have  multiples  of  somebody  so  we'll  go  like  that  we'll  submit  we'll

706
00:45:09,000 --> 00:45:11,000
list  our  groups  select  group  test

707
00:45:11,000 --> 00:45:15,000
two  we'll  promote  that  person  you'll  see  that  that  looks  like  that

708
00:45:15,000 --> 00:45:16,000
was  successful  we'll  head  back  to  our

709
00:45:16,000 --> 00:45:20,000
nakama  console  we'll  refresh  and  you  will  see  that  this  person  is

710
00:45:20,000 --> 00:45:23,000
now  an  admin  so  that's  huge  because

711
00:45:23,000 --> 00:45:26,000
it's  going  to  allow  us  to  be  able  to  create  admins  and

712
00:45:26,000 --> 00:45:29,000
now  if  we  click  it  a  second  time  you'll  see  if

713
00:45:29,000 --> 00:45:32,000
we  refresh  they  are  now  a  super  admin  that  means  that  they

714
00:45:32,000 --> 00:45:35,000
can  delete  this  uh  group  if  they  want  to

715
00:45:35,000 --> 00:45:39,000
now  the  question  might  be  okay  so  i  can  promote  users  how

716
00:45:39,000 --> 00:45:43,000
do  i  demote  them  right  well  if  we  come  in

717
00:45:43,000 --> 00:45:48,000
here  we  go  in  right  here  we  go  into  demote  user  button

718
00:45:48,000 --> 00:45:51,000
down  let's  connect  that  real  quick  we  come

719
00:45:51,000 --> 00:45:55,000
in  here  and  basically  copy  and  paste  this  code  so  we'll  just

720
00:45:55,000 --> 00:45:58,000
copy  this  guy  paste  it  and  instead  of

721
00:45:58,000 --> 00:46:04,000
promote  we  can  just  pass  in  demote  easy  enough  and  same  thing

722
00:46:04,000 --> 00:46:06,000
for  kick  user  right  we  could  just  kind  of

723
00:46:06,000 --> 00:46:09,000
bring  that  in  and  let's  do  band  user  as  well  right  so

724
00:46:09,000 --> 00:46:12,000
we'll  just  bring  that  in  as  well  if  we  copy  this

725
00:46:12,000 --> 00:46:17,000
guy  we  can  copy  paste  and  paste  because  they're  all  the  exact

726
00:46:17,000 --> 00:46:20,000
same  functionality  so  we  can  come  in

727
00:46:20,000 --> 00:46:30,000
here  and  say  kick  group  users  and  then  ban  group  users  and

728
00:46:30,000 --> 00:46:34,000
now  if  i  refresh  this  you'll  see  if  i  submit

729
00:46:35,000 --> 00:46:40,000
list  groups  select  my  group  test  two  i  go  demote  you'll  see

730
00:46:40,000 --> 00:46:42,000
that  that  worked  if  we  come  over  here

731
00:46:42,000 --> 00:46:47,000
we  refresh  our  users  right  here  you'll  see  that  they  are  now

732
00:46:47,000 --> 00:46:51,000
an  admin  and  then  i  can  go  ahead  and

733
00:46:51,000 --> 00:46:56,000
ban  a  user  and  you'll  see  non -existent  function  ban  groups  that's

734
00:46:56,000 --> 00:47:01,000
probably  my  fault  group  users  async

735
00:47:02,000 --> 00:47:05,000
and  it  looks  like  you  actually  can't  ban  a  user  so  we'll

736
00:47:05,000 --> 00:47:07,000
remove  that  that's  my  fault  i  um

737
00:47:07,000 --> 00:47:11,000
i  was  reading  the  documentation  earlier  but  it  looks  like  it  got

738
00:47:11,000 --> 00:47:13,000
removed  so  you're  not  actually

739
00:47:13,000 --> 00:47:16,000
able  to  ban  a  user  anymore  from  a  group  so  we'll  come

740
00:47:16,000 --> 00:47:21,000
in  here  we'll  go  ahead  and  type  submit  list

741
00:47:21,000 --> 00:47:25,000
our  groups  select  our  group  we'll  go  to  test  two  we'll  go

742
00:47:25,000 --> 00:47:28,000
ahead  and  demote  the  user  so  you'll  see  if

743
00:47:28,000 --> 00:47:32,000
we  refresh  they  are  an  admin  if  we  come  in  here  we

744
00:47:32,000 --> 00:47:35,000
can  go  ahead  and  kick  them  and  then  if  we  refresh  you'll

745
00:47:35,000 --> 00:47:39,000
see  they  have  been  removed  from  that  group  and  that's  basically  how

746
00:47:39,000 --> 00:47:41,000
you  can  actually  manage  your

747
00:47:41,000 --> 00:47:46,000
users  in  here  and  you  can  also  delete  a  group  and  leave

748
00:47:46,000 --> 00:47:50,000
a  group  so  if  we  want  to  leave  a  group  we  can

749
00:47:50,000 --> 00:47:55,000
come  in  here  and  go  into  our  stuff  here  we  can  click

750
00:47:55,000 --> 00:47:58,000
on  leave  group  button  down  on  leave  button  down

751
00:47:58,000 --> 00:48:02,000
we'll  connect  that  and  to  leave  a  group  it's  actually  relatively  simple

752
00:48:02,000 --> 00:48:05,000
all  we  need  to  do  is  type

753
00:48:08,000 --> 00:48:14,000
await  client  dot  leave  group  async  we'll  pass  in  our  session  and

754
00:48:14,000 --> 00:48:16,000
then  we'll  pass  in  our  group  id  which

755
00:48:16,000 --> 00:48:21,000
is  going  to  be  our  selected  group  id  now  this  will  allow

756
00:48:21,000 --> 00:48:23,000
us  to  leave  our  group  but  the  problem  is  that

757
00:48:23,000 --> 00:48:28,000
if  i  leave  my  group  i  will  actually  um  not  have  any

758
00:48:28,000 --> 00:48:31,000
more  users  in  that  group  so  what  i'll  do  is  i'll

759
00:48:31,000 --> 00:48:37,000
log  in  as  test  two  i  will  come  in  here  and  pass

760
00:48:37,000 --> 00:48:41,000
in  my  group  name  if  i  remember  correctly  it's  if  we  list

761
00:48:41,000 --> 00:48:45,000
groups  we  can  select  the  group  join  group  and  then  you  should

762
00:48:45,000 --> 00:48:47,000
see  that  we  will  join  that  group  so  you'll

763
00:48:47,000 --> 00:48:52,000
see  as  a  member  we  can  refresh  and  there  we  go  we're

764
00:48:52,000 --> 00:48:56,000
in  that  group  and  now  we  can  come  in  here  and  say

765
00:48:56,000 --> 00:49:00,000
leave  group  and  then  if  we  refresh  we  have  left  that  group

766
00:49:00,000 --> 00:49:04,000
right  there  and  now  we  can  actually  uh

767
00:49:04,000 --> 00:49:07,000
safely  delete  our  group  right  because  we  now  have  shown  that  that

768
00:49:07,000 --> 00:49:09,000
section  works  that's  how  you  leave

769
00:49:09,000 --> 00:49:12,000
a  group  it's  actually  really  easy  you  just  do  leave  group  asynchronously

770
00:49:12,000 --> 00:49:14,000
so  now  what  happens  if  you  want

771
00:49:14,000 --> 00:49:17,000
to  delete  a  group  well  we're  going  to  need  an  additional  button

772
00:49:17,000 --> 00:49:19,000
for  that  so  let's  duplicate  our

773
00:49:19,000 --> 00:49:23,000
leave  group  we'll  just  pull  it  down  here  i  guess  we're  kind

774
00:49:23,000 --> 00:49:24,000
of  running  out  of  space  here  so  i'll  just

775
00:49:24,000 --> 00:49:29,000
put  it  right  here  i'll  move  open  over  we'll  grab  leave  group

776
00:49:29,000 --> 00:49:32,000
and  we'll  put  delete  group  now  in  order  to

777
00:49:32,000 --> 00:49:36,000
delete  a  group  we'll  disconnect  this  connect  in  order  to  delete  a

778
00:49:36,000 --> 00:49:38,000
group  it's  actually  really  simple  as

779
00:49:38,000 --> 00:49:41,000
well  so  when  you  delete  a  group  all  you  need  to  do

780
00:49:41,000 --> 00:49:49,000
is  type  client  await  client  dot  delete  group  async  and

781
00:49:49,000 --> 00:49:55,000
then  you  can  pass  in  the  session  and  the  selected  group  dot

782
00:49:55,000 --> 00:49:57,000
id  and  that's  literally  all  you  need  to  do

783
00:49:57,000 --> 00:50:02,000
so  now  if  i  refresh  my  screen  here  i  log  in  as

784
00:50:02,000 --> 00:50:05,000
test  the  super  admin  and  then

785
00:50:06,000 --> 00:50:08,000
we'll  log  in  as  test  we'll  come  in  here  we'll  log  in

786
00:50:08,000 --> 00:50:12,000
as  test  two  we'll  submit  we  will  go  ahead  and  hit

787
00:50:12,000 --> 00:50:15,000
list  groups  we'll  select  that  group  we're  going  to  join  that  group

788
00:50:15,000 --> 00:50:17,000
really  quick  and  remember  because

789
00:50:17,000 --> 00:50:21,000
this  is  an  open  group  that  person  should  be  able  to  just

790
00:50:21,000 --> 00:50:22,000
join

791
00:50:24,000 --> 00:50:29,000
there  we  go  so  the  person  has  joined  and  now  you'll  see

792
00:50:29,000 --> 00:50:34,000
if  i  go  in  as  test  two  right  here  and  i  go

793
00:50:34,000 --> 00:50:34,000
ahead  and

794
00:50:34,000 --> 00:50:38,000
click  delete  group  which  this  is  leave  group  but  it's  delete  group

795
00:50:38,000 --> 00:50:42,000
in  um  our  code  you'll  see  request

796
00:50:42,000 --> 00:50:46,000
has  returned  spot  response  400  group  not  found  or  you  are  not

797
00:50:46,000 --> 00:50:48,000
allowed  to  delete  and  the  reason  why  is

798
00:50:48,000 --> 00:50:52,000
because  that  person  does  not  have  the  capability  to  delete  this  group

799
00:50:52,000 --> 00:50:53,000
you  can  see  it's  still  here

800
00:50:53,000 --> 00:50:57,000
however  if  i  come  in  here  as  test  or  as  my  super

801
00:50:57,000 --> 00:51:02,000
admin  and  i  log  in  and  i  click  list  groups  i  select

802
00:51:02,000 --> 00:51:02,000
my

803
00:51:02,000 --> 00:51:06,000
group  and  then  i  click  delete  group  you'll  see  if  we  go

804
00:51:06,000 --> 00:51:09,000
back  to  groups  it  has  now  been  removed  and

805
00:51:09,000 --> 00:51:16,000
that's  basically  everything  that  you  need  to  know  about  groups  now  when

806
00:51:16,000 --> 00:51:17,000
it  comes  to  chats  which  is

807
00:51:17,000 --> 00:51:21,000
actually  a  whole  feature  inside  of  nakama  you  can  actually  build  chat

808
00:51:21,000 --> 00:51:23,000
rooms  right  inside  of  nakama

809
00:51:23,000 --> 00:51:27,000
so  when  it  comes  to  chats  how  do  we  actually  get  that

810
00:51:27,000 --> 00:51:30,000
to  work  well  first  things  first  we  are  majorly  out

811
00:51:30,000 --> 00:51:34,000
of  space  so  i  am  going  to  hide  the  group  section  as

812
00:51:34,000 --> 00:51:37,000
you  can  see  we  have  all  sorts  of  different  areas

813
00:51:37,000 --> 00:51:41,000
here  where  we  can  actually  do  our  nakama  work  here  so  i'm

814
00:51:41,000 --> 00:51:43,000
actually  just  going  to  come  in  here  and  just

815
00:51:43,000 --> 00:51:46,000
start  hiding  a  lot  of  this  because  we're  running  out  of  space

816
00:51:46,000 --> 00:51:50,000
here  so  i'll  hide  this  panel  and  this  panel

817
00:51:50,000 --> 00:51:55,000
and  there  we  go  so  when  it  comes  to  chats  we  have

818
00:51:55,000 --> 00:51:57,000
three  different  types  of  chats  and  we'll  talk  about

819
00:51:57,000 --> 00:52:01,000
all  three  of  them  and  how  to  send  messages  and  stuff  like

820
00:52:01,000 --> 00:52:04,000
that  but  we  have  three  different  chat

821
00:52:04,000 --> 00:52:09,000
types  we  have  dynamic  rooms  group  chats  and  direct  chats  okay  and

822
00:52:09,000 --> 00:52:11,000
we'll  talk  about  the  group  chats  when

823
00:52:11,000 --> 00:52:15,000
we  get  there  but  one  of  the  big  ones  that  a  lot

824
00:52:15,000 --> 00:52:20,000
of  people  like  is  the  dynamic  rooms  the  dynamic  rooms  is

825
00:52:20,000 --> 00:52:27,000
basically  a  random  room  that  gets  created  for  temporary  for  a  temporary

826
00:52:27,000 --> 00:52:29,000
time  span  and  it  only

827
00:52:29,000 --> 00:52:32,000
stays  open  as  long  as  there  are  people  in  that  chat  room

828
00:52:32,000 --> 00:52:35,000
so  the  nice  thing  about  it  is  let's  say  you  have

829
00:52:35,000 --> 00:52:39,000
a  match  or  something  like  that  you  could  put  people  in  that

830
00:52:39,000 --> 00:52:42,000
temporary  room  and  then  have  people  communicate

831
00:52:42,000 --> 00:52:45,000
and  then  once  the  match  is  over  that  room  just  gets  dissolved

832
00:52:45,000 --> 00:52:49,000
over  time  whereas  something  like  a  group  chat

833
00:52:49,000 --> 00:52:54,000
that  stays  for  as  long  as  the  group  exists  and  then  they

834
00:52:54,000 --> 00:52:56,000
also  have  direct  chats  which  is  basically

835
00:52:56,000 --> 00:53:01,000
one -on -one  communications  between  people  which  persist  once  again  forever  so

836
00:53:01,000 --> 00:53:03,000
in  order  to  do  dynamic  rooms

837
00:53:03,000 --> 00:53:06,000
let's  first  right  click  add  in  a  child  node  let's  add  in

838
00:53:06,000 --> 00:53:11,000
a  panel  here  and  let's  make  it  about  this  big  now

839
00:53:11,000 --> 00:53:15,000
we're  gonna  have  to  build  a  whole  chat  system  so  this  will

840
00:53:15,000 --> 00:53:18,000
take  a  little  bit  of  time  so  what  i'm  gonna

841
00:53:18,000 --> 00:53:20,000
do  is  i'm  gonna  right  click  add  a  child  node  i'm  gonna

842
00:53:20,000 --> 00:53:25,000
add  in  a  button  i'm  going  to  right  click  add

843
00:53:25,000 --> 00:53:30,000
a  child  node  add  in  a  line  edit  right  here  we're  going

844
00:53:30,000 --> 00:53:34,000
to  make  the  line  edit  about  yay  big  give  or

845
00:53:34,000 --> 00:53:38,000
take  if  my  mouse  will  let  me  we'll  do  that  we'll  add

846
00:53:38,000 --> 00:53:41,000
in  a  button  again  providing  that  i  can  click  on  this

847
00:53:41,000 --> 00:53:45,000
there  we  go  we'll  make  it  about  yay  big  and  for  our

848
00:53:45,000 --> 00:53:49,000
line  edit  we'll  just  say  chat  name  like  that

849
00:53:50,000 --> 00:53:54,000
and  then  we'll  come  in  here  and  say  join  chat  now  you

850
00:53:54,000 --> 00:53:57,000
could  automate  this  as  soon  as  a  person  goes  into

851
00:53:57,000 --> 00:54:03,000
a  match  you  could  actually  go  set  up  the  uh  room  name

852
00:54:03,000 --> 00:54:05,000
and  automatically  have  them  join  but  in  this

853
00:54:05,000 --> 00:54:07,000
case  we're  going  to  manually  do  it  that  way  you  guys  get

854
00:54:07,000 --> 00:54:10,000
the  experience  of  how  it  works  so  what

855
00:54:10,000 --> 00:54:15,000
we'll  do  is  we'll  change  this  to  join  chat  room  like  that

856
00:54:15,000 --> 00:54:18,000
and  then  the  line  at  it  will  be  chat  name

857
00:54:18,000 --> 00:54:21,000
like  that  and  then  i'm  going  to  come  in  here  go  over

858
00:54:21,000 --> 00:54:24,000
here  button  down  and  then  i  will  hit  connect

859
00:54:25,000 --> 00:54:29,000
now  when  we  want  to  join  a  chat  room  all  we  have

860
00:54:29,000 --> 00:54:33,000
to  do  is  come  up  with  a  room  name  if  it's  persistent

861
00:54:33,000 --> 00:54:38,000
if  it's  hidden  and  if  it  is  a  room  type  so  i

862
00:54:38,000 --> 00:54:41,000
will  show  you  all  of  those  things  so  first  things  first

863
00:54:41,000 --> 00:54:49,000
let's  go  var  channel  is  equal  to  await  socket  dot  join  chat

864
00:54:49,000 --> 00:54:52,000
asynchronously  now  what  this  is  going  to

865
00:54:52,000 --> 00:54:55,000
do  is  we're  going  to  have  a  target  now  that  target  is

866
00:54:55,000 --> 00:54:59,000
what  the  name  of  that  chat  room  is  going  to  be  in

867
00:54:59,000 --> 00:55:02,000
this  case  we'll  just  say  actually  we  already  have  a  title  right

868
00:55:02,000 --> 00:55:07,000
here  right  so  dollar  sign  chat  name

869
00:55:07,000 --> 00:55:10,000
dot  text  comma  and  then  you'll  see  that  we  have  an  int

870
00:55:10,000 --> 00:55:14,000
type  so  what  does  that  actually  take  what  is  the

871
00:55:14,000 --> 00:55:19,000
type  well  the  type  is  a  nakaba  socket  chat  type  or  a

872
00:55:19,000 --> 00:55:23,000
channel  type  so  we'll  say  var  type  is  equal  to

873
00:55:23,000 --> 00:55:30,000
nakaba  socket  dot  channel  type  dot  and  you'll  see  that  we  have

874
00:55:30,000 --> 00:55:33,000
different  types  direct  met  uh  direct

875
00:55:33,000 --> 00:55:39,000
message  group  and  room  and  each  one  has  a  different  use  so

876
00:55:39,000 --> 00:55:41,000
thankfully  the  code  is  basically  the  same

877
00:55:42,000 --> 00:55:48,000
but  what  matters  is  if  it  is  going  to  be  a  room

878
00:55:48,000 --> 00:55:51,000
if  it's  going  to  be  a  group  or  if  it's  going  to

879
00:55:51,000 --> 00:55:51,000
be  a

880
00:55:51,000 --> 00:55:54,000
direct  message  in  our  case  it's  going  to  be  a  room  so

881
00:55:54,000 --> 00:55:56,000
i'm  going  to  come  in  here  and  say  type

882
00:55:56,000 --> 00:56:00,000
comma  and  then  if  it's  persistent  so  in  our  case  we  don't

883
00:56:00,000 --> 00:56:03,000
want  it  to  be  persistent  so  false  comma  and

884
00:56:03,000 --> 00:56:05,000
then  if  it's  hidden  it  will  say  false  we  want  to  make

885
00:56:05,000 --> 00:56:08,000
it  a  public  messaging  chat  so  people  can  actually

886
00:56:08,000 --> 00:56:13,000
go  in  and  message  each  other  and  not  have  to  authenticate  or

887
00:56:13,000 --> 00:56:15,000
be  added  to  that  chat  and  then  what

888
00:56:15,000 --> 00:56:17,000
i'm  going  to  do  is  i'm  going  to  print  that  chat  information

889
00:56:17,000 --> 00:56:19,000
so  print  channel

890
00:56:21,000 --> 00:56:26,000
like  that  now  this  will  basically  print  out  our  chats  information  so

891
00:56:26,000 --> 00:56:28,000
if  i  refresh  this  and  i  run

892
00:56:28,000 --> 00:56:31,000
this  if  i  join  and  i  say  test  and  i  join  you'll

893
00:56:31,000 --> 00:56:35,000
see  that  we  now  have  a  chat  that  is  right  here  you

894
00:56:35,000 --> 00:56:39,000
can  see  it  has  the  id  one  it  has  id  here  it

895
00:56:39,000 --> 00:56:43,000
says  there's  a  user  test  user  id  is  this  session  id  is

896
00:56:43,000 --> 00:56:45,000
this  so  we  can  get  all  the  people  that  are  inside  of

897
00:56:45,000 --> 00:56:50,000
that  chat  right  there  now  if  somebody  else  joins  test

898
00:56:50,000 --> 00:56:54,000
to  submit  and  then  they  go  test  and  they  join  you  can

899
00:56:54,000 --> 00:56:58,000
see  here  that  we  also  joined  channel  id  2

900
00:56:59,000 --> 00:57:04,000
user  presence  session  this  status  user  test  so  we  just  got  back

901
00:57:04,000 --> 00:57:06,000
that  user's  account  information

902
00:57:06,000 --> 00:57:10,000
right  so  we  got  test  and  test  to  in  this  chat  with

903
00:57:10,000 --> 00:57:12,000
each  other  and  that's  basically  what  these  guys  are

904
00:57:12,000 --> 00:57:16,000
saying  here  now  in  order  to  send  a  message  you  need  to

905
00:57:16,000 --> 00:57:18,000
actually  be  able  to  receive  that  message  right

906
00:57:18,000 --> 00:57:23,000
so  let's  go  to  our  script  here  and  let's  scroll  all  the

907
00:57:23,000 --> 00:57:25,000
way  up  to  the  top  and  the  reason  why  i'm

908
00:57:25,000 --> 00:57:27,000
scrolling  all  the  way  up  to  the  top  is  because  we  need

909
00:57:27,000 --> 00:57:32,000
to  subscribe  when  we  create  our  socket  to  the

910
00:57:32,000 --> 00:57:36,000
ability  to  actually  get  messages  so  what  we  need  to  do  is

911
00:57:36,000 --> 00:57:38,000
go  find  where  our  socket  gets  created

912
00:57:41,000 --> 00:57:44,000
which  is  right  here  so  we'll  come  in  here  we'll  say  socket

913
00:57:44,000 --> 00:57:49,000
dot  and  providing  that  godot  wants  to  be

914
00:57:49,000 --> 00:57:56,000
nice  to  me  it  will  auto  complete  please  maybe  not  well  we'll

915
00:57:56,000 --> 00:57:59,000
hit  dot  received  underscore

916
00:58:02,000 --> 00:58:09,000
channel  underscore  underscore  message  dot  connect  like  that  and  then  we'll  pass

917
00:58:09,000 --> 00:58:10,000
in  a  callable  so

918
00:58:10,000 --> 00:58:13,000
what  this  is  going  to  be  is  it's  just  going  to  be

919
00:58:13,000 --> 00:58:16,000
a  very  basic  function  that  prints  out  that  message

920
00:58:16,000 --> 00:58:24,000
currently  at  least  so  we'll  say  funk  underscore  on  underscore  channel  on

921
00:58:26,000 --> 00:58:27,000
channel

922
00:58:30,000 --> 00:58:34,000
message  like  that  and  we'll  pass  in  a  message  now  this  could

923
00:58:34,000 --> 00:58:36,000
be  a  type  if  you  want  it  to  be

924
00:58:36,000 --> 00:58:42,000
which  is  going  to  be  a  nakama  api  dot  api

925
00:58:44,000 --> 00:58:48,000
channel  message  like  that  and  then  we  can  just  go  ahead  and

926
00:58:48,000 --> 00:58:49,000
print  that  message

927
00:58:50,000 --> 00:58:55,000
and  there  we  go  now  we're  going  to  connect  that  message  so

928
00:58:55,000 --> 00:58:58,000
we'll  just  pass  on  channel  message  like

929
00:58:58,000 --> 00:59:02,000
that  and  that  will  actually  pass  that  to  this  guy  right  here

930
00:59:02,000 --> 00:59:03,000
and  we'll  go  ahead  and  send  out  that

931
00:59:03,000 --> 00:59:11,000
signal  now  when  we  do  our  message  when  we  want  to  send

932
00:59:11,000 --> 00:59:14,000
a  message  we  need  to  actually  create  a  panel  for

933
00:59:14,000 --> 00:59:17,000
that  so  let's  come  in  here  let's  right  click  our  panel  and

934
00:59:17,000 --> 00:59:20,000
add  in  another  panel  like  so  i'm  going

935
00:59:20,000 --> 00:59:23,000
to  drag  this  guy  over  here  make  it  about  this  big  give

936
00:59:23,000 --> 00:59:25,000
or  take  it  we're  going  to  create  a  very  basic

937
00:59:26,000 --> 00:59:31,000
message  block  system  so  it's  going  to  be  pretty  ugly  my  apologies

938
00:59:31,000 --> 00:59:33,000
but  i  want  to  try  to  get  this  to

939
00:59:33,000 --> 00:59:36,000
work  as  quickly  as  humanly  possible  so  what  i'm  going  to  do

940
00:59:36,000 --> 00:59:40,000
is  i'm  going  to  put  in  a  line  edit  like  so

941
00:59:40,000 --> 00:59:45,000
i'm  going  to  make  this  go  on  the  bottom  stretched  across  i'm

942
00:59:45,000 --> 00:59:47,000
going  to  pull  this  back  right  click

943
00:59:47,000 --> 00:59:50,000
add  a  child  node  we'll  add  in  a  button  i'm  going  to

944
00:59:50,000 --> 00:59:53,000
snap  that  guy  right  in  the  bottom  right  where

945
00:59:53,000 --> 00:59:57,000
we'll  make  it  about  if  i  can  click  on  it  about  yay

946
00:59:57,000 --> 01:00:01,000
big  we'll  put  a  send  or  maybe  just  like  an  arrow

947
01:00:01,000 --> 01:00:04,000
like  that  i  think  that'll  work  we'll  put  a  placeholder

948
01:00:07,000 --> 01:00:11,000
chat  text  here  we'll  type  this  as  chat  text  we'll  make  the

949
01:00:11,000 --> 01:00:14,000
panel  title  chat  and  then  we'll  make  the

950
01:00:14,000 --> 01:00:15,000
button  submit

951
01:00:16,000 --> 01:00:21,000
chat  like  that  i'm  going  to  go  ahead  and  right  click  add

952
01:00:21,000 --> 01:00:23,000
any  child  node  and  i'm  going  to  add  in  a

953
01:00:27,000 --> 01:00:31,000
i  am  brain  farting  on  what  it  is  it  is  a  text

954
01:00:31,000 --> 01:00:35,000
edit  like  that  we'll  make  it  full  screen  so  full

955
01:00:35,000 --> 01:00:39,000
rect  and  we'll  make  it  about  yay  big  that'll  go  ahead  and

956
01:00:39,000 --> 01:00:41,000
make  it  so  that  it's  kind  of  scalable  and

957
01:00:41,000 --> 01:00:46,000
you  know  easy  to  use  now  inside  of  here  i'll  scroll  down

958
01:00:46,000 --> 01:00:49,000
and  i  will  do  auto  wrap  that's  fine  so  that

959
01:00:49,000 --> 01:00:53,000
means  that  if  i  put  in  a  bunch  of  text  here  it's

960
01:00:53,000 --> 01:00:55,000
going  to  auto  wrap  so  you  can  see  if  i  do  wrap

961
01:00:55,000 --> 01:00:59,000
mode  boundary  it  will  go  ahead  and  wrap  that  and  then  i

962
01:00:59,000 --> 01:01:04,000
will  turn  on  scroll  as  well  so  if  this  continues

963
01:01:04,000 --> 01:01:08,000
so  we'll  control  c  control  v  we'll  paste  it  you'll  see  that

964
01:01:08,000 --> 01:01:10,000
it's  going  to  scroll  we  also  want  to

965
01:01:11,000 --> 01:01:15,000
we'll  want  to  shut  off  editable  and  i  think  that  will  work

966
01:01:15,000 --> 01:01:17,000
because  i  think  this  is  placeholder  text  so

967
01:01:17,000 --> 01:01:20,000
if  i  come  in  here  and  we  paste  this  text  in  this

968
01:01:20,000 --> 01:01:23,000
will  allow  us  to  scroll  i'm  curious  if  we  can

969
01:01:24,000 --> 01:01:30,000
make  it  follow  the  uh  actual  scrolling  but  i  don't  think  we

970
01:01:30,000 --> 01:01:33,000
can  i  know  there's  a  way  to  do  it  it's  been

971
01:01:33,000 --> 01:01:35,000
a  while  since  i've  done  it  but  i  think  i'll  just  go

972
01:01:35,000 --> 01:01:38,000
ahead  and  skip  that  part  but  there  is  a  way  to  make

973
01:01:38,000 --> 01:01:42,000
it  so  it  automatically  scrolls  to  the  bottom  but  that's  okay  right

974
01:01:42,000 --> 01:01:45,000
now  so  this  is  basically  what  our

975
01:01:45,000 --> 01:01:47,000
chat  setup  is  going  to  be  it's  going  to  be  relatively  simple

976
01:01:47,000 --> 01:01:49,000
but  it's  going  to  be  something

977
01:01:49,000 --> 01:01:51,000
that  we  can  at  least  use  now  i'm  going  to  grab  my

978
01:01:51,000 --> 01:01:54,000
submit  chat  button  i'm  going  to  go  to  node  button

979
01:01:54,000 --> 01:01:59,000
down  i'm  going  to  connect  that  to  my  submit  chat  button  now

980
01:01:59,000 --> 01:02:04,000
when  we  want  to  do  a  message  right  we  want

981
01:02:04,000 --> 01:02:08,000
to  send  a  message  we  can  come  in  here  and  say  var

982
01:02:08,000 --> 01:02:15,000
await  socket  dot  write  chat  message  asynchronous

983
01:02:15,000 --> 01:02:20,000
now  this  is  going  to  require  a  id  so  we  have  to

984
01:02:20,000 --> 01:02:22,000
actually  have  some  kind  of  chat  name  in  this  case

985
01:02:22,000 --> 01:02:25,000
i'm  just  going  to  go  ahead  and  grab  this  guy  right  here

986
01:02:25,000 --> 01:02:28,000
copy  it  and  paste  it  it's  not  the  most  ideal

987
01:02:28,000 --> 01:02:32,000
situation  because  once  you're  connected  to  that  channel  you  should  probably  just

988
01:02:32,000 --> 01:02:33,000
be  connected  to

989
01:02:33,000 --> 01:02:38,000
that  channel  right  instead  of  passing  in  this  value  here  but  we

990
01:02:38,000 --> 01:02:42,000
can  basically  throw  a  value  up  at  the

991
01:02:42,000 --> 01:02:45,000
top  and  basically  just  save  it  across  different  functions  and  that  would

992
01:02:45,000 --> 01:02:46,000
solve  this  problem  but

993
01:02:46,000 --> 01:02:50,000
for  right  now  we'll  go  ahead  and  do  this  and  then  we

994
01:02:50,000 --> 01:02:52,000
need  to  pass  in  our  message  content  so  what  we  can

995
01:02:52,000 --> 01:03:00,000
do  is  do  dollar  sign  chat  text  dot  text  like  that  now

996
01:03:00,000 --> 01:03:02,000
i  think  we  should  probably  change  this  to  text

997
01:03:02,000 --> 01:03:07,000
edit  instead  just  do  chat  text  box  that  way  we  actually  have

998
01:03:07,000 --> 01:03:12,000
that  value  now  if  we  hit  play  and  we  go  ahead

999
01:03:12,000 --> 01:03:18,000
and  hit  play  if  we  come  in  here  we  both  submit  join

1000
01:03:18,000 --> 01:03:22,000
test  test  number  two  submit  join  test

1001
01:03:22,000 --> 01:03:27,000
if  we  send  a  text  test  send  you'll  see  that  it  is

1002
01:03:27,000 --> 01:03:31,000
very  mad  at  us  cannot  convert  argument  to  from

1003
01:03:31,000 --> 01:03:34,000
string  to  dictionary  so  it's  going  to  require  a  dictionary  for  us

1004
01:03:34,000 --> 01:03:37,000
to  be  able  to  do  that  so  what

1005
01:03:37,000 --> 01:03:40,000
we  need  to  do  is  we  need  to  pass  in  an  actual

1006
01:03:40,000 --> 01:03:44,000
dictionary  of  objects  so  we  can  come  in  here  pass  in  this

1007
01:03:44,000 --> 01:03:44,000
dictionary

1008
01:03:46,000 --> 01:03:54,000
like  so  and  go  quote  message  colon  that  and  the  reason  why

1009
01:03:54,000 --> 01:03:57,000
we  have  to  do  this  is  because  we  can

1010
01:03:57,000 --> 01:04:03,000
actually  do  what's  called  uh  emotes  right  and  emotes  are  sent  via

1011
01:04:03,000 --> 01:04:07,000
um  json  data  so  that's  the  reason  why

1012
01:04:07,000 --> 01:04:10,000
it  requires  it  to  be  a  dictionary  so  that  we  can  actually

1013
01:04:10,000 --> 01:04:12,000
send  over  emote  information

1014
01:04:13,000 --> 01:04:16,000
now  i'm  not  going  to  cover  that  just  because  uh  there's  a

1015
01:04:16,000 --> 01:04:19,000
whole  like  loading  emotes  and  stuff  like

1016
01:04:19,000 --> 01:04:22,000
that  that  you  need  to  do  and  that's  way  beyond  the  basics

1017
01:04:22,000 --> 01:04:24,000
of  this  tutorial  so  if  you  guys  want  to  look

1018
01:04:24,000 --> 01:04:27,000
at  that  you  guys  can  go  check  out  their  real -time  chatting

1019
01:04:27,000 --> 01:04:29,000
section  and  they'll  go  over  that  but  i'll

1020
01:04:29,000 --> 01:04:34,000
go  ahead  and  hit  submit  test  to  submit  join  test  join  test

1021
01:04:34,000 --> 01:04:38,000
test  send  and  you'll  see  that  we  actually

1022
01:04:38,000 --> 01:04:44,000
get  an  error  so  it  says  invalid  chat  identifier  so  what's  going

1023
01:04:44,000 --> 01:04:47,000
on  here  right  well  if  you  take  a  look

1024
01:04:47,000 --> 01:04:52,000
at  your  chat  here  if  we  take  a  look  at  our  chat

1025
01:04:52,000 --> 01:04:56,000
you'll  see  that  our  chat  actually  has  an  identifier

1026
01:04:57,000 --> 01:05:02,000
id2  you  see  that  so  when  you  have  a  chat  it  actually

1027
01:05:02,000 --> 01:05:08,000
has  an  identifier  associated  with  that  chat  and  so

1028
01:05:08,000 --> 01:05:11,000
you  don't  want  to  pass  in  the  title  of  the  chat  you

1029
01:05:11,000 --> 01:05:14,000
want  to  pass  in  the  identifier  you  can  see  that  we

1030
01:05:14,000 --> 01:05:19,000
have  a  channel  right  here  so  if  i  go  channel .id  we

1031
01:05:19,000 --> 01:05:23,000
can  go  ahead  and  refresh  this  guy  and  go  submit

1032
01:05:23,000 --> 01:05:28,000
test  submit  and  you'll  see  that  we  are  now  printing  out  and

1033
01:05:28,000 --> 01:05:30,000
you  will  see  that  we  have  an  id  right  here

1034
01:05:30,000 --> 01:05:34,000
i  added  channel  id  in  post  so  that  way  it  was  nice

1035
01:05:34,000 --> 01:05:37,000
and  quick  but  you  can  see  right  here  channel  id  is

1036
01:05:37,000 --> 01:05:42,000
2  dot  dot  dot  test  so  2  is  the  id  of  the

1037
01:05:42,000 --> 01:05:45,000
chat  and  test  is  the  actual  id  that  we  gave  it  so

1038
01:05:45,000 --> 01:05:46,000
we  need

1039
01:05:46,000 --> 01:05:48,000
to  pass  that  value  in  right  here  for  us  to  be  able

1040
01:05:48,000 --> 01:05:52,000
to  send  messages  so  what  we  can  do  is  we  can  come

1041
01:05:52,000 --> 01:05:52,000
in

1042
01:05:52,000 --> 01:05:56,000
here  copy  this  var  channel  go  all  the  way  up  to  the

1043
01:05:56,000 --> 01:05:56,000
top

1044
01:05:59,000 --> 01:06:05,000
and  go  var  current  channel  like  that  and  then  we  go  all

1045
01:06:05,000 --> 01:06:08,000
the  way  back  down  to  the  bottom  and  do  current

1046
01:06:10,000 --> 01:06:13,000
channel  is  equal  to  that  and  then  we'll  go  ahead  and  copy

1047
01:06:13,000 --> 01:06:18,000
this  we'll  paste  it  right  here  dot  id  and

1048
01:06:18,000 --> 01:06:22,000
then  we  can  go  ahead  and  do  current  channel  dot  id  right

1049
01:06:22,000 --> 01:06:25,000
here  as  well  now  what  that  will  do  is  that

1050
01:06:25,000 --> 01:06:28,000
it  should  allow  us  to  actually  send  it  to  the  proper  id

1051
01:06:28,000 --> 01:06:32,000
so  we'll  hit  submit  test  to  submit  test

1052
01:06:32,000 --> 01:06:37,000
join  test  join  test  send  and  you  should  see  right  here  we

1053
01:06:37,000 --> 01:06:39,000
no  longer  have  an  error  but  instead

1054
01:06:40,000 --> 01:06:45,000
we  have  an  actual  message  right  here  i  probably  should  not  have

1055
01:06:45,000 --> 01:06:47,000
used  the  word  test  i  should  probably  use

1056
01:06:47,000 --> 01:06:51,000
this  is  a  test  message  that  way  we  can  actually  see  what

1057
01:06:51,000 --> 01:06:54,000
it  is  and  you  can  see  here  that  i  send  a

1058
01:06:54,000 --> 01:06:58,000
message  and  you  see  right  here  channel  id  test  code  is  zero

1059
01:06:58,000 --> 01:07:01,000
content  message  this  is  a  test  message

1060
01:07:01,000 --> 01:07:04,000
and  that's  basically  how  we  can  send  and  receive  messages  now  the

1061
01:07:04,000 --> 01:07:08,000
nice  thing  is  that  if  since  we

1062
01:07:08,000 --> 01:07:14,000
typed  our  message  section  and  unfortunately  this  is  getting  pretty  large  so

1063
01:07:14,000 --> 01:07:16,000
i  might  want  to  abstract  some

1064
01:07:16,000 --> 01:07:21,000
this  out  but  if  we  go  to  right  here  where  our  on

1065
01:07:21,000 --> 01:07:26,000
channel  message  is  at  we  have  our  different  messages

1066
01:07:26,000 --> 01:07:30,000
that  we  can  message  information  here  that  we  can  actually  use  so

1067
01:07:30,000 --> 01:07:33,000
if  we  type  message  dot  you'll  see

1068
01:07:33,000 --> 01:07:37,000
that  it's  going  to  automatically  give  us  some  information  here  that  we

1069
01:07:37,000 --> 01:07:39,000
can  work  with  so  you  can  see  that  we

1070
01:07:39,000 --> 01:07:44,000
have  sender  id  username  all  sorts  of  information  so  the  nice  thing

1071
01:07:44,000 --> 01:07:48,000
is  i  can  come  in  here  and  i  can  go  dollar  sign

1072
01:07:49,000 --> 01:08:01,000
chat  text  box  dot  text  plus  equals  message  dot  user  name  plus

1073
01:08:01,000 --> 01:08:09,000
colon  space  plus  message  dot  and  then  if  we  take

1074
01:08:09,000 --> 01:08:19,000
a  look  there  should  be  a  content  dot  message  like  that  like

1075
01:08:19,000 --> 01:08:24,000
that  and  we  should  probably  also  go  ahead  and  pass  in  a

1076
01:08:24,000 --> 01:08:25,000
new  line

1077
01:08:25,000 --> 01:08:30,000
because  we  want  the  user  to  have  a  new  line  here  now

1078
01:08:30,000 --> 01:08:38,000
so  let's  try  this  var  content  is

1079
01:08:38,000 --> 01:08:46,000
equal  to  message  dot  content  and  then  i  wonder  if  content  dot

1080
01:08:46,000 --> 01:08:47,000
message  will  work  instead

1081
01:08:48,000 --> 01:08:51,000
okay  there  we  go  we'll  try  that  and  see  if  that  works

1082
01:08:51,000 --> 01:08:54,000
also  i'm  going  to  want  to  put  a  new  line  at

1083
01:08:54,000 --> 01:08:58,000
the  end  of  this  so  we'll  go  ahead  and  do  that  slash

1084
01:08:58,000 --> 01:09:01,000
n  for  a  new  line  that  way  every  time  somebody  sends  a

1085
01:09:01,000 --> 01:09:04,000
message  it's  going  to  be  a  new  lined  message  and  now  if

1086
01:09:04,000 --> 01:09:06,000
i  refresh  this  in  theory  this  should  work

1087
01:09:06,000 --> 01:09:12,000
so  we'll  go  ahead  and  do  submit  test  join  test  to  submit

1088
01:09:12,000 --> 01:09:18,000
test  join  test  send  and  it  is  very  unhappy

1089
01:09:18,000 --> 01:09:21,000
so  let's  take  a  look  you  can  see  the  content  here  is

1090
01:09:21,000 --> 01:09:24,000
a  string  data  so  it  looks  like  we're  going  to  need

1091
01:09:24,000 --> 01:09:29,000
to  json  parse  this  information  so  we'll  go  json  dot  parse  string

1092
01:09:29,000 --> 01:09:32,000
and  we'll  go  ahead  and  pass  that  in

1093
01:09:32,000 --> 01:09:37,000
and  there  we  go  and  that  should  fix  that  problem  basically  content

1094
01:09:37,000 --> 01:09:39,000
is  a  json  value  so  that's  something

1095
01:09:39,000 --> 01:09:43,000
that  i  didn't  think  about  i'm  talking  without  thinking  as  i'm  doing

1096
01:09:43,000 --> 01:09:46,000
this  tutorial  so  forgive  me  but  we

1097
01:09:46,000 --> 01:09:49,000
need  to  actually  parse  that  data  so  now  if  we  hit  send

1098
01:09:49,000 --> 01:09:54,000
you'll  see  test  test  test  this  is  a  test  message

1099
01:09:54,000 --> 01:09:59,000
like  so  test  two  this  is  a  test  message  and  that's  basically

1100
01:09:59,000 --> 01:10:02,000
how  you  could  do  a  very  basic  communication

1101
01:10:02,000 --> 01:10:07,000
system  so  now  the  question  is  okay  great  that's  fine  but  how

1102
01:10:07,000 --> 01:10:12,000
do  i  actually  do  group  chats  and  in  order  to  do

1103
01:10:14,000 --> 01:10:17,000
group  chats  what  we  need  to  do  is  we  need  to  come

1104
01:10:17,000 --> 01:10:21,000
in  here  and  we  need  to  go  ahead  and  grab  another

1105
01:10:21,000 --> 01:10:24,000
join  chat  here  and  what  i'm  going  to  do  is  i'm  going

1106
01:10:24,000 --> 01:10:27,000
to  unhide  my  group  section  and  i  guess  i'll

1107
01:10:27,000 --> 01:10:30,000
just  move  it  over  so  we  have  a  little  bit  more  space

1108
01:10:30,000 --> 01:10:33,000
let's  grab  this  guy  we'll  drag  him  over  like

1109
01:10:34,000 --> 01:10:38,000
this  it's  getting  a  little  on  the  cramped  side  with  our  uh

1110
01:10:38,000 --> 01:10:41,000
setup  here  so  i  might  need  to  readjust  some

1111
01:10:41,000 --> 01:10:45,000
stuff  but  i  don't  think  i  can  fit  it  really  up  here

1112
01:10:45,000 --> 01:10:49,000
so  we'll  just  kind  of  push  it  over  here  and  that

1113
01:10:49,000 --> 01:10:51,000
should  just  work  i  mean  it's  a  little  tight  but  it  will

1114
01:10:51,000 --> 01:10:53,000
work  for  the  demonstration  we're  trying  to

1115
01:10:53,000 --> 01:10:57,000
do  here  so  if  i  grab  this  guy  here  i  right  click

1116
01:10:57,000 --> 01:11:00,000
disconnect  inspector  change  this  to  join  a  group

1117
01:11:00,000 --> 01:11:05,000
chat  like  so  when  you  want  to  do  a  group  chat  all

1118
01:11:05,000 --> 01:11:09,000
you  got  to  do  is  come  in  and  basically

1119
01:11:10,000 --> 01:11:14,000
i  move  this  guy  over  there  we  go  all  you  really  need

1120
01:11:14,000 --> 01:11:15,000
to  do  is  you  need  to  come  in  here

1121
01:11:16,000 --> 01:11:19,000
connect  your  button  down  so  go  ahead  and  connect  that  over  here

1122
01:11:19,000 --> 01:11:21,000
and  then  we  can  come  in  here  and

1123
01:11:21,000 --> 01:11:26,000
basically  just  grab  this  exact  code  right  here  it's  almost  a  duplication

1124
01:11:26,000 --> 01:11:27,000
right  it's  almost  exactly

1125
01:11:27,000 --> 01:11:31,000
the  same  we'll  just  drop  that  guy  in  there  and  all  we

1126
01:11:31,000 --> 01:11:38,000
really  need  to  do  is  come  in  here  and  when  we

1127
01:11:38,000 --> 01:11:43,000
do  our  join  socket  asynchronously  we  just  basically  need  to  pass  in

1128
01:11:43,000 --> 01:11:44,000
our  group  id  so  we'll  say  and  i

1129
01:11:44,000 --> 01:11:49,000
believe  we  have  a  group  if  i  remember  correctly  so  selected  group

1130
01:11:49,000 --> 01:11:52,000
dot  id  and  then  we  can  pass  in  type

1131
01:11:52,000 --> 01:11:56,000
for  persistence  we're  going  to  want  to  say  true  because  we  want

1132
01:11:56,000 --> 01:11:58,000
to  keep  that  group  around  right

1133
01:11:58,000 --> 01:12:02,000
and  then  we  want  it  to  be  persistent  and  we  also  want

1134
01:12:02,000 --> 01:12:06,000
to  change  this  to  a  type  group  chat  and  then  what

1135
01:12:06,000 --> 01:12:11,000
we  can  do  is  we  can  come  in  here  hit  play  come

1136
01:12:11,000 --> 01:12:16,000
over  here  submit  test  we  will  go  ahead  and  create  a

1137
01:12:16,000 --> 01:12:19,000
group  so  that  way  now  our  group  actually  exists  so  if  we

1138
01:12:19,000 --> 01:12:22,000
refresh  our  groups  i'll  have  to  re -log  in

1139
01:12:22,000 --> 01:12:25,000
because  this  is  another  recording  session  and  you  can  see  we  now

1140
01:12:25,000 --> 01:12:27,000
have  a  test  group  and  we  are  now  a  part

1141
01:12:27,000 --> 01:12:31,000
of  it  now  from  here  we  can  join  that  group  with  test

1142
01:12:31,000 --> 01:12:34,000
two  so  we'll  come  in  here  and  i  already  did  this  one

1143
01:12:34,000 --> 01:12:40,000
so  we'll  do  test  two  test  join  group  and  it  got  mad

1144
01:12:40,000 --> 01:12:43,000
at  me  because  our  selected  group  is  not  correct

1145
01:12:43,000 --> 01:12:47,000
and  that's  my  fault  so  that's  totally  fine  so  i  will  have

1146
01:12:47,000 --> 01:12:51,000
to  refresh  real  quick  so  we'll  say  submit  test

1147
01:12:51,000 --> 01:12:55,000
we  will  go  ahead  and  list  our  groups  we'll  select  our  test

1148
01:12:55,000 --> 01:12:59,000
group  we'll  do  test  two  list  our  groups  select

1149
01:12:59,000 --> 01:13:03,000
it  join  that  group  and  then  when  we  join  our  chat  we

1150
01:13:03,000 --> 01:13:07,000
can  just  join  group  chat  growing  group  chat  and  then  test

1151
01:13:07,000 --> 01:13:09,000
and  you  will  see  that  this  guy  now  gets  it  and  if

1152
01:13:09,000 --> 01:13:14,000
we  go  this  is  a  test  message  and  we  send  that  guy

1153
01:13:14,000 --> 01:13:15,000
you  can

1154
01:13:15,000 --> 01:13:19,000
see  that  that  message  gets  sent  now  you  might  be  going  okay

1155
01:13:19,000 --> 01:13:24,000
so  why  does  this  matter  right  what  is  the  benefit  of  a

1156
01:13:24,000 --> 01:13:31,000
group  chat  versus  a  dynamic  chat  well  where  a  group  chat  matters

1157
01:13:31,000 --> 01:13:33,000
and  why  it's  important  is  because  you

1158
01:13:33,000 --> 01:13:37,000
can  do  what's  called  listing  the  message  history  so  because  it's  a

1159
01:13:37,000 --> 01:13:39,000
persistent  chat  we're  going  to  be  able

1160
01:13:39,000 --> 01:13:43,000
to  pull  back  all  of  that  information  so  the  reason  why  that's

1161
01:13:43,000 --> 01:13:46,000
cool  is  because  we  can  come  in  here  and  we

1162
01:13:46,000 --> 01:13:51,000
can  say  okay  when  the  user  joins  a  group  which  we'll  have

1163
01:13:51,000 --> 01:13:55,000
to  scroll  down  here  to  right  here  and  we'll

1164
01:13:55,000 --> 01:13:59,000
need  to  go  ahead  and  come  in  here  and  list  out  that

1165
01:13:59,000 --> 01:14:04,000
information  so  we'll  say  far  result  is  equal  to

1166
01:14:04,000 --> 01:14:13,000
await  client  dot  list  channel  messages  asynchronous  we'll  pass  in  our  session

1167
01:14:14,000 --> 01:14:19,000
and  then  we'll  pass  in  our  currently  selected  groups  so  selected  group

1168
01:14:19,000 --> 01:14:22,000
dot  id  we  could  pass  in

1169
01:14:22,000 --> 01:14:24,000
a  limit  value  so  in  our  case  we'll  just  do  100  that's

1170
01:14:24,000 --> 01:14:28,000
a  very  decent  value  forward  basically  forward

1171
01:14:28,000 --> 01:14:31,000
is  forward  or  backwards  right  so  we  can  grab  the  oldest  or

1172
01:14:31,000 --> 01:14:33,000
the  newest  and  that's  what  forward  is

1173
01:14:33,000 --> 01:14:37,000
is  forward  is  the  newest  so  we'll  say  forward  so  we'll  say

1174
01:14:37,000 --> 01:14:41,000
true  comma  and  then  i  believe  they  have

1175
01:14:41,000 --> 01:14:46,000
a  cursor  value  as  well  and  cursor  is  if  i  remember  correctly

1176
01:14:46,000 --> 01:14:48,000
it's  defaulted  let's  double  check  really

1177
01:14:48,000 --> 01:14:53,000
quick  if  we  hit  comma  cursor  variance  is  null  so  cursor  allows

1178
01:14:53,000 --> 01:14:55,000
you  to  say  i  want  you  to  start  at  this

1179
01:14:55,000 --> 01:14:59,000
point  so  if  you're  picking  up  the  next  100  values  let's  say

1180
01:14:59,000 --> 01:15:02,000
you  have  500  messages  you  can  pass  in

1181
01:15:02,000 --> 01:15:06,000
number  200  and  then  it'll  grab  from  200  to  300  if  that

1182
01:15:06,000 --> 01:15:09,000
makes  sense  so  in  our  case  i'll  just  leave  that

1183
01:15:09,000 --> 01:15:11,000
as  null  because  it's  just  going  to  be  easier  for  us  to

1184
01:15:11,000 --> 01:15:16,000
work  with  it  now  we  can  go  for  message  in

1185
01:15:16,000 --> 01:15:24,000
result  dot  message  like  that  messages  like  that  and  then  we  can

1186
01:15:24,000 --> 01:15:28,000
basically  just  go  exactly  what  we  did

1187
01:15:28,000 --> 01:15:32,000
before  so  we  can  come  up  here  and  grab  if  you  remember

1188
01:15:32,000 --> 01:15:36,000
how  we  actually  parsed  out  our  data  which

1189
01:15:36,000 --> 01:15:40,000
arguably  i  should  move  this  down  closer  to  my  actual  message  functionality

1190
01:15:40,000 --> 01:15:41,000
so  let's  go  ahead  and

1191
01:15:41,000 --> 01:15:46,000
just  do  that  really  quick  we'll  come  down  here  and  just  drop

1192
01:15:46,000 --> 01:15:49,000
it  right  let's  see  this  is  group  stuff

1193
01:15:50,000 --> 01:15:53,000
this  is  chat  stuff  so  we'll  go  ahead  and  just  drop  it

1194
01:15:53,000 --> 01:15:56,000
right  there  and  that'll  just  kind  of  keep  it  within

1195
01:15:56,000 --> 01:16:00,000
the  group  area  so  that  way  i  can  basically  come  in  here

1196
01:16:00,000 --> 01:16:05,000
and  do  this  and  say  chat  room  code  right  here  and

1197
01:16:05,000 --> 01:16:08,000
that'll  give  me  somewhere  to  actually  look  at  this  now  what  we

1198
01:16:08,000 --> 01:16:10,000
could  do  is  we  could  basically  just

1199
01:16:10,000 --> 01:16:15,000
grab  this  copy  it  and  paste  and  that's  all  we  need  to

1200
01:16:15,000 --> 01:16:19,000
do  and  then  in  theory  this  should  just  work  so  now

1201
01:16:19,000 --> 01:16:23,000
if  we  hit  play  in  theory  if  we're  lucky  it  will  work

1202
01:16:23,000 --> 01:16:27,000
so  we'll  go  here  we'll  say  list  groups  select

1203
01:16:27,000 --> 01:16:34,000
group  join  group  chat  and  we  got  an  error  message  return  response

1204
01:16:34,000 --> 01:16:37,000
invalid  channel  id  so  we  have  a  failure

1205
01:16:37,000 --> 01:16:42,000
here  that  says  that  our  channel  id  is  incorrect  so  let's  see

1206
01:16:42,000 --> 01:16:47,000
join  chat  asynchronously  list  channel

1207
01:16:48,000 --> 01:16:50,000
messages  that  should  be  correct

1208
01:16:52,000 --> 01:16:57,000
is  it  printing  out  what  i  expect  let's  see  so  i  don't

1209
01:16:57,000 --> 01:17:01,000
think  that  this  worked  100  here  so  let's  try

1210
01:17:03,000 --> 01:17:06,000
submitting  list  groups  select  group  that  should  select  our  group

1211
01:17:09,000 --> 01:17:13,000
and  then  i  should  be  able  to  join  group  chat  but  it

1212
01:17:13,000 --> 01:17:16,000
did  not  take  it  so  the  question  is  is  it  because  i

1213
01:17:16,000 --> 01:17:21,000
failed  to  join  the  group  chat  or  did  it  fail  here  so

1214
01:17:21,000 --> 01:17:27,000
if  we  do  this  the  id  of  the  group  id  is  string

1215
01:17:27,000 --> 01:17:27,000
get

1216
01:17:27,000 --> 01:17:34,000
return  if  not  string  else  string  await  list  channel  messages  try  refresh

1217
01:17:34,000 --> 01:17:36,000
and  it's  gonna  run  through  that

1218
01:17:36,000 --> 01:17:44,000
real  quick  but  it  didn't  do  anything  as  expected  so  if  i

1219
01:17:44,000 --> 01:17:49,000
drop  a  breakpoint  here  what  is  result  result  is

1220
01:17:49,000 --> 01:17:55,000
an  object  id  cacheable  null  null  so  we  got  a  nakama  exception

1221
01:17:55,000 --> 01:17:59,000
invalid  channel  id  so  the  question  is  is  did

1222
01:17:59,000 --> 01:18:02,000
our  channel  get  saved  let's  go  ahead  and  take  a  look  at

1223
01:18:02,000 --> 01:18:05,000
nakama  really  quick  chat  messages

1224
01:18:06,000 --> 01:18:11,000
group  chat  no  messages  found  so  our  group  chat  just  doesn't  exist

1225
01:18:11,000 --> 01:18:14,000
so  that's  not  great  so  that  means

1226
01:18:14,000 --> 01:18:17,000
something  went  wrong  with  how  we  initialized  our  group  chat  i  think

1227
01:18:17,000 --> 01:18:19,000
okay  so  i  figured  out  the  issue  so

1228
01:18:19,000 --> 01:18:25,000
basically  when  we  do  our  list  channel  messages  async  we  need  to

1229
01:18:25,000 --> 01:18:27,000
actually  do  our  current  channel .id

1230
01:18:27,000 --> 01:18:31,000
instead  so  when  we  do  our  join  chat  asynchronous  we  pull  back

1231
01:18:31,000 --> 01:18:33,000
a  channel  and  that's  the  channel  that

1232
01:18:33,000 --> 01:18:37,000
we're  currently  in  and  basically  we  need  to  go  and  list  those

1233
01:18:37,000 --> 01:18:40,000
message  right  here  and  then  i  have  a

1234
01:18:40,000 --> 01:18:45,000
section  here  for  messages  in  result  messages  if  the  message  content  does

1235
01:18:45,000 --> 01:18:48,000
not  contain  an  empty  so  if  for

1236
01:18:48,000 --> 01:18:50,000
some  reason  a  message  gets  in  there  that's  empty  when  we  try

1237
01:18:50,000 --> 01:18:53,000
to  parse  it  it's  going  to  break  so  i  have

1238
01:18:53,000 --> 01:18:56,000
this  little  if  statement  right  here  that  basically  just  checks  to  see

1239
01:18:56,000 --> 01:18:59,000
if  it's  empty  if  it  is  ignore  it  and

1240
01:18:59,000 --> 01:19:02,000
there's  no  reason  to  have  it  so  now  if  i  hit  play

1241
01:19:02,000 --> 01:19:05,000
you'll  notice  that  when  i  come  in  here  and  i  hit

1242
01:19:05,000 --> 01:19:10,000
submit  i  list  my  groups  i  select  my  groups  and  i  join

1243
01:19:10,000 --> 01:19:13,000
my  group  chat  you'll  see  i  pull  back  those  messages

1244
01:19:13,000 --> 01:19:17,000
and  that's  one  of  the  big  cool  features  of  nakama  is  that

1245
01:19:17,000 --> 01:19:20,000
it  keeps  track  of  all  of  that  information

1246
01:19:20,000 --> 01:19:25,000
because  this  is  after  we  removed  and  rebooted  the  system  right  it

1247
01:19:25,000 --> 01:19:27,000
actually  came  back  with  the  proper

1248
01:19:27,000 --> 01:19:35,000
messages  that's  basically  what  persistence  does  right  here  this  through  right  here

1249
01:19:35,000 --> 01:19:37,000
causes  it  to  be  saved

1250
01:19:37,000 --> 01:19:42,000
and  to  be  reusable  later  that's  one  of  the  big  cool  advantages

1251
01:19:42,000 --> 01:19:45,000
here  so  now  the  question  is  okay  so  how

1252
01:19:45,000 --> 01:19:50,000
do  i  do  peer -to -peer  messaging  well  it's  not  technically  peer

1253
01:19:50,000 --> 01:19:51,000
-to -peer  but  how  do  i  send  messages

1254
01:19:51,000 --> 01:19:58,000
directly  to  a  user  well  again  it's  relatively  simple  if  we  come

1255
01:19:58,000 --> 01:20:03,000
into  our  stuff  here  we  control  c  control  v

1256
01:20:03,000 --> 01:20:07,000
join  group  chat  and  then  instead  of  join  group  chat  we  have

1257
01:20:07,000 --> 01:20:14,000
a  join  direct  chat  i  go  ahead  and  grab  our

1258
01:20:14,000 --> 01:20:17,000
where  where  is  it  join  group  chat  right  here  and  i  change

1259
01:20:17,000 --> 01:20:19,000
this  to  join

1260
01:20:21,000 --> 01:20:26,000
direct  chat  like  that  we  can  come  in  here  disconnect  right  click

1261
01:20:26,000 --> 01:20:29,000
connect  and  connect  now  in  order  to  do

1262
01:20:29,000 --> 01:20:33,000
a  direct  chat  it's  actually  relatively  easy  it's  exactly  the  same  as

1263
01:20:33,000 --> 01:20:35,000
everything  else  you  come  in  here

1264
01:20:35,000 --> 01:20:39,000
you  go  join  chat  room  right  here  copy  it  come  down  here

1265
01:20:39,000 --> 01:20:42,000
paste  well  really  actually  we  probably  should

1266
01:20:42,000 --> 01:20:44,000
just  grab  this  to  be  honest  it's  going  to  save  us  a

1267
01:20:44,000 --> 01:20:47,000
bit  of  trouble  so  if  we  paste  this  guy  in  here

1268
01:20:47,000 --> 01:20:52,000
change  the  channel  type  to  direct  message  like  that  instead  of  having

1269
01:20:52,000 --> 01:20:56,000
a  selected  group  id  we  need  to  grab

1270
01:20:56,000 --> 01:21:00,000
the  user  id  in  terms  of  persistence  we  want  to  keep  true

1271
01:21:00,000 --> 01:21:04,000
we  also  want  to  keep  false  for  hidden  but  for  this

1272
01:21:04,000 --> 01:21:08,000
join  chat  asynchronous  we  can  go  ahead  and  pass  in  a  user

1273
01:21:08,000 --> 01:21:13,000
id  so  we  need  to  get  our  actual  user  identifier

1274
01:21:13,000 --> 01:21:16,000
and  the  easiest  way  to  do  that  is  by  using  the  get

1275
01:21:16,000 --> 01:21:19,000
users  asynchronous  call  if  you  remember  we  did  that

1276
01:21:19,000 --> 01:21:25,000
earlier  so  we'll  just  say  var  users  is  equal  to  await  client

1277
01:21:25,000 --> 01:21:30,000
dot  get  users  asynchronous  and  then  we'll  pass  in

1278
01:21:30,000 --> 01:21:34,000
our  session  and  we  need  to  pass  in  a  id  pack  string

1279
01:21:34,000 --> 01:21:37,000
array  and  then  the  user  name  that  we're  going  to  be

1280
01:21:37,000 --> 01:21:41,000
passing  in  so  in  our  case  i  think  if  we  take  a

1281
01:21:41,000 --> 01:21:44,000
look  at  our  user  interface  we  have  a  chat  name  we  could

1282
01:21:44,000 --> 01:21:49,000
probably  just  take  that  i  think  that  will  work  so  for  the

1283
01:21:49,000 --> 01:21:52,000
chat  name  what  i'll  do  is  i'll  just  pull  this

1284
01:21:52,000 --> 01:21:56,000
guy  which  is  chat  name  so  we'll  come  into  our  script  we'll

1285
01:21:56,000 --> 01:22:00,000
hit  dollar  sign  chat  name  dot  text

1286
01:22:01,000 --> 01:22:06,000
and  then  that  should  bring  back  our  users  so  now  we  know

1287
01:22:06,000 --> 01:22:07,000
that  it's  going  to  bring  back  one  user  and

1288
01:22:07,000 --> 01:22:11,000
that's  it  so  since  it's  going  to  bring  back  one  user  we

1289
01:22:11,000 --> 01:22:18,000
can  basically  just  do  if  users  dot  thighs

1290
01:22:19,000 --> 01:22:24,000
is  greater  than  zero  then  we  can  do  the  rest  of  this

1291
01:22:24,000 --> 01:22:27,000
bit  of  code  here  and  then  we  can  just  pass  in  and

1292
01:22:27,000 --> 01:22:27,000
say

1293
01:22:27,000 --> 01:22:32,000
users  bracket  bracket  zero  dot  id  and  that'll  pass  back  a  user

1294
01:22:32,000 --> 01:22:35,000
id  that  we  can  actually  communicate  with

1295
01:22:35,000 --> 01:22:39,000
so  now  in  theory  this  should  work  and  of  course  as  always

1296
01:22:39,000 --> 01:22:41,000
with  theory  it  doesn't  always  work  but  we'll  see

1297
01:22:41,000 --> 01:22:46,000
so  we'll  submit  as  test  we'll  submit  as  test  to  and  then

1298
01:22:46,000 --> 01:22:52,000
we'll  go  test  to  join  direct  chat  it's  mad  and

1299
01:22:52,000 --> 01:22:58,000
that's  because  users  came  back  let's  see  with  an  array  it  looks

1300
01:22:58,000 --> 01:23:01,000
like  it's  users  dot  users  so  that's  my  fault

1301
01:23:01,000 --> 01:23:05,000
so  we'll  say  users  dot  users  and  i  should  probably  just  do

1302
01:23:05,000 --> 01:23:06,000
this  as  results  then

1303
01:23:08,000 --> 01:23:10,000
so  we'll  just  do  this  as  a  result  as  a  result  as

1304
01:23:10,000 --> 01:23:10,000
a  result  as  a  result  of  the  user  results

1305
01:23:10,000 --> 01:23:15,000
because  we  don't  want  to  mess  with  our  current  code  down  here

1306
01:23:15,000 --> 01:23:17,000
that  has  results  already  we'll  just  do

1307
01:23:17,000 --> 01:23:26,000
that  and  then  for  this  we'll  just  say  user  results  dot  users

1308
01:23:26,000 --> 01:23:29,000
bracket  bracket  zero  because  we  now  know  that

1309
01:23:29,000 --> 01:23:31,000
we  need  to  go  a  little  bit  deeper  than  what  we  expected

1310
01:23:31,000 --> 01:23:36,000
so  now  if  we  go  ahead  and  submit  test

1311
01:23:36,000 --> 01:23:41,000
test  two  join  direct  chat  now  we're  in  a  direct  chat  if

1312
01:23:41,000 --> 01:23:46,000
we  go  into  test  two  and  we  go  to  test  join  direct

1313
01:23:46,000 --> 01:23:46,000
chat

1314
01:23:46,000 --> 01:23:49,000
we  pass  test  in

1315
01:23:51,000 --> 01:23:54,000
okay  so  i  think  i  figured  out  what's  going  on  here  so

1316
01:23:54,000 --> 01:23:57,000
i  commented  this  out  just  so  we  could  check  it  out

1317
01:23:57,000 --> 01:24:02,000
but  what  i  think  is  going  on  here  is  remember  in  our

1318
01:24:02,000 --> 01:24:05,000
previous  tutorial  we  had

1319
01:24:06,000 --> 01:24:12,000
test  block  test  two  and  because  they're  blocked  they  can't  send  them

1320
01:24:12,000 --> 01:24:13,000
messages

1321
01:24:14,000 --> 01:24:17,000
so  it  completely  stops  them  from  being  able  to  communicate  with  each

1322
01:24:17,000 --> 01:24:19,000
other  and  that's  why

1323
01:24:20,000 --> 01:24:24,000
this  is  happening  so  if  i  remove  this  let's  see  what  happens

1324
01:24:24,000 --> 01:24:26,000
if  i  do  that  so  we'll  go  ahead  and  come  in

1325
01:24:26,000 --> 01:24:31,000
here  we'll  control  s  we'll  hit  play  and  then  we'll  try  it

1326
01:24:31,000 --> 01:24:35,000
one  more  time  so  we'll  do  submit  test  to  submit

1327
01:24:35,000 --> 01:24:41,000
test  join  direct  chat  test  to  join  direct  chat  test  we  will

1328
01:24:41,000 --> 01:24:44,000
send  a  message  and  that  will  now  work

1329
01:24:44,000 --> 01:24:50,000
now  the  reason  why  this  didn't  work  was  because  test  had  test

1330
01:24:50,000 --> 01:24:51,000
two  blocks  so  since  they're  blocked

1331
01:24:51,000 --> 01:24:56,000
they  can't  communicate  at  all  so  that's  the  reason  why  this  happened

1332
01:24:56,000 --> 01:25:00,000
so  it  was  my  fault  but  that  was

1333
01:25:00,000 --> 01:25:05,000
basically  the  reasoning  now  if  we  go  ahead  and  stop  this  and

1334
01:25:05,000 --> 01:25:07,000
then  we  come  in  here  and  uncomment  this

1335
01:25:07,000 --> 01:25:12,000
with  control  k  and  then  we  run  this  bad  boy  in  theory

1336
01:25:12,000 --> 01:25:15,000
we  should  be  able  to  see  our  previous  communications

1337
01:25:15,000 --> 01:25:20,000
so  test  to  join  direct  chat  and  you  will  see  there's  all

1338
01:25:20,000 --> 01:25:22,000
of  our  messages  now  i'm  getting  a  little  bit

1339
01:25:22,000 --> 01:25:28,000
additional  messages  mostly  because  of  my  testing  not  because  of  a  problem

1340
01:25:28,000 --> 01:25:29,000
with  nakama  that's  just

1341
01:25:29,000 --> 01:25:33,000
something  that  i  did  on  my  own  by  accident  but  you  can

1342
01:25:33,000 --> 01:25:37,000
see  here  are  all  of  the  messages  that  we  have

1343
01:25:37,000 --> 01:25:45,000
so  that's  basically  how  you  do  messages  back  and  forth  inside  of

1344
01:25:45,000 --> 01:25:46,000
nakama

1345
01:25:48,000 --> 01:25:53,000
hey  guys  editor  mitch  here  so  something  that  you  should  do  once

1346
01:25:53,000 --> 01:25:55,000
you  do  your  chat  system  and  you  get

1347
01:25:55,000 --> 01:26:01,000
that  guy  settled  when  you  have  this  chat  right  here  what  you

1348
01:26:01,000 --> 01:26:05,000
should  also  do  is  subscribe  to  everybody's

1349
01:26:05,000 --> 01:26:09,000
channels  so  if  you  have  friends  or  some  kind  of  channel  system

1350
01:26:09,000 --> 01:26:12,000
you  need  to  subscribe  to  that  channel  so

1351
01:26:12,000 --> 01:26:15,000
what  i'm  gonna  do  is  come  up  to  my  on  login  login

1352
01:26:15,000 --> 01:26:18,000
button  down  so  when  i  press  my  login  i'm  gonna  go

1353
01:26:18,000 --> 01:26:24,000
ahead  and  come  in  here  and  i'm  gonna  have  sub  to  friend

1354
01:26:24,000 --> 01:26:28,000
channels  like  that  now  i'm  gonna  scroll  down

1355
01:26:28,000 --> 01:26:31,000
and  i  have  a  chat  section  in  here  so  you  can  see

1356
01:26:31,000 --> 01:26:34,000
we  have  our  little  group  section  right  here  we  scroll

1357
01:26:34,000 --> 01:26:37,000
down  we  have  a  chat  room  code  right  here  so  this  is

1358
01:26:37,000 --> 01:26:40,000
our  chat  section  so  right  here  just  somewhere  in

1359
01:26:42,000 --> 01:26:47,000
this  general  section  here  we're  gonna  go  ahead  and  add  in  the

1360
01:26:47,000 --> 01:26:49,000
ability  to  sub  to  the  friend  channels

1361
01:26:49,000 --> 01:26:58,000
right  so  we'll  say  funk  sub  to  friends  channels  like  that  and

1362
01:26:58,000 --> 01:27:01,000
then  what  i'm  gonna  do  is  say  var  results

1363
01:27:01,000 --> 01:27:09,000
is  equal  to  await  client  dot  list  friends  asynchronously  i'm  gonna  pass

1364
01:27:09,000 --> 01:27:10,000
in  my  session

1365
01:27:10,000 --> 01:27:13,000
and  that'll  just  bring  in  all  of  my  friends  and  then  from

1366
01:27:13,000 --> 01:27:15,000
here  i  can  go  ahead  and  subscribe  to  their

1367
01:27:15,000 --> 01:27:23,000
channel  so  for  i  in  results  dot  friends  like  that  and  then

1368
01:27:23,000 --> 01:27:26,000
i'm  gonna  go  ahead  and  say  var  type  is  equal  to

1369
01:27:26,000 --> 01:27:34,000
nakama  socket  dot  channel  type  dot  direct  message  and  then  i  can

1370
01:27:34,000 --> 01:27:37,000
go  ahead  and  pull  back  my  chat  that  i  have

1371
01:27:37,000 --> 01:27:40,000
so  i  can  sub  to  that  channel  so  i  can  say  await

1372
01:27:40,000 --> 01:27:46,000
socket  oh  i  have  sub  to  friends  sub  to  friend

1373
01:27:46,000 --> 01:27:50,000
so  we'll  do  friend  channels  and  that'll  fix  that  little  function  not

1374
01:27:50,000 --> 01:27:54,000
found  so  socket  dot  join  chat  async

1375
01:27:54,000 --> 01:27:57,000
and  then  i'll  go  ahead  and  pass  an  i  dot  user  dot

1376
01:27:57,000 --> 01:28:04,000
id  comma  type  comma  true  comma  false  and  that'll

1377
01:28:04,000 --> 01:28:09,000
basically  allow  me  to  pull  those  sockets  back  now  this  should  return

1378
01:28:09,000 --> 01:28:11,000
if  i  remember  correctly  a  channel

1379
01:28:11,000 --> 01:28:13,000
so  if  we  actually  hit  ctrl  f  you  can  see  we  have

1380
01:28:13,000 --> 01:28:15,000
a  couple  of  them  you  can  see  we  have  current  channel

1381
01:28:15,000 --> 01:28:17,000
right  here  so  what  i'm  going  to  do  is  i'm  going  to

1382
01:28:17,000 --> 01:28:23,000
come  in  here  and  say  chat  channels  is  equal  to

1383
01:28:23,000 --> 01:28:29,000
await  socket  okay  and  actually  now  that  i  think  about  this  let's

1384
01:28:29,000 --> 01:28:34,000
do  this  so  we'll  do  channel  let's  do  this

1385
01:28:34,000 --> 01:28:39,000
channel  is  equal  to  this  and  then  we  can  come  down  here

1386
01:28:39,000 --> 01:28:42,000
and  just  say  chat  channels

1387
01:28:43,000 --> 01:28:49,000
bracket  bracket  bracket  bracket  bracket  i  dot  user  dot  id  actually  i

1388
01:28:49,000 --> 01:28:52,000
wonder  if  i  should  do  dot  user  name

1389
01:28:52,000 --> 01:28:56,000
instead  that  way  it's  just  a  more  common  value  and  i  could

1390
01:28:56,000 --> 01:29:02,000
go  is  equal  to  channel  like  that  and  that'll

1391
01:29:02,000 --> 01:29:06,000
basically  hook  our  channel  here  to  this  object  so  i'll  say  var

1392
01:29:06,000 --> 01:29:10,000
and  then  there  we  go  and  chat  channels

1393
01:29:10,000 --> 01:29:13,000
doesn't  exist  yet  but  now  we  have  a  key  value  pair  here

1394
01:29:13,000 --> 01:29:15,000
that  we  can  use  and  that's  going  to  be  really

1395
01:29:15,000 --> 01:29:19,000
big  for  us  if  we  want  to  um  use  those  channels  later

1396
01:29:19,000 --> 01:29:23,000
so  now  i  can  go  ahead  and  grab  chat  channels  i

1397
01:29:23,000 --> 01:29:27,000
can  go  up  to  the  top  var  chat  channels  like  that  and

1398
01:29:27,000 --> 01:29:32,000
i  can  actually  come  in  here  and  now  i  have  access  to

1399
01:29:32,000 --> 01:29:34,000
all  of  my  chats  right  here  so  if  i  have  like  100

1400
01:29:34,000 --> 01:29:37,000
chats  i  could  actually  pull  back  the  channel  information

1401
01:29:37,000 --> 01:29:43,000
and  switch  between  them  really  easily  using  this  object  and  i'll  probably

1402
01:29:43,000 --> 01:29:45,000
go  through  that  later

1403
01:29:45,000 --> 01:29:49,000
but  it's  a  way  to  extend  our  chat  to  be  a  bit

1404
01:29:49,000 --> 01:29:55,000
more  useful  if  that  makes  sense  so  if  you  think  about  it

1405
01:29:55,000 --> 01:29:59,000
like  this  basically  what  we  could  do  is  we  could  add  in

1406
01:29:59,000 --> 01:30:06,000
a  tab  container  right  here  make  that  guy  full  screen

1407
01:30:07,000 --> 01:30:12,000
and  then  underneath  that  tab  container  you  can  actually  switch  between  different

1408
01:30:12,000 --> 01:30:12,000
tabs  right

1409
01:30:12,000 --> 01:30:18,000
and  i  think  what  we  could  do  and  again  this  is  going

1410
01:30:18,000 --> 01:30:21,000
to  be  a  lot  of  coding  and  then  we  could

1411
01:30:21,000 --> 01:30:25,000
actually  come  in  here  make  this  about  i  don't  know  about  this

1412
01:30:25,000 --> 01:30:27,000
big  give  or  take  and  then  we  could  put

1413
01:30:27,000 --> 01:30:32,000
that  chat  text  underneath  here  right  and  this  would  allow  us  to

1414
01:30:32,000 --> 01:30:36,000
in  theory  do  this  and  then  change  the

1415
01:30:36,000 --> 01:30:41,000
title  of  this  to  username  like  so  you  can  see  here  here's

1416
01:30:41,000 --> 01:30:46,000
the  username  so  what  we  could  do  at  least  in

1417
01:30:46,000 --> 01:30:52,000
theory  is  on  startup  once  we  subscribe  to  all  of  those  channels

1418
01:30:52,000 --> 01:30:54,000
it  would  just  fill  this  out  so  for

1419
01:30:54,000 --> 01:30:59,000
instance  if  we  come  in  here  and  we  go  and  subscribe  to

1420
01:30:59,000 --> 01:31:03,000
those  friend  channels  so  if  we  grab  this  guy  bring  it

1421
01:31:03,000 --> 01:31:10,000
down  here  come  in  here  and  then  basically  just  say  tab  container

1422
01:31:10,000 --> 01:31:13,000
or  i  guess  it's  going  to  be  dollar  sign

1423
01:31:13,000 --> 01:31:21,000
tab  container  dot  add  child  and  then  we  can  add  a  child

1424
01:31:21,000 --> 01:31:27,000
of  this  text  box  here  so  basically  if  we  add  a

1425
01:31:27,000 --> 01:31:30,000
child  of  this  text  box  and  i'm  just  kind  of  thinking  this

1426
01:31:30,000 --> 01:31:32,000
through  as  i  talk  to  you  guys  so  my  apologies

1427
01:31:32,000 --> 01:31:36,000
for  how  confusing  this  is  probably  going  to  end  up  being

1428
01:31:38,000 --> 01:31:43,000
but  we  could  do  a  text  box  so  this  is  going  to

1429
01:31:43,000 --> 01:31:46,000
be  a  text  edit  so  var

1430
01:31:48,000 --> 01:31:54,000
current  edit  is  equal  to  text  edit  dot  new  like  that  and

1431
01:31:54,000 --> 01:31:57,000
then  we  could  pass  in  our  current  edit  like  that

1432
01:32:07,000 --> 01:32:15,000
so  i  dot  user  dot  user  name  like  so  and  then  when

1433
01:32:15,000 --> 01:32:18,000
we  log  in  you'll  see  that  i'm  going  to  have  a  tab

1434
01:32:18,000 --> 01:32:18,000
right

1435
01:32:18,000 --> 01:32:23,000
here  called  username  but  if  i  click  on  login  and  it's  mad

1436
01:32:23,000 --> 01:32:26,000
at  me  so  you  can  see  invalid  index  test  2

1437
01:32:26,000 --> 01:32:31,000
so  let's  take  a  look  at  this  so  create  chat  null  so

1438
01:32:31,000 --> 01:32:33,000
this  is  a  null  object  it  needs  to  be  a  type

1439
01:32:33,000 --> 01:32:37,000
dictionary  that's  my  guess  at  least  so  we'll  come  in  here  we'll

1440
01:32:37,000 --> 01:32:41,000
say  colon  equals  bracket  bracket  like

1441
01:32:41,000 --> 01:32:43,000
that  and  that'll  make  it  into  an  object  and  now  if  we

1442
01:32:43,000 --> 01:32:47,000
try  it  it  should  in  theory  work  there  we  go  and

1443
01:32:47,000 --> 01:32:50,000
you  can  see  we  have  test  2  and  username  right  here  and

1444
01:32:50,000 --> 01:32:53,000
that  means  that  we  would  be  able  to  go  and

1445
01:32:53,000 --> 01:32:58,000
fetch  any  messages  that  we  want  from  that  person  so  if  we

1446
01:32:58,000 --> 01:33:00,000
were  to  go  in  here  sub  to  friend  chat  go

1447
01:33:00,000 --> 01:33:04,000
down  here  we  could  actually  go  and  fetch  that  person's  information  if

1448
01:33:04,000 --> 01:33:06,000
you  remember  we  actually

1449
01:33:06,000 --> 01:33:11,000
do  that  right  here  we  pull  back  the  messages  right  here  so

1450
01:33:11,000 --> 01:33:14,000
what  we  could  do  is  if  we  list  channel  messages

1451
01:33:14,000 --> 01:33:18,000
asynchronously  we  should  probably  pull  this  out  and  just  do

1452
01:33:21,000 --> 01:33:25,000
list  messages  like  that  do  this  it's  going  to  want  to  have

1453
01:33:25,000 --> 01:33:27,000
a  current  channel  dot  id  so

1454
01:33:27,000 --> 01:33:32,000
current  channel  like  that  and  then  we  could  come  in  here  and

1455
01:33:32,000 --> 01:33:39,000
just  do  current  edit  dot  text  is  equal  to

1456
01:33:40,000 --> 01:33:43,000
list  messages  and  then  we  have  to  pass  it  our  current  channel

1457
01:33:43,000 --> 01:33:47,000
so  that  would  be  our  let's  see

1458
01:33:47,000 --> 01:33:51,000
channel  right  here  so  channel  so  we'll  pass  it  that  channel  that'll

1459
01:33:51,000 --> 01:33:53,000
pass  back  all  of  the  text  in  that

1460
01:33:53,000 --> 01:33:57,000
channel  this  is  a  coroutine  so  it  must  be  called  with  await

1461
01:33:57,000 --> 01:34:00,000
that  makes  sense  so  await

1462
01:34:02,000 --> 01:34:07,000
and  then  instead  of  doing  this  we'll  just  return  that  value  so

1463
01:34:07,000 --> 01:34:11,000
we'll  just  say  var  text  oh  i  guess

1464
01:34:11,000 --> 01:34:14,000
i'm  gonna  have  to  create  a  text  so  var  text  is  equal

1465
01:34:14,000 --> 01:34:18,000
to  quote  and  then  we'll  need  to  just  do  text  plus

1466
01:34:18,000 --> 01:34:24,000
equals  blah  and  then  we  can  just  return  our  text  like  that

1467
01:34:24,000 --> 01:34:28,000
and  then  that  will  return  text  right  here  and

1468
01:34:28,000 --> 01:34:34,000
then  instead  of  doing  this  when  we  join  a  chat  group  we

1469
01:34:34,000 --> 01:34:39,000
can  just  go  dollar  sign  or  we  could  just  go  in

1470
01:34:39,000 --> 01:34:43,000
here  and  add  in  a  panel  like  what  we're  doing  right  here

1471
01:34:43,000 --> 01:34:44,000
you  can  see  how  we're  joining  chat

1472
01:34:44,000 --> 01:34:53,000
asynchronously  so  we  really  could  just  grab  this  section  here  and  just

1473
01:34:53,000 --> 01:34:54,000
paste  it  right  here

1474
01:34:55,000 --> 01:35:01,000
on  this  guy  like  so  and  that'll  basically  solve  that  problem  right

1475
01:35:01,000 --> 01:35:02,000
there  now  technically  this  is

1476
01:35:02,000 --> 01:35:06,000
duplicated  code  and  that's  probably  not  the  most  ideal  situation  but  that's

1477
01:35:06,000 --> 01:35:08,000
probably  okay  for  right  now

1478
01:35:08,000 --> 01:35:16,000
and  instead  of  doing  our  chat  channel  i  username  what  we  would

1479
01:35:16,000 --> 01:35:17,000
do  is  we  would  do  something  like

1480
01:35:17,000 --> 01:35:26,000
current  channel  and  then  selected  group  so  selected  group .id  the  current

1481
01:35:26,000 --> 01:35:28,000
name  would  also  be  the  selected

1482
01:35:28,000 --> 01:35:31,000
group  id  i  guess  we'd  probably  want  to  come  up  with  a

1483
01:35:31,000 --> 01:35:34,000
better  way  maybe  we  could  just  call  it  current

1484
01:35:34,000 --> 01:35:39,000
group  right  instead  of  the  name  like  so  and  then  we  could

1485
01:35:39,000 --> 01:35:42,000
probably  come  in  here  and  list  our  current

1486
01:35:42,000 --> 01:35:46,000
channel  as  well  and  in  theory  that  would  work  so  now  if

1487
01:35:46,000 --> 01:35:49,000
we  hit  play  in  theory  we  would  have  a  tabular

1488
01:35:49,000 --> 01:35:53,000
messaging  system  now  we  can  hit  submit  and  there's  all  of  our

1489
01:35:53,000 --> 01:35:56,000
messages  right  there  and  we  have  different

1490
01:35:56,000 --> 01:35:59,000
tabs  that  we  can  work  with  i  think  if  i  do  test

1491
01:35:59,000 --> 01:36:02,000
it's  probably  going  to  get  mad  at  me  invalid  index  id

1492
01:36:03,000 --> 01:36:06,000
that  makes  sense  because  current  channel  dot  id

1493
01:36:09,000 --> 01:36:13,000
current  channel  is  null  my  guess  is  because  i'm  not  in  a

1494
01:36:13,000 --> 01:36:16,000
channel  yet  so  that  would  make  sense  so  what

1495
01:36:16,000 --> 01:36:18,000
we  would  need  to  do  is  we  need  to  make  our  tab

1496
01:36:18,000 --> 01:36:21,000
container  handle  that  when  the  tab  gets  switched

1497
01:36:21,000 --> 01:36:26,000
which  i  think  there  is  a  on  tab  changed  right  here  so

1498
01:36:26,000 --> 01:36:30,000
we  would  have  to  keep  track  of  which  index  our

1499
01:36:30,000 --> 01:36:34,000
stuff  is  actually  located  in  so  i  think  that  that's  okay  so

1500
01:36:34,000 --> 01:36:36,000
we  could  actually  just  do  this  on  tab  changed

1501
01:36:36,000 --> 01:36:40,000
like  so  and  then  we  could  just  keep  track  of  what  index

1502
01:36:40,000 --> 01:36:44,000
we're  on  when  the  user  changes  their  tab  it  kind

1503
01:36:44,000 --> 01:36:48,000
keeps  track  of  that  so  how  i  would  do  that  is  if

1504
01:36:48,000 --> 01:36:54,000
i  go  into  where  the  tabs  are  located  so  you  can  see

1505
01:36:54,000 --> 01:36:58,000
here  and  i  know  this  is  probably  a  little  bit  confusing  and

1506
01:36:58,000 --> 01:37:00,000
my  apologies  i'm  just  kind  of  working

1507
01:37:00,000 --> 01:37:02,000
through  it  with  you  guys  but  so  you  can  see  right  here

1508
01:37:02,000 --> 01:37:06,000
we  have  a  channel  uh  selected  group  id  current

1509
01:37:06,000 --> 01:37:10,000
channel  so  what  we  could  do  is  when  we  do  our  tab

1510
01:37:10,000 --> 01:37:16,000
container  we  could  actually  connect  our  um  tab  changed

1511
01:37:16,000 --> 01:37:22,000
event  and  then  bind  the  um  user  id  to  it  so  we

1512
01:37:22,000 --> 01:37:28,000
could  do  dollar  sign  panel  tab  container  dot  add  child  like

1513
01:37:28,000 --> 01:37:38,000
so  but  we  could  do  dot  tab  changed  dot  connect  and  then

1514
01:37:38,000 --> 01:37:42,000
we  can  put  on  tab  changed  and  i  guess  i  should  do

1515
01:37:42,000 --> 01:37:43,000
on

1516
01:37:43,000 --> 01:37:49,000
chat  tab  tab  changed  dot  bind  and  i  can  pass  in  the

1517
01:37:49,000 --> 01:37:55,000
selected  group  id  like  so  and  then  we  could  come  in

1518
01:37:55,000 --> 01:38:02,000
here  and  just  say  funk  on  chat  tab  changed  like  so  and

1519
01:38:02,000 --> 01:38:04,000
then  we  could  pass  in  int

1520
01:38:06,000 --> 01:38:09,000
tab  tab  comma  or  i  guess  it  would  be  i'm  sorry  i'm

1521
01:38:09,000 --> 01:38:14,000
trying  to  code  in  c  sharp  tab  colon  int  comma  and  then

1522
01:38:14,000 --> 01:38:14,000
we

1523
01:38:14,000 --> 01:38:18,000
could  pass  in  group  id  or  channel

1524
01:38:22,000 --> 01:38:26,000
id  like  that  and  that  would  pass  in  that  value  like  that

1525
01:38:26,000 --> 01:38:30,000
and  there  we  go  so  what  that's  going  to  do  is

1526
01:38:30,000 --> 01:38:38,000
allow  us  to  print  well  uh  tab  comma  channel  id  like  that

1527
01:38:38,000 --> 01:38:40,000
and  that  will  give  us  the  ability  to  work

1528
01:38:40,000 --> 01:38:44,000
with  this  now  when  we  join  a  chat  group  that's  how  we

1529
01:38:44,000 --> 01:38:46,000
have  to  handle  that  but  when  we  do  our  sub  to

1530
01:38:46,000 --> 01:38:49,000
friends  channel  we  got  to  do  that  as  well  so  that  way

1531
01:38:49,000 --> 01:38:51,000
we  can  do  it  on  both  so  now  if  i  hit  play

1532
01:38:51,000 --> 01:38:53,000
in  theory

1533
01:38:53,000 --> 01:38:57,000
if  i  do  submit  it's  mad  at  me  unable  to  get  index

1534
01:38:57,000 --> 01:39:02,000
id  on  base  nil  that's  because  selected  group  is  null

1535
01:39:03,000 --> 01:39:06,000
and  that's  because  i'm  dumb  and  i  chose  the  wrong  bind  it's

1536
01:39:06,000 --> 01:39:09,000
going  to  be  i  dot  user  dot  username  so

1537
01:39:09,000 --> 01:39:12,000
we'll  grab  that  and  paste  it  right  here  let's  try  that  one

1538
01:39:12,000 --> 01:39:15,000
more  time  so  i'm  going  to  come  in  here  i'm

1539
01:39:15,000 --> 01:39:17,000
going  to  go  submit  and  it  once  again  is  going  to  be

1540
01:39:17,000 --> 01:39:21,000
mad  a  non -existent  function  bind  on  the  base  int

1541
01:39:21,000 --> 01:39:27,000
what's  mad  about  let  me  see  i  think  i  might  have  figured

1542
01:39:27,000 --> 01:39:29,000
it  out  what  if  i  do  this

1543
01:39:29,000 --> 01:39:34,000
instead  and  then  i  have  to  go  and  find  my  other  bind

1544
01:39:34,000 --> 01:39:37,000
which  should  be  i  think  i  need  to  put  it  out

1545
01:39:37,000 --> 01:39:44,000
inside  the  the  signal  connection  so  i'm  connecting  i'm  binding  this  to

1546
01:39:44,000 --> 01:39:46,000
the  signal  not  to  the  connection

1547
01:39:46,000 --> 01:39:50,000
function  i  think  that's  what's  doing  it  so  let's  try  that  let's

1548
01:39:50,000 --> 01:39:52,000
grab  the  other  one  so  you  can  see

1549
01:39:52,000 --> 01:39:57,000
how  this  one  connect  dot  bind  instead  i  think  i  need  to

1550
01:39:57,000 --> 01:40:01,000
bind  and  then  do  that  and  then  i  should  be

1551
01:40:01,000 --> 01:40:06,000
able  to  make  that  work  and  i  believe  it  is  index  and

1552
01:40:06,000 --> 01:40:09,000
then  channel  id  so  let's  try  that  let's  see  what

1553
01:40:09,000 --> 01:40:13,000
that  does  there  we  go  and  then  if  i  click  test  two

1554
01:40:13,000 --> 01:40:17,000
it  should  have  displayed  test  two  right  there  so

1555
01:40:17,000 --> 01:40:21,000
that's  perfect  so  what  that  means  is  that  we  can  go  current

1556
01:40:21,000 --> 01:40:26,000
channel  is  equal  to  chat  channels  bracket

1557
01:40:26,000 --> 01:40:33,000
bracket  channel  id  like  that  and  then  what  that  means  is  now

1558
01:40:33,000 --> 01:40:35,000
we  should  be  able  to  since  we're  binding

1559
01:40:35,000 --> 01:40:40,000
those  parameters  i  should  be  able  to  send  a  message  and  it

1560
01:40:40,000 --> 01:40:42,000
should  just  take  it  in  theory  invalid  get

1561
01:40:42,000 --> 01:40:48,000
text  on  null  that's  fine  my  guess  is  that's  because  chat  text

1562
01:40:48,000 --> 01:40:50,000
box  doesn't  exist  anymore  because  now  we're

1563
01:40:50,000 --> 01:40:54,000
going  the  opposite  direction  right  so  we're  sending  a  message  if  you

1564
01:40:54,000 --> 01:40:56,000
see  here  if  you  look  at  the  content

1565
01:40:56,000 --> 01:41:01,000
messages  test  type  is  zero  and  if  you  take  a  look  at

1566
01:41:01,000 --> 01:41:05,000
this  object  it  has  the  channel  id  sender  id

1567
01:41:05,000 --> 01:41:10,000
user  id  12  and  then  user  name  now  if  we  take  a

1568
01:41:10,000 --> 01:41:16,000
look  at  our  channel  objects  right  here  so  chat  channels

1569
01:41:16,000 --> 01:41:21,000
you  can  see  test  two  is  our  parameter  here  that's  going  to

1570
01:41:21,000 --> 01:41:24,000
be  our  players  information  if  that  makes  sense

1571
01:41:25,000 --> 01:41:32,000
so  i  think  we  could  probably  get  away  with  since  this  is

1572
01:41:32,000 --> 01:41:34,000
going  to  give  us

1573
01:41:35,000 --> 01:41:40,000
test  as  its  content  and  the  message  is  going  to  say  sender

1574
01:41:40,000 --> 01:41:44,000
id  is  right  here  the  channel  id  is  right

1575
01:41:44,000 --> 01:41:47,000
here  i  wonder  if  we  should  pull  because  it  has  a  username

1576
01:41:47,000 --> 01:41:49,000
right  here  but  that's  not  going  to  hook

1577
01:41:49,000 --> 01:41:54,000
us  up  to  our  channel  code  so  i'm  curious  if  we  need

1578
01:41:54,000 --> 01:41:58,000
to  change  how  we  send  our  data  across  so  we  send  our

1579
01:41:58,000 --> 01:42:02,000
data  we're  sending  the  message  and  then  the  current  channel  id  okay

1580
01:42:02,000 --> 01:42:04,000
so  i  think  i  know  what  i'm  going  to

1581
01:42:04,000 --> 01:42:07,000
do  here  so  we're  actually  going  to  change  up  a  little  bit

1582
01:42:07,000 --> 01:42:11,000
how  we're  doing  this  and  the  reason  why  i'll  show

1583
01:42:11,000 --> 01:42:15,000
you  if  we  take  a  look  at  right  here  we're  passing  in

1584
01:42:15,000 --> 01:42:18,000
our  current  channel  what  i'm  going  to  do  is  i'm

1585
01:42:18,000 --> 01:42:25,000
going  to  come  in  here  and  pass  in  instead  of  just  a

1586
01:42:25,000 --> 01:42:27,000
current  channel  i'm  going  to  pass  in

1587
01:42:28,000 --> 01:42:33,000
channel  like  that  colon  current  channel  and  then  i'm  also  going  to

1588
01:42:33,000 --> 01:42:34,000
pass  in  a  label  value

1589
01:42:36,000 --> 01:42:39,000
just  so  i  can  have  the  label  if  i  need  it  for

1590
01:42:39,000 --> 01:42:39,000
whatever  reason

1591
01:42:42,000 --> 01:42:46,000
and  the  label  in  the  selected  group  id  will  probably  just  be

1592
01:42:47,000 --> 01:42:51,000
group  chat  because  it  really  doesn't  need  to  have  anything  special  and

1593
01:42:51,000 --> 01:42:54,000
if  we  go  to  the  other  one  so

1594
01:42:54,000 --> 01:43:00,000
channel  chats  we  go  to  the  other  one  which  is  right  here

1595
01:43:00,000 --> 01:43:03,000
so  this  one  needs  to  go  dot  channel  because

1596
01:43:03,000 --> 01:43:07,000
we're  making  that  adjustment  real  quick  you  can  see  right  here  we're

1597
01:43:07,000 --> 01:43:08,000
doing  channel  so  you  can  see

1598
01:43:08,000 --> 01:43:12,000
we'll  need  to  make  that  adjustment  and  then  we'll  just  copy  this

1599
01:43:12,000 --> 01:43:14,000
guy  right  here  we'll  paste  it  like

1600
01:43:14,000 --> 01:43:18,000
so  and  then  i'm  going  to  go  ahead  and  pass  in  ctrl

1601
01:43:18,000 --> 01:43:18,000
x

1602
01:43:22,000 --> 01:43:26,000
channel  like  that  and  that  will  allow  us  to  have  an  object

1603
01:43:26,000 --> 01:43:30,000
that  has  a  label  here  and  then  for  the  actual

1604
01:43:30,000 --> 01:43:34,000
label  itself  i'll  just  pass  this  guy  in  like  that  and  then

1605
01:43:34,000 --> 01:43:38,000
i'll  just  do  channel .id  like  that  and  then

1606
01:43:38,000 --> 01:43:42,000
if  we  have  this  then  we  should  be  able  to

1607
01:43:44,000 --> 01:43:49,000
use  this  to  pull  back  that  channel  information  instead  and  i  know

1608
01:43:49,000 --> 01:43:51,000
what  you're  thinking  that

1609
01:43:51,000 --> 01:43:55,000
doesn't  sound  like  it's  going  to  work  but  it's  probably  not  going

1610
01:43:55,000 --> 01:43:58,000
to  work  so  let's  go  ahead  and  say

1611
01:43:58,000 --> 01:44:04,000
on  tab  change  bind  selected  group  id  if  i  do  on  tab

1612
01:44:04,000 --> 01:44:07,000
changed  bind  channel  id

1613
01:44:09,000 --> 01:44:15,000
like  that  and  then  when  we  produce  our  message  here  we're  going

1614
01:44:15,000 --> 01:44:18,000
to  be  fetching  back  this  on  channel

1615
01:44:18,000 --> 01:44:21,000
message  parse  the  content

1616
01:44:24,000 --> 01:44:29,000
and  right  here  we  will  have  a  chat  box  so  you  can

1617
01:44:29,000 --> 01:44:32,000
see  we  have  chat  chat  box  it'll  be  tab

1618
01:44:32,000 --> 01:44:42,000
container  dot  get  node  like  that  content  dot  and  if  we  take

1619
01:44:42,000 --> 01:44:44,000
a  look  at  what  our  message  is  going  to  be

1620
01:44:44,000 --> 01:44:47,000
right  here  see  how  we  have  our  right  message  asynchronous  we'll  just

1621
01:44:47,000 --> 01:44:50,000
say  content  dot  id  like  so

1622
01:44:50,000 --> 01:44:56,000
and  then  here  we  can  pass  in  quote  id  colon  and  fetch

1623
01:44:56,000 --> 01:45:00,000
back  our  channel  information  so  chat  channels

1624
01:45:01,000 --> 01:45:10,000
like  so  channel  id  so  it'd  be  current  channel  dot  id  right

1625
01:45:10,000 --> 01:45:10,000
here

1626
01:45:12,000 --> 01:45:16,000
like  that  and  that  will  pass  back  our  channel  information  and  then

1627
01:45:16,000 --> 01:45:18,000
from  here  we  could  just  go  dot

1628
01:45:19,000 --> 01:45:19,000
label

1629
01:45:21,000 --> 01:45:25,000
and  that  should  allow  us  to  fetch  back  the  correct  node  and

1630
01:45:25,000 --> 01:45:27,000
set  the  proper  information  right  there

1631
01:45:27,000 --> 01:45:32,000
and  in  theory  that  would  work  let's  try  that  and  see  how

1632
01:45:32,000 --> 01:45:32,000
that  works

1633
01:45:32,000 --> 01:45:38,000
so  if  we  hit  submit  test  to  test  send  you'll  see  that

1634
01:45:38,000 --> 01:45:40,000
we  now  get  our  test  information  so

1635
01:45:41,000 --> 01:45:45,000
this  is  a  test  message  like  that  and  we  click  go  you'll

1636
01:45:45,000 --> 01:45:48,000
see  this  is  a  test  message  just  like  that

1637
01:45:48,000 --> 01:45:52,000
and  that's  basically  how  we  can  make  a  tabbed  system  as  well

1638
01:45:52,000 --> 01:45:56,000
that  should  actually  work  for  our  chat

1639
01:45:56,000 --> 01:46:02,000
system  so  now  that  we  have  a  basic  chatting  system  that  fully

1640
01:46:02,000 --> 01:46:05,000
works  let's  talk  about  how  we  can  host

1641
01:46:05,000 --> 01:46:09,000
this  out  on  the  cloud  because  the  best  way  to  get  your

1642
01:46:09,000 --> 01:46:12,000
networking  working  is  by  hosting  it  out  on  the

1643
01:46:12,000 --> 01:46:15,000
cloud  that  means  that  you  have  to  pay  a  server  to  host

1644
01:46:15,000 --> 01:46:18,000
that  information  so  if  you  want  a  multiplayer

1645
01:46:18,000 --> 01:46:22,000
game  you  need  to  actually  pay  to  host  that  data  somewhere  right

1646
01:46:22,000 --> 01:46:25,000
and  that  is  where  digital  ocean

1647
01:46:25,000 --> 01:46:33,000
comes  in  digital  ocean  is  a  pretty  great  tools  kit  that  will

1648
01:46:33,000 --> 01:46:35,000
allow  you  to  host  your  projects

1649
01:46:35,000 --> 01:46:40,000
right  here  on  their  servers  and  it's  relatively  cheap  if  you  take

1650
01:46:40,000 --> 01:46:41,000
a  look  at  the  pricing  you  can  see

1651
01:46:41,000 --> 01:46:45,000
they  have  some  pretty  cheap  droplets  so  if  you  wanted  a  cheap

1652
01:46:45,000 --> 01:46:47,000
like  five  dollar  server  to  host  your  game

1653
01:46:47,000 --> 01:46:50,000
that's  more  or  less  what  this  is  for  is  it  allows  you

1654
01:46:50,000 --> 01:46:53,000
to  actually  host  stuff  out  in  the  cloud  for

1655
01:46:53,000 --> 01:46:58,000
relatively  cheap  and  i  will  drop  a  link  in  the  description  below

1656
01:46:58,000 --> 01:47:00,000
that  if  you  guys  use  it  it  will

1657
01:47:00,000 --> 01:47:03,000
give  me  credits  to  be  able  to  host  my  own  stuff  now

1658
01:47:03,000 --> 01:47:09,000
i  will  be  hosting  stuff  for  this  tutorial  here

1659
01:47:09,000 --> 01:47:11,000
i'll  be  giving  you  guys  an  ip  address  and  you  guys  can

1660
01:47:11,000 --> 01:47:15,000
use  it  for  your  testing  but  just  know  that  if  you

1661
01:47:15,000 --> 01:47:18,000
want  to  go  out  into  production  you  need  to  use  your  own

1662
01:47:18,000 --> 01:47:23,000
server  and  something  to  keep  in  mind  you  can  host  your

1663
01:47:23,000 --> 01:47:27,000
own  server  as  well  locally  but  it's  a  lot  harder  it's  not

1664
01:47:27,000 --> 01:47:29,000
as  safe  and  people  can  hack  into  your

1665
01:47:29,000 --> 01:47:31,000
networks  and  things  like  that  so  it's  really  nice  just  to  use

1666
01:47:31,000 --> 01:47:34,000
something  like  this  to  host  it  for  you

1667
01:47:34,000 --> 01:47:37,000
so  that  you  can  get  your  game  out  there  and  get  people

1668
01:47:37,000 --> 01:47:41,000
playing  it  and  playing  together  so  let's  go  ahead

1669
01:47:41,000 --> 01:47:44,000
and  create  an  account  or  log  in  whichever  one  you  guys  have

1670
01:47:44,000 --> 01:47:46,000
so  i'm  going  to  go  ahead  and  log  in  real  quick

1671
01:47:47,000 --> 01:47:52,000
so  this  is  digital  ocean  and  basically  the  nice  thing  here  is

1672
01:47:52,000 --> 01:47:55,000
this  is  your  dashboard  right  so  this

1673
01:47:55,000 --> 01:47:58,000
is  the  digital  ocean  dashboard  so  here  is  where  you  can  manage

1674
01:47:58,000 --> 01:47:59,000
all  of  your  resources  now  you  can  see

1675
01:47:59,000 --> 01:48:03,000
up  here  you  have  your  profile  information  and  then  you  have  whatever

1676
01:48:03,000 --> 01:48:05,000
droplets  you  have  now  in  digital  ocean

1677
01:48:05,000 --> 01:48:10,000
droplets  are  considered  machines  okay  and  you  can  see  that  they  have

1678
01:48:10,000 --> 01:48:12,000
all  sorts  of  really  cool  features

1679
01:48:12,000 --> 01:48:16,000
here  they  have  spaces  which  is  basically  like  storage  they  have  database

1680
01:48:16,000 --> 01:48:17,000
stuff  so  if  you  actually

1681
01:48:17,000 --> 01:48:21,000
come  in  here  you  can  see  that  you  can  spin  up  databases

1682
01:48:21,000 --> 01:48:24,000
right  here  so  if  you're  using  nakama  you

1683
01:48:24,000 --> 01:48:30,000
can  actually  store  your  database  outside  of  your  droplet  and  allow  for

1684
01:48:30,000 --> 01:48:32,000
load  balancing  they  actually  have

1685
01:48:32,000 --> 01:48:36,000
a  full  built -in  load  balancing  system  right  here  spinning  up  a

1686
01:48:36,000 --> 01:48:38,000
load  balance  so  you  can  actually  choose

1687
01:48:38,000 --> 01:48:43,000
different  data  regions  and  pass  data  in  between  different  regions  and  things

1688
01:48:43,000 --> 01:48:45,000
like  that  by  using

1689
01:48:45,000 --> 01:48:49,000
their  load  balancers  now  that  being  said  that's  way  beyond  the  scope

1690
01:48:49,000 --> 01:48:51,000
of  this  tutorial  but  that's  what

1691
01:48:51,000 --> 01:48:53,000
i'm  trying  to  say  is  digital  ocean  has  a  bunch  of  stuff

1692
01:48:53,000 --> 01:48:56,000
for  you  to  use  that  can  help  you  get  up  to  the

1693
01:48:56,000 --> 01:49:00,000
point  where  you  can  use  nakama  premium  and  actually  have  them  handle

1694
01:49:00,000 --> 01:49:01,000
a  lot  of  that  for  you  but  this  is  a

1695
01:49:01,000 --> 01:49:05,000
good  way  to  kind  of  get  started  into  that  if  that  makes

1696
01:49:05,000 --> 01:49:09,000
sense  so  let's  go  ahead  and  talk  about  how  to

1697
01:49:09,000 --> 01:49:11,000
create  a  droplet  so  let's  go  up  here  to  the  upper  right

1698
01:49:11,000 --> 01:49:14,000
hand  corner  click  on  create  click  on  droplet

1699
01:49:14,000 --> 01:49:18,000
you  could  do  an  app  platform  that's  technically  going  to  be  cheaper

1700
01:49:18,000 --> 01:49:19,000
but  it's  a  lot  harder  to  get

1701
01:49:19,000 --> 01:49:22,000
everything  set  up  properly  so  i'm  just  going  to  do  a  droplet

1702
01:49:22,000 --> 01:49:22,000
for  right  now

1703
01:49:26,000 --> 01:49:30,000
and  so  we  can  pick  what  region  we  want  our  droplet  in

1704
01:49:30,000 --> 01:49:31,000
so  right  here  i'm  going  to  choose  new

1705
01:49:31,000 --> 01:49:33,000
york  new  york  is  the  closest  to  me  so  we'll  choose  that

1706
01:49:33,000 --> 01:49:35,000
we'll  come  down  here  and  you  could

1707
01:49:35,000 --> 01:49:38,000
choose  an  image  now  if  you  have  a  specific  image  that  you're

1708
01:49:38,000 --> 01:49:39,000
looking  for  go  ahead  and  pick  it  right

1709
01:49:39,000 --> 01:49:42,000
here  in  my  case  i'm  going  to  go  with  ubuntu  but  if

1710
01:49:42,000 --> 01:49:44,000
you  want  to  you  can  also  look  at  the  marketplace

1711
01:49:44,000 --> 01:49:49,000
and  you  can  pick  different  stuff  so  docker  on  ubuntu  probably  would

1712
01:49:49,000 --> 01:49:51,000
be  a  good  image  to  get  or  maybe

1713
01:49:52,000 --> 01:49:55,000
something  like  lamp  if  you're  trying  to  do  a  lamp  server  or

1714
01:49:55,000 --> 01:49:57,000
wordpress  or  something  like  that  they

1715
01:49:57,000 --> 01:50:04,000
have  so  many  different  droplets  that  you  can  actually  use  have  at

1716
01:50:04,000 --> 01:50:06,000
your  disposal  you  can  see

1717
01:50:06,000 --> 01:50:08,000
here  you  can  also  do  custom  images  so  if  you  have  an

1718
01:50:08,000 --> 01:50:10,000
image  you  can  actually  just  spin  it  up  and  have

1719
01:50:10,000 --> 01:50:14,000
it  work  now  in  my  case  i'm  going  to  go  with  os

1720
01:50:14,000 --> 01:50:16,000
ubuntu  we're  going  to  start  from  base  even  though

1721
01:50:17,000 --> 01:50:22,000
technically  docker  on  ubuntu  probably  is  a  better  option  so  i'm  going

1722
01:50:22,000 --> 01:50:23,000
to  go

1723
01:50:24,000 --> 01:50:28,000
so  so  i'm  going  to  go  with  marketplace  docker  on  ubuntu  that's

1724
01:50:28,000 --> 01:50:29,000
going  to  save  us  a  lot  of  trouble

1725
01:50:29,000 --> 01:50:32,000
and  get  it  all  set  up  for  us  right  so  all  we

1726
01:50:32,000 --> 01:50:33,000
have  to  do  is  get  our  docker  composed  and  then  set  up

1727
01:50:33,000 --> 01:50:33,000
our

1728
01:50:33,000 --> 01:50:37,000
firewall  rules  and  we'll  be  good  to  go  so  we'll  go  ahead

1729
01:50:37,000 --> 01:50:39,000
and  add  that  guy  now  if  you  come  in  here  you

1730
01:50:39,000 --> 01:50:43,000
can  see  that  you  have  a  bunch  of  different  options  for  size

1731
01:50:43,000 --> 01:50:45,000
now  it  depends  on  what  you're  trying  to  do

1732
01:50:50,000 --> 01:50:54,000
and  typically  what  i  tell  people  is  you  want  to  pick  the

1733
01:50:54,000 --> 01:50:59,000
lowest  value  that  you  can  and  plus  one

1734
01:50:59,000 --> 01:51:02,000
so  for  instance  if  you  think  that  your  game  is  going  to

1735
01:51:02,000 --> 01:51:03,000
be  really  small  and  not  a  lot  of  people

1736
01:51:03,000 --> 01:51:06,000
are  going  to  play  it  then  something  like  the  14  a  month

1737
01:51:06,000 --> 01:51:09,000
one  is  probably  pretty  good  if  you're  looking

1738
01:51:09,000 --> 01:51:12,000
for  something  really  cheap  just  for  testing  if  you  go  to  regular

1739
01:51:12,000 --> 01:51:14,000
and  you  kick  it  over  you  can  see

1740
01:51:14,000 --> 01:51:17,000
that  you  can  just  do  something  like  the  six  dollar  a  month

1741
01:51:17,000 --> 01:51:19,000
one  or  even  the  four  dollar  a  month  one

1742
01:51:19,000 --> 01:51:23,000
if  you  can  get  away  with  under  10  gigabytes  if  you  were

1743
01:51:23,000 --> 01:51:26,000
to  come  up  here  and  choose  os  ubuntu

1744
01:51:26,000 --> 01:51:30,000
then  you  could  go  down  to  four  dollars  a  month  at  512

1745
01:51:30,000 --> 01:51:34,000
megabytes  now  once  you  get  down  that  low

1746
01:51:34,000 --> 01:51:39,000
this  is  basically  only  used  for  testing  you  want  to  at  minimum

1747
01:51:39,000 --> 01:51:41,000
have  six  dollars  a  month  of  one

1748
01:51:41,000 --> 01:51:44,000
one  gigabyte  one  cpu  just  because  it's  going  to  allow  you  to

1749
01:51:44,000 --> 01:51:45,000
have  a  lot

1750
01:51:48,000 --> 01:51:53,000
more  flexibility  for  your  project  now  since  i'm  doing  a  marketplace  image

1751
01:51:53,000 --> 01:51:53,000
of

1752
01:51:55,000 --> 01:51:59,000
and  now  since  this  is  going  to  be  a  tutorial  i  should

1753
01:51:59,000 --> 01:52:01,000
probably  just  do  ubuntu  with  the  four  because

1754
01:52:01,000 --> 01:52:05,000
odds  are  you're  not  going  to  have  the  funding  to  do  this

1755
01:52:05,000 --> 01:52:07,000
or  something  like  that  so  we'll  try  the  four

1756
01:52:07,000 --> 01:52:11,000
we  might  have  to  upgrade  to  six  we'll  see  and  then  you

1757
01:52:11,000 --> 01:52:14,000
can  see  here  that  you  can  add  a  volume  which

1758
01:52:14,000 --> 01:52:16,000
will  allow  you  to  expand  your  disk  space  now  in  our  case

1759
01:52:16,000 --> 01:52:19,000
we  don't  need  that  because  it's  fine  for  right

1760
01:52:19,000 --> 01:52:22,000
now  and  you  can  see  that  we  have  authentication  so  we  have

1761
01:52:22,000 --> 01:52:25,000
ssh  key  and  password  now  in  my  case  we're

1762
01:52:25,000 --> 01:52:29,000
just  going  to  do  so  i'm  going  to  set  my  password  right

1763
01:52:29,000 --> 01:52:32,000
here  and  we'll  scroll  down  here  and  you  can  see

1764
01:52:32,000 --> 01:52:36,000
that  we  can  do  improve  metrics  and  monitoring  for  free  so  may

1765
01:52:36,000 --> 01:52:39,000
as  well  turn  that  on  and  i  don't  think

1766
01:52:39,000 --> 01:52:43,000
we  need  to  do  a  database  cluster  here  but  we  can  look

1767
01:52:43,000 --> 01:52:45,000
at  that  in  the  future  so  you  can  see  here  is

1768
01:52:45,000 --> 01:52:49,000
our  host  name  right  here  which  i'll  call  it  youtube  2  tags

1769
01:52:49,000 --> 01:52:50,000
i'm  not  worried  about  it  and  then  you'll  see

1770
01:52:50,000 --> 01:52:54,000
that  it  has  a  project  right  here  now  this  project  is  where

1771
01:52:54,000 --> 01:52:56,000
it's  going  to  get  built  under  so  don't  worry

1772
01:52:56,000 --> 01:52:59,000
it'll  just  get  built  under  your  account  and  then  we'll  click  create

1773
01:52:59,000 --> 01:53:02,000
droplet  now  this  is  going  to  allow  us

1774
01:53:02,000 --> 01:53:07,000
to  have  a  droplet  once  it  gets  built  which  should  be  relatively

1775
01:53:07,000 --> 01:53:10,000
quick  there  we  go  you  can  see  it's

1776
01:53:10,000 --> 01:53:12,000
in  the  middle  of  building  it  and  it  is  now  completed  so

1777
01:53:12,000 --> 01:53:14,000
it  actually  created  your  little  droplet  right

1778
01:53:14,000 --> 01:53:18,000
here  so  now  at  this  point  once  we  click  into  it  you

1779
01:53:18,000 --> 01:53:22,000
can  see  here  is  our  youtube  2  dopplet  you  can  see  we

1780
01:53:22,000 --> 01:53:26,000
have  our  graphs  for  our  bandwidth  cpu  usage  stuff  like  that  we

1781
01:53:26,000 --> 01:53:28,000
have  access  which  allows  us  to  adjust

1782
01:53:28,000 --> 01:53:32,000
our  access  to  it  we  have  power  which  allows  you  to  turn

1783
01:53:32,000 --> 01:53:34,000
it  off  and  on  we  have  volumes  which  allow

1784
01:53:34,000 --> 01:53:39,000
you  to  have  block  storage  resize  which  allows  you  to  change  how

1785
01:53:39,000 --> 01:53:42,000
big  and  strong  that  droplet  is  so  you're

1786
01:53:42,000 --> 01:53:46,000
welcome  to  go  in  and  actually  upgrade  this  later  so  if  you

1787
01:53:46,000 --> 01:53:49,000
need  that  one  giga  memory  or  that  one

1788
01:53:49,000 --> 01:53:54,000
10  gigabyte  ssd  right  that's  all  stuff  that  right  here  is  available

1789
01:53:54,000 --> 01:53:56,000
and  then  you  can  come  in  here  and  go

1790
01:53:56,000 --> 01:54:00,000
into  networking  you  can  change  your  network  ip  address  your  firewall  stuff

1791
01:54:00,000 --> 01:54:02,000
you  can  come  in  here

1792
01:54:02,000 --> 01:54:05,000
and  back  it  up  you  can  get  snapshots  of  it  so  that

1793
01:54:05,000 --> 01:54:09,000
way  if  you  need  this  droplet  to  be  perfect  and

1794
01:54:09,000 --> 01:54:13,000
snapshot  it  for  backup  purposes  this  is  what  this  is  for  it

1795
01:54:13,000 --> 01:54:15,000
allows  you  to  basically  go  back  to  that

1796
01:54:15,000 --> 01:54:18,000
point  in  time  and  apply  it  to  your  image  so  the  nice

1797
01:54:18,000 --> 01:54:21,000
thing  is  is  if  you  create  snapshots  and  your  stuff

1798
01:54:21,000 --> 01:54:24,000
gets  hacked  or  something  like  that  you  can  roll  back  to  that

1799
01:54:24,000 --> 01:54:27,000
snapshot  and  stop  that  hack  from

1800
01:54:27,000 --> 01:54:31,000
happening  kernel  is  something  that  you're  not  going  to  be  using  but

1801
01:54:31,000 --> 01:54:32,000
basically  it  allows  you  to  upgrade

1802
01:54:32,000 --> 01:54:36,000
your  linux  kernel  history  is  the  history  of  it  destroy  allows  you

1803
01:54:36,000 --> 01:54:38,000
to  destroy  that  droplet  tags  allows

1804
01:54:38,000 --> 01:54:42,000
you  to  tag  it  and  recovery  allows  you  to  try  to  recover

1805
01:54:42,000 --> 01:54:45,000
your  droplet  now  that  we've  gone  through

1806
01:54:45,000 --> 01:54:49,000
all  of  this  let's  go  up  to  our  console  here  and  click

1807
01:54:49,000 --> 01:54:50,000
on  that  you'll  see  that  that's  going  to  pop

1808
01:54:50,000 --> 01:54:55,000
up  a  droplet  console  now  this  is  pretty  cool  because  you  actually

1809
01:54:55,000 --> 01:54:58,000
have  a  full  linux  machine  here  so  if

1810
01:54:58,000 --> 01:55:01,000
you  don't  know  linux  now  is  the  time  to  learn  because  linux

1811
01:55:01,000 --> 01:55:05,000
is  very  important  to  know  so  first  things  first

1812
01:55:05,000 --> 01:55:11,000
inside  of  ubuntu  to  install  docker  what  you  need  to  do  is

1813
01:55:11,000 --> 01:55:12,000
you  need  to  type

1814
01:55:14,000 --> 01:55:20,000
sudo  apt -get  update  and  that's  going  to  update  all  of  your

1815
01:55:20,000 --> 01:55:23,000
mirrors  out  there  and  then  we  need  to  go  in

1816
01:55:23,000 --> 01:55:27,000
and  actually  add  the  repository  because  docker  doesn't  actually  exist  in  the

1817
01:55:27,000 --> 01:55:29,000
repo  by  default  so  we'll  say

1818
01:55:29,000 --> 01:55:39,000
sudo  apt -get  install  ca -certificates  curl  like  that  and  that's  going

1819
01:55:39,000 --> 01:55:41,000
to  go  ahead  and  make  sure  that

1820
01:55:41,000 --> 01:55:49,000
we  have  curl  installed  and  then  we'll  sudo  install  m  0755 -d

1821
01:55:50,000 --> 01:55:57,000
slash  etc  slash  apt  slash  key  rings  and  then  we're  going  to

1822
01:55:57,000 --> 01:56:02,000
go  in  and  curl  out  to  the  docker  linux  ubuntu

1823
01:56:02,000 --> 01:56:06,000
i  will  actually  leave  these  commands  in  the  comments  below  by  the

1824
01:56:06,000 --> 01:56:09,000
way  so  you  guys  can  use  it  but  sudo  curl

1825
01:56:11,000 --> 01:56:20,000
dash  f  s  s  dash  l  f  s  capital  s  l  https

1826
01:56:20,000 --> 01:56:27,000
colon  slash  slash  download  dot  docker  dot  com  slash  linux

1827
01:56:27,000 --> 01:56:33,000
slash  ubuntu  slash  gpg  dash  o  space  slash  etc

1828
01:56:35,000 --> 01:56:35,000
etc

1829
01:56:35,000 --> 01:56:40,000
slash  apt  slash  key  rings

1830
01:56:43,000 --> 01:56:48,000
slash  docker  dot  asc  and  what  that's  going  to  do  is  it's

1831
01:56:48,000 --> 01:56:53,000
going  to  actually  create  a  docker  gpg  apt  repo

1832
01:56:53,000 --> 01:56:56,000
for  you  so  that  way  you  can  actually  go  and  install  docker

1833
01:56:56,000 --> 01:56:58,000
and  then  we  need  to  allow  access  to  it  so

1834
01:56:58,000 --> 01:57:03,000
sudo  ch  mod  a  plus  r  slash  etc

1835
01:57:04,000 --> 01:57:08,000
slash  apt  slash  key  rings

1836
01:57:08,000 --> 01:57:12,000
docker  asc  and  that  basically  allows  us  to

1837
01:57:13,000 --> 01:57:18,000
execute  and  use  that  data  that's  right  there  so  basically  linux  is

1838
01:57:18,000 --> 01:57:18,000
a  permission

1839
01:57:19,000 --> 01:57:23,000
system  that  is  very  very  aggressive  so  you  need  to  make  sure

1840
01:57:23,000 --> 01:57:28,000
that  you  keep  that  stuff  under  wraps  if  that  makes  sense  so

1841
01:57:28,000 --> 01:57:31,000
uh  linux  by  default  does  not  give  you

1842
01:57:31,000 --> 01:57:34,000
permissions  to  anything  and  you  have  to  give  yourself  permissions  to  it

1843
01:57:34,000 --> 01:57:36,000
so  that's  kind  of  what  we're  doing

1844
01:57:36,000 --> 01:57:42,000
right  here  so  then  we  can  come  in  here  and  finally  fire

1845
01:57:42,000 --> 01:57:43,000
off  our  apt  resources

1846
01:57:45,000 --> 01:57:48,000
now  this  command  is  going  to  be  really  difficult  to  do  so

1847
01:57:48,000 --> 01:57:48,000
we'll  do  echo

1848
01:57:48,000 --> 01:57:52,000
slash  enter  and  that's  going  to  allow  us  to  kind  of  get

1849
01:57:52,000 --> 01:57:56,000
a  actual  script  going  here  so  we'll  say  quote  deb

1850
01:57:56,000 --> 01:58:07,000
space  bracket  arch  equals  dollar  sign  dpkg  dash  dash  print  dash

1851
01:58:09,000 --> 01:58:10,000
architecture

1852
01:58:12,000 --> 01:58:14,000
side  by

1853
01:58:17,000 --> 01:58:20,000
equals  slash  etc

1854
01:58:20,000 --> 01:58:21,000
slash  apt

1855
01:58:21,000 --> 01:58:25,000
slash  key  rings

1856
01:58:27,000 --> 01:58:30,000
slash  docker  dot  asc

1857
01:58:31,000 --> 01:58:39,000
bracket  https  colon  slash  slash  download  dot  docker  dot  com  slash  linux

1858
01:58:39,000 --> 01:58:41,000
slash  ubuntu

1859
01:58:44,000 --> 01:58:45,000
code  controller  dot  można

1860
01:58:45,000 --> 01:58:52,000
and  we're  gonna  put  that  in  dollar  sign  dot  dot  slash  etc

1861
01:59:12,000 --> 01:59:14,000
opensafe

1862
01:59:14,000 --> 01:59:21,000
slash  etc  slash  apt  slash  source  dot  list  dot  d

1863
01:59:23,000 --> 01:59:29,000
slash  docker  dot  list  greater  than  sign  slash  dev

1864
01:59:30,000 --> 01:59:36,000
slash  null  and  i  know  that  that's  a  terrible  command  but  basically

1865
01:59:36,000 --> 01:59:38,000
all  this  command  is  doing

1866
01:59:38,000 --> 01:59:41,000
is  we're  going  and  we're  adding  in  we're  going  deb  all  of

1867
01:59:41,000 --> 01:59:44,000
this  information  and  we're  piping  all  this

1868
01:59:44,000 --> 01:59:50,000
info  into  our  pseudo  our  sources  list  right  here  for  docker  and

1869
01:59:50,000 --> 01:59:51,000
that's  basically  all  we're  doing

1870
01:59:51,000 --> 01:59:54,000
here  i  know  that  it  seems  really  confusing  but  that's  basically  what

1871
01:59:54,000 --> 01:59:56,000
we're  doing  here  now  i'm

1872
01:59:56,000 --> 01:59:58,000
going  to  double  check  this  command  because  i  just  spotted  a  mistake

1873
01:59:58,000 --> 02:00:00,000
right  here  where  i  did  equal

1874
02:00:00,000 --> 02:00:04,000
equal  instead  of  dash  dash  so  let  me  double  check  this  command

1875
02:00:04,000 --> 02:00:06,000
and  make  sure  that  i'm  happy  with  it

1876
02:00:06,000 --> 02:00:11,000
so  we  have  arch  e  dollar  sign  d  package  our  print  architecture

1877
02:00:11,000 --> 02:00:12,000
we're  going  to  sign  it

1878
02:00:12,000 --> 02:00:16,000
by  our  docker  asc  file  and  we're  going  to  go  out  to

1879
02:00:16,000 --> 02:00:19,000
our  docker  linux  ubuntu  and  we're  going  to  pull  back

1880
02:00:19,000 --> 02:00:27,000
the  os  release  and  i  misspelled  echo  right  here  you  can  see

1881
02:00:27,000 --> 02:00:29,000
i  made  a  mistake  as  always  you  make  a

1882
02:00:29,000 --> 02:00:31,000
million  mistakes  when  you  do  this  so  echo

1883
02:00:37,000 --> 02:00:41,000
so  that's  e -c -h -o  and  then  we  have  our  version

1884
02:00:41,000 --> 02:00:45,000
code  name  that  we  are  echoing  into  our  release

1885
02:00:45,000 --> 02:00:48,000
we're  pulling  back  the  stable  edition  we're  going  to  pipe  that  into

1886
02:00:48,000 --> 02:00:51,000
sudo  t  right  here  into  our  docker

1887
02:00:51,000 --> 02:00:56,000
lists  and  we're  greater  than  slash  dev  null  and  we'll  run  that

1888
02:00:56,000 --> 02:01:00,000
command  eco  is  not  found  that's  because

1889
02:01:00,000 --> 02:01:04,000
i  spelled  echo  wrong  so  i  guess  it's  good  thing  that  i

1890
02:01:04,000 --> 02:01:10,000
that  it  failed  immediately  so  e -c -h -o  and  we  will

1891
02:01:10,000 --> 02:01:12,000
try  running  it  hopefully  this  doesn't  blow  up

1892
02:01:14,000 --> 02:01:20,000
all  right  so  we  have  no  such  file  or  directory  so  all

1893
02:01:20,000 --> 02:01:22,000
right  so  i  think  i  figured  it  out  basically

1894
02:01:22,000 --> 02:01:25,000
there  was  an  issue  with  the  command  for  i  think  it  was

1895
02:01:25,000 --> 02:01:30,000
this  area  here  so  don't  worry  just  copy  what  i

1896
02:01:30,000 --> 02:01:34,000
have  in  my  description  and  just  use  that  and  it  will  just

1897
02:01:34,000 --> 02:01:36,000
work  for  you  so  now  all  i  got  to  do  is  type

1898
02:01:36,000 --> 02:01:43,000
sudo  apt  dash  get  update  like  that  and  that's  going  to  update

1899
02:01:43,000 --> 02:01:46,000
all  of  our  packages  in  our  repo  and  it's  going

1900
02:01:46,000 --> 02:01:51,000
to  go  and  fetch  out  to  the  docker  system  and  pull  back

1901
02:01:51,000 --> 02:01:54,000
the  actual  docker  packages  so  you  can  see  right

1902
02:01:54,000 --> 02:01:58,000
here  it's  actually  pulling  down  that  information  right  there  and  then  we're

1903
02:01:58,000 --> 02:01:58,000
going  to  go  ahead  and

1904
02:01:58,000 --> 02:02:07,000
install  docker  so  sudo  apt  dash  get  installed  docker  dash  ce  docker

1905
02:02:07,000 --> 02:02:09,000
dash  ce  dash  cli

1906
02:02:12,000 --> 02:02:21,000
container .io  docker  dash  build  dash  plugin  and  finally  the  most  important

1907
02:02:21,000 --> 02:02:22,000
one  of  the  group

1908
02:02:22,000 --> 02:02:27,000
docker  dash  compose  dash  plugin  and  that's  the  big  one  that's  the

1909
02:02:27,000 --> 02:02:29,000
one  that's  actually  going  to

1910
02:02:29,000 --> 02:02:32,000
matter  for  our  project  for  the  most  part  i  mean  the  rest

1911
02:02:32,000 --> 02:02:34,000
of  these  are  obviously  important  docker  ce

1912
02:02:34,000 --> 02:02:39,000
is  the  docker  uh  runtime  docker  ce  cli  is  this  command  line

1913
02:02:39,000 --> 02:02:42,000
interface  the  uh  container  is  the  actual

1914
02:02:42,000 --> 02:02:47,000
container  uh  system  docker  build  plugins  is  to  build  your  own  docker

1915
02:02:47,000 --> 02:02:49,000
containers  and  then  docker

1916
02:02:49,000 --> 02:02:53,000
compose  allows  you  to  actually  compose  dockers  based  off  of  a  docker

1917
02:02:53,000 --> 02:02:54,000
composition  file  if  you

1918
02:02:54,000 --> 02:02:58,000
remember  before  when  we  talked  about  how  to  build  nakama  that  was

1919
02:02:58,000 --> 02:02:59,000
one  of  the  big  things  that  you  need

1920
02:02:59,000 --> 02:03:02,000
to  use  so  we'll  hit  enter  it's  going  to  go  ahead  and

1921
02:03:02,000 --> 02:03:04,000
try  to  pull  it  it  says  that  it  cannot  locate  the

1922
02:03:04,000 --> 02:03:09,000
docker  build  plugin  my  guess  is  i  spelled  something  wrong  here  so

1923
02:03:09,000 --> 02:03:13,000
let's  see  docker  build  x  plugin  there  we

1924
02:03:13,000 --> 02:03:18,000
go  hit  go  and  it  should  go  ahead  and  download  and  install

1925
02:03:18,000 --> 02:03:22,000
docker  now  we  might  need  to  upgrade  to  the

1926
02:03:22,000 --> 02:03:25,000
next  step  up  to  the  one  gigabyte  edition  but  we're  going  to

1927
02:03:25,000 --> 02:03:28,000
see  if  we  can  get  away  with  the  four  dollar

1928
02:03:28,000 --> 02:03:32,000
a  month  version  first  and  if  we  can't  then  we'll  upgrade  to

1929
02:03:32,000 --> 02:03:35,000
the  six  dollar  a  month  version  and  then  we

1930
02:03:35,000 --> 02:03:38,000
can  run  our  docker  setup  here  so  we'll  see  how  this  works

1931
02:03:38,000 --> 02:03:39,000
but  we'll  go  from  there

1932
02:03:41,000 --> 02:03:44,000
so  it  looks  like  it  is  running  if  we  type  ps  you

1933
02:03:44,000 --> 02:03:49,000
will  see  that  we  have  a  bash  and  ps  running

1934
02:03:52,000 --> 02:03:56,000
so  if  we  type  docker  is  it  going  to  pop  up  and

1935
02:03:56,000 --> 02:03:59,000
there  we  go  so  we  do  have  docker  running  so  perfect

1936
02:03:59,000 --> 02:04:04,000
that's  exactly  what  we  want  so  now  from  here  we  need  to

1937
02:04:04,000 --> 02:04:08,000
get  a  docker  compose  file  onto  here  so  if  we

1938
02:04:08,000 --> 02:04:12,000
type  ls  right  here  you  can  see  that  we  have  nothing  going

1939
02:04:12,000 --> 02:04:17,000
on  so  what  we  can  do  is  we  can  type  mk  dir

1940
02:04:18,000 --> 02:04:22,000
nakama  cd  nakama  like  that  and  that's  going  to  get  us  into

1941
02:04:22,000 --> 02:04:24,000
that  directory  so  mk  dir  makes  the  directory

1942
02:04:24,000 --> 02:04:30,000
cd  nakama  just  brings  us  into  the  nakama  directory  so  now  we

1943
02:04:30,000 --> 02:04:34,000
can  come  in  here  and  basically  compose  our

1944
02:04:34,000 --> 02:04:39,000
docker  file  so  if  we're  lucky  we'll  be  able  to  just  copy

1945
02:04:39,000 --> 02:04:41,000
and  paste  our  composition  file  so  if  we  go  out

1946
02:04:41,000 --> 02:04:46,000
here  we  go  to  documents  and  we  find  our  nakama  instance  i

1947
02:04:46,000 --> 02:04:49,000
believe  i  have  a  nakama  server  tutorial

1948
02:04:49,000 --> 02:04:54,000
docker  compose .yaml  so  if  we  open  this  guy  up  you'll  see

1949
02:04:54,000 --> 02:04:58,000
this  is  what  our  docker  compose  file  looks  like

1950
02:04:58,000 --> 02:05:01,000
you  can  see  right  here  this  is  what  it  looks  like  so

1951
02:05:01,000 --> 02:05:05,000
if  we  hit  ctrl  a  ctrl  c  and  then  we  go  into

1952
02:05:06,000 --> 02:05:14,000
our  web  browser  here  and  we  type  nano  docker  dash  compose  dot

1953
02:05:14,000 --> 02:05:19,000
yml  and  then  we  right  click  paste  it

1954
02:05:19,000 --> 02:05:23,000
should  paste  all  that  data  right  into  here  so  that  way  we

1955
02:05:23,000 --> 02:05:25,000
don't  actually  have  to  set  up  filezilla

1956
02:05:25,000 --> 02:05:28,000
because  one  of  the  things  that's  unfortunate  is  a  lot  of  times

1957
02:05:28,000 --> 02:05:31,000
if  you're  doing  godot  networking  you

1958
02:05:31,000 --> 02:05:37,000
need  to  actually  put  files  up  into  filezilla  and  into  the  ftp

1959
02:05:37,000 --> 02:05:39,000
and  bring  them  over  to  digital  oceans

1960
02:05:39,000 --> 02:05:43,000
to  your  digital  ocean  droplet  so  thankfully  we  can  just  copy  and

1961
02:05:43,000 --> 02:05:47,000
paste  this  and  control  x  y  and  it'll  be

1962
02:05:47,000 --> 02:05:52,000
docker  compose  dot  yaml  and  now  from  here  we  should  be  able

1963
02:05:52,000 --> 02:05:57,000
to  just  get  it  to  run  if  we're  lucky  so  what

1964
02:05:57,000 --> 02:06:03,000
we'll  do  come  in  here  and  type  docker  compose  up  and  you'll

1965
02:06:03,000 --> 02:06:05,000
see  it's  going  to  go  ahead  and  attempt  to  pull

1966
02:06:05,000 --> 02:06:09,000
and  build  our  docker  instance  right  here  now  we  might  run  out

1967
02:06:09,000 --> 02:06:12,000
of  ram  it  just  kind  of  depends  but

1968
02:06:12,000 --> 02:06:15,000
hopefully  with  512  megs  of  ram  it's  going  to  be  really  tight

1969
02:06:15,000 --> 02:06:17,000
i  don't  know  if  this  is  going  to  work

1970
02:06:17,000 --> 02:06:20,000
we're  probably  going  to  need  a  gig  but  we  can  see  so

1971
02:06:20,000 --> 02:06:22,000
we'll  let  this  run  and  we'll  attempt  to  run  it

1972
02:06:22,000 --> 02:06:27,000
and  it  looks  like  it  might  have  worked  so  what  we  can

1973
02:06:27,000 --> 02:06:32,000
do  is  if  we  go  out  to  our  youtube  2  we  grab

1974
02:06:32,000 --> 02:06:33,000
our

1975
02:06:33,000 --> 02:06:38,000
public  ip  we  go  to  our  nakama  console  and  we  just  put

1976
02:06:38,000 --> 02:06:42,000
in  actually  i'll  just  make  a  new  thing  colon  and  we'll  put

1977
02:06:42,000 --> 02:06:50,000
in  7351  so  7351  enter  does  it  do  anything  that's  the  first

1978
02:06:50,000 --> 02:06:53,000
question  it  doesn't  look  like  it's  going

1979
02:06:53,000 --> 02:06:57,000
to  so  now  we  got  to  figure  out  is  it  this  guy's

1980
02:06:57,000 --> 02:07:03,000
fault  it  looks  like  this  is  running  so  my  question  is

1981
02:07:04,000 --> 02:07:07,000
server  is  ready  to  receive  web  requests  so  it  did  spin  up

1982
02:07:07,000 --> 02:07:10,000
properly  it  started  the  rule  manager  properly

1983
02:07:10,000 --> 02:07:15,000
so  that's  good  news  oh  you  can  see  it  is  just  absolutely

1984
02:07:15,000 --> 02:07:17,000
chugging  though  so  if  we  take  a  look

1985
02:07:17,000 --> 02:07:22,000
at  our  youtube  docker  container  let's  see  it  looks  like  our  cpu

1986
02:07:22,000 --> 02:07:25,000
utilization  is  pretty  high  our  disk  io  is

1987
02:07:25,000 --> 02:07:30,000
relatively  high  as  well  we  probably  need  to  upgrade  to  have  one

1988
02:07:30,000 --> 02:07:34,000
gig  of  ram  but  at  least  it  is  running

1989
02:07:35,000 --> 02:07:39,000
so  there  is  that  the  question  is  so  i  was  able  to

1990
02:07:39,000 --> 02:07:42,000
get  it  to  stop  so  what  we'll  do  is  we'll  close  it

1991
02:07:42,000 --> 02:07:46,000
we'll  go  to  our  youtube  we'll  go  over  to  upgrade  droplet  and

1992
02:07:46,000 --> 02:07:47,000
then  we'll  go  ahead  and  just  upgrade

1993
02:07:47,000 --> 02:07:52,000
that  up  to  one  size  larger  to  the  one  gigabyte  edition  so

1994
02:07:52,000 --> 02:07:56,000
we'll  do  that  and  then  we'll  click  cpu  ram

1995
02:07:57,000 --> 02:08:00,000
when  it's  going  to  ask  us  to  turn  off  our  droplet  so

1996
02:08:00,000 --> 02:08:02,000
we'll  go  up  to  power  we'll  power  it  off  because

1997
02:08:02,000 --> 02:08:05,000
there's  nothing  on  here  anyway  so  we  can  just  power  cycle  it

1998
02:08:05,000 --> 02:08:07,000
pretty  hard  there  we  go  it's  powered  down

1999
02:08:07,000 --> 02:08:12,000
we'll  go  to  resize  and  we'll  adjust  it  up  one  size  just

2000
02:08:12,000 --> 02:08:15,000
to  let  it  be  the  proper  size  that  it  needs  to

2001
02:08:15,000 --> 02:08:18,000
be  we're  going  to  let  that  run  you'll  see  it's  thinking  about

2002
02:08:18,000 --> 02:08:21,000
it  there  we  go  and  now  we  got  a

2003
02:08:21,000 --> 02:08:25,000
one  size  bigger  droplet  now  we  can  go  ahead  and  power  cycle

2004
02:08:25,000 --> 02:08:28,000
that  bad  boy  back  on  let's  go  into  our

2005
02:08:28,000 --> 02:08:32,000
networking  let's  come  down  to  our  firewall  and  create  a  firewall  now

2006
02:08:32,000 --> 02:08:34,000
the  firewall  is  just  going  to  be  test

2007
02:08:34,000 --> 02:08:38,000
firewall  and  what  we'll  do  is  we'll  have  an  inbound  of  ssh

2008
02:08:38,000 --> 02:08:40,000
we're  also  going  to  allow

2009
02:08:44,000 --> 02:08:51,000
a  custom  one  and  we're  going  to  allow  for  7351  so  we'll

2010
02:08:51,000 --> 02:08:54,000
copy  that  bad  boy  and  we'll  go  ahead  and

2011
02:08:54,000 --> 02:08:58,000
paste  it  like  that  and  then  we'll  do  the  same  thing  for

2012
02:08:58,000 --> 02:09:03,000
7350  as  well  and  then  we're  going  to  allow

2013
02:09:03,000 --> 02:09:10,000
another  one  which  is  going  to  be  7351  udp  and  7350  udp

2014
02:09:10,000 --> 02:09:13,000
that  way  we  can  have  all  of  our  stuff  all  of  our

2015
02:09:13,000 --> 02:09:15,000
ducks  in  a  row  and  everything  kind  of  covered  now  you  can

2016
02:09:15,000 --> 02:09:18,000
see  here  all  outbound  is  good  and  we  should

2017
02:09:18,000 --> 02:09:21,000
be  good  to  go  so  we'll  go  ahead  and  hit  create  firewall

2018
02:09:21,000 --> 02:09:24,000
and  that  should  create  that  firewall  onto

2019
02:09:24,000 --> 02:09:27,000
that  networking  system  so  if  we  go  to  our  droplet  and  we

2020
02:09:27,000 --> 02:09:31,000
go  to  youtube  2  you  should  see  right  here  under  our

2021
02:09:31,000 --> 02:09:38,000
firewall  networking  no  firewalls  are  applied  to  this  droplet  so  i  need

2022
02:09:38,000 --> 02:09:39,000
to  apply  this  firewall

2023
02:09:39,000 --> 02:09:45,000
so  let's  see  if  we  need  droplets  we  can  choose  our  droplet

2024
02:09:45,000 --> 02:09:47,000
add  droplet  and  then  we  will  search  for

2025
02:09:47,000 --> 02:09:52,000
youtube  2  and  we'll  go  ahead  and  connect  it  to  that  droplet

2026
02:09:52,000 --> 02:09:54,000
so  now  that  should  give  our  droplet

2027
02:09:54,000 --> 02:09:58,000
the  firewall  it  needs  to  do  its  job  so  now  we  should

2028
02:09:58,000 --> 02:10:00,000
be  able  to  go  to  console  and  fire  that  up

2029
02:10:01,000 --> 02:10:09,000
and  then  hit  cd  nakama  and  then  docker  compose  up  and  in

2030
02:10:09,000 --> 02:10:12,000
theory  it  should  run  a  lot  faster  which  it  is

2031
02:10:12,000 --> 02:10:15,000
you  can  see  it's  actually  firing  off  just  well  the  init  node

2032
02:10:15,000 --> 02:10:18,000
was  successfully  done  cockroach  database

2033
02:10:18,000 --> 02:10:21,000
is  up  so  now  we're  starting  to  get  the  proper  logs  that

2034
02:10:21,000 --> 02:10:24,000
we  expect  so  my  guess  is  it  had  something  to

2035
02:10:24,000 --> 02:10:27,000
do  with  the  lack  of  ram  that  we  had  so  let's  try

2036
02:10:27,000 --> 02:10:30,000
that  we'll  refresh  and  there  we  go  so  you  can  see

2037
02:10:30,000 --> 02:10:41,000
now  we  have  nakama  running  out  on  our  website  which  is  198919980118

2038
02:10:41,000 --> 02:10:43,000
and  you  guys  of  course  can  go

2039
02:10:43,000 --> 02:10:47,000
to  this  and  use  it  so  if  you  type  admin  password  you

2040
02:10:47,000 --> 02:10:51,000
can  see  we  have  our  nakama  instance  just  like  before

2041
02:10:51,000 --> 02:10:55,000
and  it's  exactly  the  same  so  you  guys  can  actually  use  this

2042
02:10:55,000 --> 02:10:58,000
for  your  own  project  providing  that  it

2043
02:10:58,000 --> 02:11:02,000
doesn't  get  shut  down  immediately  because  for  some  reason  it  gets  shut

2044
02:11:02,000 --> 02:11:04,000
down  sometimes  and  that  causes

2045
02:11:04,000 --> 02:11:09,000
some  issues  but  that's  how  easy  it  is  to  get  this  to

2046
02:11:09,000 --> 02:11:12,000
fire  off  now  and  in  order  to  detach  let's  hit

2047
02:11:12,000 --> 02:11:17,000
ctrl  c  we'll  stop  our  docker  connection  right  here  and  you'll  see

2048
02:11:17,000 --> 02:11:18,000
in  a  second  it's  going  to  gracefully

2049
02:11:18,000 --> 02:11:24,000
stop  so  we'll  give  it  a  minute  to  kill  everything  we'll  hit

2050
02:11:24,000 --> 02:11:27,000
docker  compose  up  dash  dash  detach

2051
02:11:28,000 --> 02:11:32,000
what  that  should  do  is  it  should  allow  us  to  fire  this

2052
02:11:32,000 --> 02:11:35,000
up  and  be  detached  and  there  you  go  so  now

2053
02:11:35,000 --> 02:11:38,000
we're  detached  so  if  we  hit  ps  you'll  see  that  it's  not

2054
02:11:38,000 --> 02:11:41,000
running  but  if  i  come  in  here  and  i  refresh  you

2055
02:11:41,000 --> 02:11:45,000
can  see  that  nakama  is  running  if  i  close  this  and  i

2056
02:11:45,000 --> 02:11:47,000
refresh  you'll  see  that  nakama  is  running

2057
02:11:48,000 --> 02:11:52,000
even  though  we  are  no  longer  connected  to  our  docker  instance  so

2058
02:11:52,000 --> 02:11:54,000
that's  how  we  can  actually  get  that  to

2059
02:11:54,000 --> 02:11:59,000
run  without  needing  to  keep  that  window  open  because  if  you  were

2060
02:11:59,000 --> 02:12:02,000
to  have  closed  the  window  when  nakama's

2061
02:12:02,000 --> 02:12:07,000
running  like  that  previously  without  running  the  dash  dash  detach  then  it

2062
02:12:07,000 --> 02:12:08,000
would  have  closed  that  docker

2063
02:12:08,000 --> 02:12:11,000
instance  and  then  your  whole  project  would  have  been  gone  so  that's

2064
02:12:11,000 --> 02:12:14,000
basically  how  that  works  so  now

2065
02:12:14,000 --> 02:12:17,000
if  we  head  out  to  godot  here  we  can  come  up  to

2066
02:12:17,000 --> 02:12:23,000
here  and  change  this  value  to  our  nakama  instance  so  if

2067
02:12:23,000 --> 02:12:27,000
we  come  in  here  you  can  see  here  is  our  nakama  instance

2068
02:12:27,000 --> 02:12:29,000
right  here  so  we'll  copy  that  we'll  paste

2069
02:12:29,000 --> 02:12:35,000
this  like  so  and  then  if  we  hit  play  you  will  see

2070
02:12:35,000 --> 02:12:41,000
that  we  can  now  submit  and  log  in  so  you'll  see  that

2071
02:12:41,000 --> 02:12:44,000
i  have  logged  in  so  now  if  i  take  a  look  at

2072
02:12:44,000 --> 02:12:49,000
my  nakama  instance  out  here  on  the  web  if  i  refresh  you'll

2073
02:12:49,000 --> 02:12:49,000
see

2074
02:12:49,000 --> 02:12:53,000
that  when  we  go  to  accounts  i  have  an  account  right  here

2075
02:12:53,000 --> 02:12:57,000
just  like  as  if  i  was  playing  the  game  locally

2076
02:12:57,000 --> 02:13:00,000
so  this  is  how  that  works  and  you  can  come  in  here

2077
02:13:00,000 --> 02:13:05,000
and  go  test  two  and  you'll  see  that  if  i  click  name

2078
02:13:05,000 --> 02:13:11,000
of  match  test  join  create  test  join  create  we  just  joined  our

2079
02:13:11,000 --> 02:13:14,000
match  and  then  if  the  host  says  start

2080
02:13:14,000 --> 02:13:18,000
game  and  then  start  game  you'll  see  that  we  both  started  our

2081
02:13:18,000 --> 02:13:21,000
game  now  something  here  is  broken  but  i

2082
02:13:21,000 --> 02:13:24,000
don't  think  that  that's  a  nakama  issue  i  think  that's  just  a

2083
02:13:24,000 --> 02:13:27,000
my  code  issue  so  you  can  see  that

2084
02:13:27,000 --> 02:13:32,000
we  are  transferring  the  data  as  expected  here  in  our  nakama  instance

2085
02:13:32,000 --> 02:13:34,000
so  we  do  have  the  presences  as

2086
02:13:34,000 --> 02:13:40,000
expected  but  i  feel  like  something  here  is  wonky  a  little  bit

2087
02:13:40,000 --> 02:13:42,000
and  i  think  that's  because  i'm  not  in  the

2088
02:13:42,000 --> 02:13:45,000
right  scene  to  do  this  i  think  i  have  to  go  to

2089
02:13:45,000 --> 02:13:49,000
game  manager  dot  tscn  if  you  remember  this  is  our  game

2090
02:13:49,000 --> 02:13:54,000
manager  here  so  let's  refresh  this  guy  let's  try  rerunning  it  so

2091
02:13:54,000 --> 02:13:59,000
we'll  hit  test  test  to  test  join

2092
02:13:59,000 --> 02:14:04,000
create  test  join  create  start  game  start  game  and  you  can  see

2093
02:14:04,000 --> 02:14:08,000
that  our  game  is  now  running  not  locally

2094
02:14:08,000 --> 02:14:12,000
anymore  so  this  will  work  with  your  friends  across  the  web  and

2095
02:14:12,000 --> 02:14:13,000
what  i'm  going  to  do  is  i'm  going  to  go

2096
02:14:13,000 --> 02:14:17,000
get  one  of  my  friends  and  i  will  have  him  hold  my

2097
02:14:17,000 --> 02:14:20,000
code  and  then  he  will  also  do  this  and  i'll  show

2098
02:14:20,000 --> 02:14:23,000
you  guys  that  it  does  work  out  on  the  internet  so  i

2099
02:14:23,000 --> 02:14:23,000
will  be  right  back

2100
02:14:26,000 --> 02:14:30,000
okay  and  then  hit  start  game  and  as  you  guys  can  see

2101
02:14:30,000 --> 02:14:34,000
right  here  my  friend  and  i  are  both  working

2102
02:14:34,000 --> 02:14:38,000
together  and  playing  the  same  game  at  the  same  time  over  the

2103
02:14:38,000 --> 02:14:41,000
internet  using  our  nakama  instance  now

2104
02:14:41,000 --> 02:14:44,000
you  can  see  here  that  there  is  a  little  bit  of  lag

2105
02:14:44,000 --> 02:14:46,000
and  i  think  the  reason  for  that  is  because

2106
02:14:46,000 --> 02:14:53,000
we're  flooding  the  actual  nakama  instance  because  it  has  a  bunch  of

2107
02:14:53,000 --> 02:14:55,000
data  that  it's  passing  through  so

2108
02:14:55,000 --> 02:14:58,000
we  should  probably  figure  out  a  better  way  to  optimize  this  but

2109
02:14:58,000 --> 02:15:00,000
at  least  we  have  it  working  for  now

2110
02:15:00,000 --> 02:15:05,000
so  at  this  point  we've  gone  through  quite  a  few  things  we

2111
02:15:05,000 --> 02:15:07,000
talked  about  groups  we  talked  about

2112
02:15:07,000 --> 02:15:10,000
chatting  and  we  talked  about  how  to  get  our  stuff  to  work

2113
02:15:10,000 --> 02:15:14,000
out  on  the  internet  for  our  project  and

2114
02:15:14,000 --> 02:15:18,000
allow  us  to  work  on  multiple  networks  with  each  other  so  if

2115
02:15:18,000 --> 02:15:19,000
you  like  this  video  go  and  hit  that

2116
02:15:19,000 --> 02:15:21,000
like  button  hey  you  know  if  you  dislike  this  video  go  and

2117
02:15:21,000 --> 02:15:23,000
hit  that  dislike  button  because  i  am  here  to

2118
02:15:23,000 --> 02:15:27,000
make  content  for  you  guys  this  video  was  a  viewer  suggested  video

2119
02:15:27,000 --> 02:15:28,000
so  if  you  have  any  suggestions  please

2120
02:15:28,000 --> 02:15:31,000
leave  them  in  the  comments  below  or  jump  on  my  github  link

2121
02:15:31,000 --> 02:15:33,000
is  in  the  description  and  put  in  a  service

2122
02:15:33,000 --> 02:15:35,000
ticket  and  i'll  be  more  than  happy  to  add  it  to  my

2123
02:15:35,000 --> 02:15:37,000
list  of  tutorials  for  the  future  and  hey  if  you

2124
02:15:37,000 --> 02:15:40,000
have  any  questions  or  comments  about  this  video  go  ahead  and  leave

2125
02:15:40,000 --> 02:15:42,000
them  in  the  comments  below  or  jump

2126
02:15:42,000 --> 02:15:44,000
on  my  discord  link  is  in  the  description  and  i'll  be  more

2127
02:15:44,000 --> 02:15:50,000
than  happy  to  help  you  out  but  that  is  all  i

2128
02:15:50,000 --> 02:15:54,000
again  for  watching  and  i  will  see  you  all  next  time  thanks

2129
02:16:20,000 --> 02:16:21,000
so

2130
02:16:21,000 --> 02:16:21,000
mm
